import { Store } from 'flux/utils';
import { MatrixError } from "matrix-js-sdk/src/http-api";
import { ActionPayload } from "../dispatcher/payloads";
declare const INITIAL_STATE: {
    joining: boolean;
    joinError: any;
    roomId: any;
    initialEventId: any;
    initialEventPixelOffset: any;
    isInitialEventHighlighted: boolean;
    roomAlias: any;
    roomLoading: boolean;
    roomLoadError: any;
    quotingEvent: any;
    replyingToEvent: any;
    shouldPeek: boolean;
    viaServers: any[];
    wasContextSwitch: boolean;
};
/**
 * A class for storing application state for RoomView. This is the RoomView's interface
*  with a subset of the js-sdk.
 *  ```
 */
declare class RoomViewStore extends Store<ActionPayload> {
    private state;
    constructor();
    setState(newState: Partial<typeof INITIAL_STATE>): void;
    __onDispatch(payload: any): void;
    private viewRoom;
    private viewRoomError;
    private joinRoom;
    private static getInvitingUserId;
    showJoinRoomError(err: Error | MatrixError, roomId: string): void;
    private joinRoomError;
    reset(): void;
    getRoomId(): any;
    getInitialEventId(): any;
    isInitialEventHighlighted(): boolean;
    getRoomAlias(): any;
    isRoomLoading(): boolean;
    getRoomLoadError(): any;
    isJoining(): boolean;
    getJoinError(): any;
    getQuotingEvent(): any;
    shouldPeek(): boolean;
    getWasContextSwitch(): boolean;
}
declare let singletonRoomViewStore: RoomViewStore;
export default singletonRoomViewStore;
