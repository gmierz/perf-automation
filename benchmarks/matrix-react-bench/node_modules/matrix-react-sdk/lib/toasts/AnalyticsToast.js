"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.showToast = exports.hideToast = void 0;

var _react = _interopRequireDefault(require("react"));

var _languageHandler = require("../languageHandler");

var _SdkConfig = _interopRequireDefault(require("../SdkConfig"));

var _dispatcher = _interopRequireDefault(require("../dispatcher/dispatcher"));

var _Analytics = _interopRequireDefault(require("../Analytics"));

var _AccessibleButton = _interopRequireDefault(require("../components/views/elements/AccessibleButton"));

var _GenericToast = _interopRequireDefault(require("../components/views/toasts/GenericToast"));

var _ToastStore = _interopRequireDefault(require("../stores/ToastStore"));

/*
Copyright 2020 The Matrix.org Foundation C.I.C.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
const onAccept = () => {
  _dispatcher.default.dispatch({
    action: 'accept_cookies'
  });
};

const onReject = () => {
  _dispatcher.default.dispatch({
    action: "reject_cookies"
  });
};

const onUsageDataClicked = () => {
  _Analytics.default.showDetailsModal();
};

const TOAST_KEY = "analytics";

const showToast = policyUrl => {
  const brand = _SdkConfig.default.get().brand;

  _ToastStore.default.sharedInstance().addOrReplaceToast({
    key: TOAST_KEY,
    title: (0, _languageHandler._t)("Help us improve %(brand)s", {
      brand
    }),
    props: {
      description: (0, _languageHandler._t)("Send <UsageDataLink>anonymous usage data</UsageDataLink> which helps us improve %(brand)s. " + "This will use a <PolicyLink>cookie</PolicyLink>.", {
        brand
      }, {
        "UsageDataLink": sub => /*#__PURE__*/_react.default.createElement(_AccessibleButton.default, {
          kind: "link",
          onClick: onUsageDataClicked
        }, sub),
        // XXX: We need to link to the page that explains our cookies
        "PolicyLink": sub => policyUrl ? /*#__PURE__*/_react.default.createElement("a", {
          target: "_blank",
          href: policyUrl
        }, sub) : sub
      }),
      acceptLabel: (0, _languageHandler._t)("Yes"),
      onAccept,
      rejectLabel: (0, _languageHandler._t)("No"),
      onReject
    },
    component: _GenericToast.default,
    className: "mx_AnalyticsToast",
    priority: 10
  });
};

exports.showToast = showToast;

const hideToast = () => {
  _ToastStore.default.sharedInstance().dismissToast(TOAST_KEY);
};

exports.hideToast = hideToast;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90b2FzdHMvQW5hbHl0aWNzVG9hc3QudHN4Il0sIm5hbWVzIjpbIm9uQWNjZXB0IiwiZGlzIiwiZGlzcGF0Y2giLCJhY3Rpb24iLCJvblJlamVjdCIsIm9uVXNhZ2VEYXRhQ2xpY2tlZCIsIkFuYWx5dGljcyIsInNob3dEZXRhaWxzTW9kYWwiLCJUT0FTVF9LRVkiLCJzaG93VG9hc3QiLCJwb2xpY3lVcmwiLCJicmFuZCIsIlNka0NvbmZpZyIsImdldCIsIlRvYXN0U3RvcmUiLCJzaGFyZWRJbnN0YW5jZSIsImFkZE9yUmVwbGFjZVRvYXN0Iiwia2V5IiwidGl0bGUiLCJwcm9wcyIsImRlc2NyaXB0aW9uIiwic3ViIiwiYWNjZXB0TGFiZWwiLCJyZWplY3RMYWJlbCIsImNvbXBvbmVudCIsIkdlbmVyaWNUb2FzdCIsImNsYXNzTmFtZSIsInByaW9yaXR5IiwiaGlkZVRvYXN0IiwiZGlzbWlzc1RvYXN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFnQkE7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBeEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVlBLE1BQU1BLFFBQVEsR0FBRyxNQUFNO0FBQ25CQyxzQkFBSUMsUUFBSixDQUFhO0FBQ1RDLElBQUFBLE1BQU0sRUFBRTtBQURDLEdBQWI7QUFHSCxDQUpEOztBQU1BLE1BQU1DLFFBQVEsR0FBRyxNQUFNO0FBQ25CSCxzQkFBSUMsUUFBSixDQUFhO0FBQ1RDLElBQUFBLE1BQU0sRUFBRTtBQURDLEdBQWI7QUFHSCxDQUpEOztBQU1BLE1BQU1FLGtCQUFrQixHQUFHLE1BQU07QUFDN0JDLHFCQUFVQyxnQkFBVjtBQUNILENBRkQ7O0FBSUEsTUFBTUMsU0FBUyxHQUFHLFdBQWxCOztBQUVPLE1BQU1DLFNBQVMsR0FBSUMsU0FBRCxJQUF3QjtBQUM3QyxRQUFNQyxLQUFLLEdBQUdDLG1CQUFVQyxHQUFWLEdBQWdCRixLQUE5Qjs7QUFDQUcsc0JBQVdDLGNBQVgsR0FBNEJDLGlCQUE1QixDQUE4QztBQUMxQ0MsSUFBQUEsR0FBRyxFQUFFVCxTQURxQztBQUUxQ1UsSUFBQUEsS0FBSyxFQUFFLHlCQUFHLDJCQUFILEVBQWdDO0FBQUVQLE1BQUFBO0FBQUYsS0FBaEMsQ0FGbUM7QUFHMUNRLElBQUFBLEtBQUssRUFBRTtBQUNIQyxNQUFBQSxXQUFXLEVBQUUseUJBQ1QsZ0dBQ0Esa0RBRlMsRUFHVDtBQUNJVCxRQUFBQTtBQURKLE9BSFMsRUFNVDtBQUNJLHlCQUFrQlUsR0FBRCxpQkFDYiw2QkFBQyx5QkFBRDtBQUFrQixVQUFBLElBQUksRUFBQyxNQUF2QjtBQUE4QixVQUFBLE9BQU8sRUFBRWhCO0FBQXZDLFdBQTZEZ0IsR0FBN0QsQ0FGUjtBQUlJO0FBQ0Esc0JBQWVBLEdBQUQsSUFBU1gsU0FBUyxnQkFDNUI7QUFBRyxVQUFBLE1BQU0sRUFBQyxRQUFWO0FBQW1CLFVBQUEsSUFBSSxFQUFFQTtBQUF6QixXQUFzQ1csR0FBdEMsQ0FENEIsR0FFNUJBO0FBUFIsT0FOUyxDQURWO0FBaUJIQyxNQUFBQSxXQUFXLEVBQUUseUJBQUcsS0FBSCxDQWpCVjtBQWtCSHRCLE1BQUFBLFFBbEJHO0FBbUJIdUIsTUFBQUEsV0FBVyxFQUFFLHlCQUFHLElBQUgsQ0FuQlY7QUFvQkhuQixNQUFBQTtBQXBCRyxLQUhtQztBQXlCMUNvQixJQUFBQSxTQUFTLEVBQUVDLHFCQXpCK0I7QUEwQjFDQyxJQUFBQSxTQUFTLEVBQUUsbUJBMUIrQjtBQTJCMUNDLElBQUFBLFFBQVEsRUFBRTtBQTNCZ0MsR0FBOUM7QUE2QkgsQ0EvQk07Ozs7QUFpQ0EsTUFBTUMsU0FBUyxHQUFHLE1BQU07QUFDM0JkLHNCQUFXQyxjQUFYLEdBQTRCYyxZQUE1QixDQUF5Q3JCLFNBQXpDO0FBQ0gsQ0FGTSIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5Db3B5cmlnaHQgMjAyMCBUaGUgTWF0cml4Lm9yZyBGb3VuZGF0aW9uIEMuSS5DLlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbmh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgeyBfdCB9IGZyb20gXCIuLi9sYW5ndWFnZUhhbmRsZXJcIjtcbmltcG9ydCBTZGtDb25maWcgZnJvbSBcIi4uL1Nka0NvbmZpZ1wiO1xuaW1wb3J0IGRpcyBmcm9tIFwiLi4vZGlzcGF0Y2hlci9kaXNwYXRjaGVyXCI7XG5pbXBvcnQgQW5hbHl0aWNzIGZyb20gXCIuLi9BbmFseXRpY3NcIjtcbmltcG9ydCBBY2Nlc3NpYmxlQnV0dG9uIGZyb20gXCIuLi9jb21wb25lbnRzL3ZpZXdzL2VsZW1lbnRzL0FjY2Vzc2libGVCdXR0b25cIjtcbmltcG9ydCBHZW5lcmljVG9hc3QgZnJvbSBcIi4uL2NvbXBvbmVudHMvdmlld3MvdG9hc3RzL0dlbmVyaWNUb2FzdFwiO1xuaW1wb3J0IFRvYXN0U3RvcmUgZnJvbSBcIi4uL3N0b3Jlcy9Ub2FzdFN0b3JlXCI7XG5cbmNvbnN0IG9uQWNjZXB0ID0gKCkgPT4ge1xuICAgIGRpcy5kaXNwYXRjaCh7XG4gICAgICAgIGFjdGlvbjogJ2FjY2VwdF9jb29raWVzJyxcbiAgICB9KTtcbn07XG5cbmNvbnN0IG9uUmVqZWN0ID0gKCkgPT4ge1xuICAgIGRpcy5kaXNwYXRjaCh7XG4gICAgICAgIGFjdGlvbjogXCJyZWplY3RfY29va2llc1wiLFxuICAgIH0pO1xufTtcblxuY29uc3Qgb25Vc2FnZURhdGFDbGlja2VkID0gKCkgPT4ge1xuICAgIEFuYWx5dGljcy5zaG93RGV0YWlsc01vZGFsKCk7XG59O1xuXG5jb25zdCBUT0FTVF9LRVkgPSBcImFuYWx5dGljc1wiO1xuXG5leHBvcnQgY29uc3Qgc2hvd1RvYXN0ID0gKHBvbGljeVVybD86IHN0cmluZykgPT4ge1xuICAgIGNvbnN0IGJyYW5kID0gU2RrQ29uZmlnLmdldCgpLmJyYW5kO1xuICAgIFRvYXN0U3RvcmUuc2hhcmVkSW5zdGFuY2UoKS5hZGRPclJlcGxhY2VUb2FzdCh7XG4gICAgICAgIGtleTogVE9BU1RfS0VZLFxuICAgICAgICB0aXRsZTogX3QoXCJIZWxwIHVzIGltcHJvdmUgJShicmFuZClzXCIsIHsgYnJhbmQgfSksXG4gICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogX3QoXG4gICAgICAgICAgICAgICAgXCJTZW5kIDxVc2FnZURhdGFMaW5rPmFub255bW91cyB1c2FnZSBkYXRhPC9Vc2FnZURhdGFMaW5rPiB3aGljaCBoZWxwcyB1cyBpbXByb3ZlICUoYnJhbmQpcy4gXCIgK1xuICAgICAgICAgICAgICAgIFwiVGhpcyB3aWxsIHVzZSBhIDxQb2xpY3lMaW5rPmNvb2tpZTwvUG9saWN5TGluaz4uXCIsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBicmFuZCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgXCJVc2FnZURhdGFMaW5rXCI6IChzdWIpID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxBY2Nlc3NpYmxlQnV0dG9uIGtpbmQ9XCJsaW5rXCIgb25DbGljaz17b25Vc2FnZURhdGFDbGlja2VkfT57IHN1YiB9PC9BY2Nlc3NpYmxlQnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAvLyBYWFg6IFdlIG5lZWQgdG8gbGluayB0byB0aGUgcGFnZSB0aGF0IGV4cGxhaW5zIG91ciBjb29raWVzXG4gICAgICAgICAgICAgICAgICAgIFwiUG9saWN5TGlua1wiOiAoc3ViKSA9PiBwb2xpY3lVcmwgPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9XCJfYmxhbmtcIiBocmVmPXtwb2xpY3lVcmx9Pnsgc3ViIH08L2E+XG4gICAgICAgICAgICAgICAgICAgICkgOiBzdWIsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICBhY2NlcHRMYWJlbDogX3QoXCJZZXNcIiksXG4gICAgICAgICAgICBvbkFjY2VwdCxcbiAgICAgICAgICAgIHJlamVjdExhYmVsOiBfdChcIk5vXCIpLFxuICAgICAgICAgICAgb25SZWplY3QsXG4gICAgICAgIH0sXG4gICAgICAgIGNvbXBvbmVudDogR2VuZXJpY1RvYXN0LFxuICAgICAgICBjbGFzc05hbWU6IFwibXhfQW5hbHl0aWNzVG9hc3RcIixcbiAgICAgICAgcHJpb3JpdHk6IDEwLFxuICAgIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IGhpZGVUb2FzdCA9ICgpID0+IHtcbiAgICBUb2FzdFN0b3JlLnNoYXJlZEluc3RhbmNlKCkuZGlzbWlzc1RvYXN0KFRPQVNUX0tFWSk7XG59O1xuIl19