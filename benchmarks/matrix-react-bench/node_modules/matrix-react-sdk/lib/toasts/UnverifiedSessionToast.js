"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.showToast = exports.hideToast = void 0;

var _languageHandler = require("../languageHandler");

var _dispatcher = _interopRequireDefault(require("../dispatcher/dispatcher"));

var _MatrixClientPeg = require("../MatrixClientPeg");

var _DeviceListener = _interopRequireDefault(require("../DeviceListener"));

var _ToastStore = _interopRequireDefault(require("../stores/ToastStore"));

var _GenericToast = _interopRequireDefault(require("../components/views/toasts/GenericToast"));

var _actions = require("../dispatcher/actions");

var _UserSettingsDialog = require("../components/views/dialogs/UserSettingsDialog");

/*
Copyright 2020 The Matrix.org Foundation C.I.C.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
function toastKey(deviceId) {
  return "unverified_session_" + deviceId;
}

const showToast = async deviceId => {
  const cli = _MatrixClientPeg.MatrixClientPeg.get();

  const onAccept = () => {
    _DeviceListener.default.sharedInstance().dismissUnverifiedSessions([deviceId]);

    _dispatcher.default.dispatch({
      action: _actions.Action.ViewUserSettings,
      initialTabId: _UserSettingsDialog.UserTab.Security
    });
  };

  const onReject = () => {
    _DeviceListener.default.sharedInstance().dismissUnverifiedSessions([deviceId]);
  };

  const device = await cli.getDevice(deviceId);

  _ToastStore.default.sharedInstance().addOrReplaceToast({
    key: toastKey(deviceId),
    title: (0, _languageHandler._t)("New login. Was this you?"),
    icon: "verification_warning",
    props: {
      description: device.display_name,
      detail: (0, _languageHandler._t)("%(deviceId)s from %(ip)s", {
        deviceId,
        ip: device.last_seen_ip
      }),
      acceptLabel: (0, _languageHandler._t)("Check your devices"),
      onAccept,
      rejectLabel: (0, _languageHandler._t)("Later"),
      onReject
    },
    component: _GenericToast.default,
    priority: 80
  });
};

exports.showToast = showToast;

const hideToast = deviceId => {
  _ToastStore.default.sharedInstance().dismissToast(toastKey(deviceId));
};

exports.hideToast = hideToast;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90b2FzdHMvVW52ZXJpZmllZFNlc3Npb25Ub2FzdC50cyJdLCJuYW1lcyI6WyJ0b2FzdEtleSIsImRldmljZUlkIiwic2hvd1RvYXN0IiwiY2xpIiwiTWF0cml4Q2xpZW50UGVnIiwiZ2V0Iiwib25BY2NlcHQiLCJEZXZpY2VMaXN0ZW5lciIsInNoYXJlZEluc3RhbmNlIiwiZGlzbWlzc1VudmVyaWZpZWRTZXNzaW9ucyIsImRpcyIsImRpc3BhdGNoIiwiYWN0aW9uIiwiQWN0aW9uIiwiVmlld1VzZXJTZXR0aW5ncyIsImluaXRpYWxUYWJJZCIsIlVzZXJUYWIiLCJTZWN1cml0eSIsIm9uUmVqZWN0IiwiZGV2aWNlIiwiZ2V0RGV2aWNlIiwiVG9hc3RTdG9yZSIsImFkZE9yUmVwbGFjZVRvYXN0Iiwia2V5IiwidGl0bGUiLCJpY29uIiwicHJvcHMiLCJkZXNjcmlwdGlvbiIsImRpc3BsYXlfbmFtZSIsImRldGFpbCIsImlwIiwibGFzdF9zZWVuX2lwIiwiYWNjZXB0TGFiZWwiLCJyZWplY3RMYWJlbCIsImNvbXBvbmVudCIsIkdlbmVyaWNUb2FzdCIsInByaW9yaXR5IiwiaGlkZVRvYXN0IiwiZGlzbWlzc1RvYXN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFnQkE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBdkJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVdBLFNBQVNBLFFBQVQsQ0FBa0JDLFFBQWxCLEVBQW9DO0FBQ2hDLFNBQU8sd0JBQXdCQSxRQUEvQjtBQUNIOztBQUVNLE1BQU1DLFNBQVMsR0FBRyxNQUFPRCxRQUFQLElBQTRCO0FBQ2pELFFBQU1FLEdBQUcsR0FBR0MsaUNBQWdCQyxHQUFoQixFQUFaOztBQUVBLFFBQU1DLFFBQVEsR0FBRyxNQUFNO0FBQ25CQyw0QkFBZUMsY0FBZixHQUFnQ0MseUJBQWhDLENBQTBELENBQUNSLFFBQUQsQ0FBMUQ7O0FBQ0FTLHdCQUFJQyxRQUFKLENBQWE7QUFDVEMsTUFBQUEsTUFBTSxFQUFFQyxnQkFBT0MsZ0JBRE47QUFFVEMsTUFBQUEsWUFBWSxFQUFFQyw0QkFBUUM7QUFGYixLQUFiO0FBSUgsR0FORDs7QUFRQSxRQUFNQyxRQUFRLEdBQUcsTUFBTTtBQUNuQlgsNEJBQWVDLGNBQWYsR0FBZ0NDLHlCQUFoQyxDQUEwRCxDQUFDUixRQUFELENBQTFEO0FBQ0gsR0FGRDs7QUFJQSxRQUFNa0IsTUFBTSxHQUFHLE1BQU1oQixHQUFHLENBQUNpQixTQUFKLENBQWNuQixRQUFkLENBQXJCOztBQUVBb0Isc0JBQVdiLGNBQVgsR0FBNEJjLGlCQUE1QixDQUE4QztBQUMxQ0MsSUFBQUEsR0FBRyxFQUFFdkIsUUFBUSxDQUFDQyxRQUFELENBRDZCO0FBRTFDdUIsSUFBQUEsS0FBSyxFQUFFLHlCQUFHLDBCQUFILENBRm1DO0FBRzFDQyxJQUFBQSxJQUFJLEVBQUUsc0JBSG9DO0FBSTFDQyxJQUFBQSxLQUFLLEVBQUU7QUFDSEMsTUFBQUEsV0FBVyxFQUFFUixNQUFNLENBQUNTLFlBRGpCO0FBRUhDLE1BQUFBLE1BQU0sRUFBRSx5QkFBRywwQkFBSCxFQUErQjtBQUNuQzVCLFFBQUFBLFFBRG1DO0FBRW5DNkIsUUFBQUEsRUFBRSxFQUFFWCxNQUFNLENBQUNZO0FBRndCLE9BQS9CLENBRkw7QUFNSEMsTUFBQUEsV0FBVyxFQUFFLHlCQUFHLG9CQUFILENBTlY7QUFPSDFCLE1BQUFBLFFBUEc7QUFRSDJCLE1BQUFBLFdBQVcsRUFBRSx5QkFBRyxPQUFILENBUlY7QUFTSGYsTUFBQUE7QUFURyxLQUptQztBQWUxQ2dCLElBQUFBLFNBQVMsRUFBRUMscUJBZitCO0FBZ0IxQ0MsSUFBQUEsUUFBUSxFQUFFO0FBaEJnQyxHQUE5QztBQWtCSCxDQW5DTTs7OztBQXFDQSxNQUFNQyxTQUFTLEdBQUlwQyxRQUFELElBQXNCO0FBQzNDb0Isc0JBQVdiLGNBQVgsR0FBNEI4QixZQUE1QixDQUF5Q3RDLFFBQVEsQ0FBQ0MsUUFBRCxDQUFqRDtBQUNILENBRk0iLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQ29weXJpZ2h0IDIwMjAgVGhlIE1hdHJpeC5vcmcgRm91bmRhdGlvbiBDLkkuQy5cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG5odHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCB7IF90IH0gZnJvbSAnLi4vbGFuZ3VhZ2VIYW5kbGVyJztcbmltcG9ydCBkaXMgZnJvbSBcIi4uL2Rpc3BhdGNoZXIvZGlzcGF0Y2hlclwiO1xuaW1wb3J0IHsgTWF0cml4Q2xpZW50UGVnIH0gZnJvbSAnLi4vTWF0cml4Q2xpZW50UGVnJztcbmltcG9ydCBEZXZpY2VMaXN0ZW5lciBmcm9tICcuLi9EZXZpY2VMaXN0ZW5lcic7XG5pbXBvcnQgVG9hc3RTdG9yZSBmcm9tIFwiLi4vc3RvcmVzL1RvYXN0U3RvcmVcIjtcbmltcG9ydCBHZW5lcmljVG9hc3QgZnJvbSBcIi4uL2NvbXBvbmVudHMvdmlld3MvdG9hc3RzL0dlbmVyaWNUb2FzdFwiO1xuaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSBcIi4uL2Rpc3BhdGNoZXIvYWN0aW9uc1wiO1xuaW1wb3J0IHsgVXNlclRhYiB9IGZyb20gXCIuLi9jb21wb25lbnRzL3ZpZXdzL2RpYWxvZ3MvVXNlclNldHRpbmdzRGlhbG9nXCI7XG5cbmZ1bmN0aW9uIHRvYXN0S2V5KGRldmljZUlkOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gXCJ1bnZlcmlmaWVkX3Nlc3Npb25fXCIgKyBkZXZpY2VJZDtcbn1cblxuZXhwb3J0IGNvbnN0IHNob3dUb2FzdCA9IGFzeW5jIChkZXZpY2VJZDogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgY2xpID0gTWF0cml4Q2xpZW50UGVnLmdldCgpO1xuXG4gICAgY29uc3Qgb25BY2NlcHQgPSAoKSA9PiB7XG4gICAgICAgIERldmljZUxpc3RlbmVyLnNoYXJlZEluc3RhbmNlKCkuZGlzbWlzc1VudmVyaWZpZWRTZXNzaW9ucyhbZGV2aWNlSWRdKTtcbiAgICAgICAgZGlzLmRpc3BhdGNoKHtcbiAgICAgICAgICAgIGFjdGlvbjogQWN0aW9uLlZpZXdVc2VyU2V0dGluZ3MsXG4gICAgICAgICAgICBpbml0aWFsVGFiSWQ6IFVzZXJUYWIuU2VjdXJpdHksXG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBjb25zdCBvblJlamVjdCA9ICgpID0+IHtcbiAgICAgICAgRGV2aWNlTGlzdGVuZXIuc2hhcmVkSW5zdGFuY2UoKS5kaXNtaXNzVW52ZXJpZmllZFNlc3Npb25zKFtkZXZpY2VJZF0pO1xuICAgIH07XG5cbiAgICBjb25zdCBkZXZpY2UgPSBhd2FpdCBjbGkuZ2V0RGV2aWNlKGRldmljZUlkKTtcblxuICAgIFRvYXN0U3RvcmUuc2hhcmVkSW5zdGFuY2UoKS5hZGRPclJlcGxhY2VUb2FzdCh7XG4gICAgICAgIGtleTogdG9hc3RLZXkoZGV2aWNlSWQpLFxuICAgICAgICB0aXRsZTogX3QoXCJOZXcgbG9naW4uIFdhcyB0aGlzIHlvdT9cIiksXG4gICAgICAgIGljb246IFwidmVyaWZpY2F0aW9uX3dhcm5pbmdcIixcbiAgICAgICAgcHJvcHM6IHtcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBkZXZpY2UuZGlzcGxheV9uYW1lLFxuICAgICAgICAgICAgZGV0YWlsOiBfdChcIiUoZGV2aWNlSWQpcyBmcm9tICUoaXApc1wiLCB7XG4gICAgICAgICAgICAgICAgZGV2aWNlSWQsXG4gICAgICAgICAgICAgICAgaXA6IGRldmljZS5sYXN0X3NlZW5faXAsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIGFjY2VwdExhYmVsOiBfdChcIkNoZWNrIHlvdXIgZGV2aWNlc1wiKSxcbiAgICAgICAgICAgIG9uQWNjZXB0LFxuICAgICAgICAgICAgcmVqZWN0TGFiZWw6IF90KFwiTGF0ZXJcIiksXG4gICAgICAgICAgICBvblJlamVjdCxcbiAgICAgICAgfSxcbiAgICAgICAgY29tcG9uZW50OiBHZW5lcmljVG9hc3QsXG4gICAgICAgIHByaW9yaXR5OiA4MCxcbiAgICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBoaWRlVG9hc3QgPSAoZGV2aWNlSWQ6IHN0cmluZykgPT4ge1xuICAgIFRvYXN0U3RvcmUuc2hhcmVkSW5zdGFuY2UoKS5kaXNtaXNzVG9hc3QodG9hc3RLZXkoZGV2aWNlSWQpKTtcbn07XG4iXX0=