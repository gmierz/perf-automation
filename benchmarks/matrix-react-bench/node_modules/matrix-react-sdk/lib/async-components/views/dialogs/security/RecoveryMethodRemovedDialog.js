"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _dispatcher = _interopRequireDefault(require("../../../../dispatcher/dispatcher"));

var _languageHandler = require("../../../../languageHandler");

var _Modal = _interopRequireDefault(require("../../../../Modal"));

var _actions = require("../../../../dispatcher/actions");

var _BaseDialog = _interopRequireDefault(require("../../../../components/views/dialogs/BaseDialog"));

var _DialogButtons = _interopRequireDefault(require("../../../../components/views/elements/DialogButtons"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class RecoveryMethodRemovedDialog extends _react.default.PureComponent {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "onGoToSettingsClick", () => {
      this.props.onFinished();

      _dispatcher.default.fire(_actions.Action.ViewUserSettings);
    });
    (0, _defineProperty2.default)(this, "onSetupClick", () => {
      this.props.onFinished();

      _Modal.default.createTrackedDialogAsync("Key Backup", "Key Backup", Promise.resolve().then(() => _interopRequireWildcard(require("./CreateKeyBackupDialog"))), null, null,
      /* priority = */
      false,
      /* static = */
      true);
    });
  }

  render() {
    const title = /*#__PURE__*/_react.default.createElement("span", {
      className: "mx_KeyBackupFailedDialog_title"
    }, (0, _languageHandler._t)("Recovery Method Removed"));

    return /*#__PURE__*/_react.default.createElement(_BaseDialog.default, {
      className: "mx_KeyBackupFailedDialog",
      onFinished: this.props.onFinished,
      title: title
    }, /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("p", null, (0, _languageHandler._t)("This session has detected that your Security Phrase and key " + "for Secure Messages have been removed.")), /*#__PURE__*/_react.default.createElement("p", null, (0, _languageHandler._t)("If you did this accidentally, you can setup Secure Messages on " + "this session which will re-encrypt this session's message " + "history with a new recovery method.")), /*#__PURE__*/_react.default.createElement("p", {
      className: "warning"
    }, (0, _languageHandler._t)("If you didn't remove the recovery method, an " + "attacker may be trying to access your account. " + "Change your account password and set a new recovery " + "method immediately in Settings.")), /*#__PURE__*/_react.default.createElement(_DialogButtons.default, {
      primaryButton: (0, _languageHandler._t)("Set up Secure Messages"),
      onPrimaryButtonClick: this.onSetupClick,
      cancelButton: (0, _languageHandler._t)("Go to Settings"),
      onCancel: this.onGoToSettingsClick
    })));
  }

}

exports.default = RecoveryMethodRemovedDialog;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9hc3luYy1jb21wb25lbnRzL3ZpZXdzL2RpYWxvZ3Mvc2VjdXJpdHkvUmVjb3ZlcnlNZXRob2RSZW1vdmVkRGlhbG9nLnRzeCJdLCJuYW1lcyI6WyJSZWNvdmVyeU1ldGhvZFJlbW92ZWREaWFsb2ciLCJSZWFjdCIsIlB1cmVDb21wb25lbnQiLCJwcm9wcyIsIm9uRmluaXNoZWQiLCJkaXMiLCJmaXJlIiwiQWN0aW9uIiwiVmlld1VzZXJTZXR0aW5ncyIsIk1vZGFsIiwiY3JlYXRlVHJhY2tlZERpYWxvZ0FzeW5jIiwicmVuZGVyIiwidGl0bGUiLCJvblNldHVwQ2xpY2siLCJvbkdvVG9TZXR0aW5nc0NsaWNrIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQWlCQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7Ozs7O0FBSWUsTUFBTUEsMkJBQU4sU0FBMENDLGVBQU1DLGFBQWhELENBQXNFO0FBQUE7QUFBQTtBQUFBLCtEQUNuRCxNQUFZO0FBQ3RDLFdBQUtDLEtBQUwsQ0FBV0MsVUFBWDs7QUFDQUMsMEJBQUlDLElBQUosQ0FBU0MsZ0JBQU9DLGdCQUFoQjtBQUNILEtBSmdGO0FBQUEsd0RBTTFELE1BQVk7QUFDL0IsV0FBS0wsS0FBTCxDQUFXQyxVQUFYOztBQUNBSyxxQkFBTUMsd0JBQU4sQ0FBK0IsWUFBL0IsRUFBNkMsWUFBN0MsK0RBQ1cseUJBRFgsS0FFSSxJQUZKLEVBRVUsSUFGVjtBQUVnQjtBQUFpQixXQUZqQztBQUV3QztBQUFlLFVBRnZEO0FBSUgsS0FaZ0Y7QUFBQTs7QUFjMUVDLEVBQUFBLE1BQU0sR0FBZ0I7QUFDekIsVUFBTUMsS0FBSyxnQkFBRztBQUFNLE1BQUEsU0FBUyxFQUFDO0FBQWhCLE9BQ1IseUJBQUcseUJBQUgsQ0FEUSxDQUFkOztBQUlBLHdCQUNJLDZCQUFDLG1CQUFEO0FBQVksTUFBQSxTQUFTLEVBQUMsMEJBQXRCO0FBQ0ksTUFBQSxVQUFVLEVBQUUsS0FBS1QsS0FBTCxDQUFXQyxVQUQzQjtBQUVJLE1BQUEsS0FBSyxFQUFFUTtBQUZYLG9CQUlJLHVEQUNJLHdDQUFLLHlCQUNELGlFQUNBLHdDQUZDLENBQUwsQ0FESixlQUtJLHdDQUFLLHlCQUNELG9FQUNBLDREQURBLEdBRUEscUNBSEMsQ0FBTCxDQUxKLGVBVUk7QUFBRyxNQUFBLFNBQVMsRUFBQztBQUFiLE9BQXlCLHlCQUNyQixrREFDQSxpREFEQSxHQUVBLHNEQUZBLEdBR0EsaUNBSnFCLENBQXpCLENBVkosZUFnQkksNkJBQUMsc0JBQUQ7QUFDSSxNQUFBLGFBQWEsRUFBRSx5QkFBRyx3QkFBSCxDQURuQjtBQUVJLE1BQUEsb0JBQW9CLEVBQUUsS0FBS0MsWUFGL0I7QUFHSSxNQUFBLFlBQVksRUFBRSx5QkFBRyxnQkFBSCxDQUhsQjtBQUlJLE1BQUEsUUFBUSxFQUFFLEtBQUtDO0FBSm5CLE1BaEJKLENBSkosQ0FESjtBQThCSDs7QUFqRGdGIiwic291cmNlc0NvbnRlbnQiOlsiLypcbkNvcHlyaWdodCAyMDE5IE5ldyBWZWN0b3IgTHRkXG5Db3B5cmlnaHQgMjAyMCBUaGUgTWF0cml4Lm9yZyBGb3VuZGF0aW9uIEMuSS5DLlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnRUeXBlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgZGlzIGZyb20gXCIuLi8uLi8uLi8uLi9kaXNwYXRjaGVyL2Rpc3BhdGNoZXJcIjtcbmltcG9ydCB7IF90IH0gZnJvbSBcIi4uLy4uLy4uLy4uL2xhbmd1YWdlSGFuZGxlclwiO1xuaW1wb3J0IE1vZGFsIGZyb20gXCIuLi8uLi8uLi8uLi9Nb2RhbFwiO1xuaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSBcIi4uLy4uLy4uLy4uL2Rpc3BhdGNoZXIvYWN0aW9uc1wiO1xuaW1wb3J0IHsgSURpYWxvZ1Byb3BzIH0gZnJvbSBcIi4uLy4uLy4uLy4uL2NvbXBvbmVudHMvdmlld3MvZGlhbG9ncy9JRGlhbG9nUHJvcHNcIjtcbmltcG9ydCBCYXNlRGlhbG9nIGZyb20gXCIuLi8uLi8uLi8uLi9jb21wb25lbnRzL3ZpZXdzL2RpYWxvZ3MvQmFzZURpYWxvZ1wiO1xuaW1wb3J0IERpYWxvZ0J1dHRvbnMgZnJvbSBcIi4uLy4uLy4uLy4uL2NvbXBvbmVudHMvdmlld3MvZWxlbWVudHMvRGlhbG9nQnV0dG9uc1wiO1xuXG5pbnRlcmZhY2UgSVByb3BzIGV4dGVuZHMgSURpYWxvZ1Byb3BzIHt9XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlY292ZXJ5TWV0aG9kUmVtb3ZlZERpYWxvZyBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQ8SVByb3BzPiB7XG4gICAgcHJpdmF0ZSBvbkdvVG9TZXR0aW5nc0NsaWNrID0gKCk6IHZvaWQgPT4ge1xuICAgICAgICB0aGlzLnByb3BzLm9uRmluaXNoZWQoKTtcbiAgICAgICAgZGlzLmZpcmUoQWN0aW9uLlZpZXdVc2VyU2V0dGluZ3MpO1xuICAgIH07XG5cbiAgICBwcml2YXRlIG9uU2V0dXBDbGljayA9ICgpOiB2b2lkID0+IHtcbiAgICAgICAgdGhpcy5wcm9wcy5vbkZpbmlzaGVkKCk7XG4gICAgICAgIE1vZGFsLmNyZWF0ZVRyYWNrZWREaWFsb2dBc3luYyhcIktleSBCYWNrdXBcIiwgXCJLZXkgQmFja3VwXCIsXG4gICAgICAgICAgICBpbXBvcnQoXCIuL0NyZWF0ZUtleUJhY2t1cERpYWxvZ1wiKSBhcyB1bmtub3duIGFzIFByb21pc2U8Q29tcG9uZW50VHlwZTx7fT4+LFxuICAgICAgICAgICAgbnVsbCwgbnVsbCwgLyogcHJpb3JpdHkgPSAqLyBmYWxzZSwgLyogc3RhdGljID0gKi8gdHJ1ZSxcbiAgICAgICAgKTtcbiAgICB9O1xuXG4gICAgcHVibGljIHJlbmRlcigpOiBKU1guRWxlbWVudCB7XG4gICAgICAgIGNvbnN0IHRpdGxlID0gPHNwYW4gY2xhc3NOYW1lPVwibXhfS2V5QmFja3VwRmFpbGVkRGlhbG9nX3RpdGxlXCI+XG4gICAgICAgICAgICB7IF90KFwiUmVjb3ZlcnkgTWV0aG9kIFJlbW92ZWRcIikgfVxuICAgICAgICA8L3NwYW4+O1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8QmFzZURpYWxvZyBjbGFzc05hbWU9XCJteF9LZXlCYWNrdXBGYWlsZWREaWFsb2dcIlxuICAgICAgICAgICAgICAgIG9uRmluaXNoZWQ9e3RoaXMucHJvcHMub25GaW5pc2hlZH1cbiAgICAgICAgICAgICAgICB0aXRsZT17dGl0bGV9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPHA+eyBfdChcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiVGhpcyBzZXNzaW9uIGhhcyBkZXRlY3RlZCB0aGF0IHlvdXIgU2VjdXJpdHkgUGhyYXNlIGFuZCBrZXkgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJmb3IgU2VjdXJlIE1lc3NhZ2VzIGhhdmUgYmVlbiByZW1vdmVkLlwiLFxuICAgICAgICAgICAgICAgICAgICApIH08L3A+XG4gICAgICAgICAgICAgICAgICAgIDxwPnsgX3QoXG4gICAgICAgICAgICAgICAgICAgICAgICBcIklmIHlvdSBkaWQgdGhpcyBhY2NpZGVudGFsbHksIHlvdSBjYW4gc2V0dXAgU2VjdXJlIE1lc3NhZ2VzIG9uIFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwidGhpcyBzZXNzaW9uIHdoaWNoIHdpbGwgcmUtZW5jcnlwdCB0aGlzIHNlc3Npb24ncyBtZXNzYWdlIFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiaGlzdG9yeSB3aXRoIGEgbmV3IHJlY292ZXJ5IG1ldGhvZC5cIixcbiAgICAgICAgICAgICAgICAgICAgKSB9PC9wPlxuICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ3YXJuaW5nXCI+eyBfdChcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiSWYgeW91IGRpZG4ndCByZW1vdmUgdGhlIHJlY292ZXJ5IG1ldGhvZCwgYW4gXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJhdHRhY2tlciBtYXkgYmUgdHJ5aW5nIHRvIGFjY2VzcyB5b3VyIGFjY291bnQuIFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiQ2hhbmdlIHlvdXIgYWNjb3VudCBwYXNzd29yZCBhbmQgc2V0IGEgbmV3IHJlY292ZXJ5IFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwibWV0aG9kIGltbWVkaWF0ZWx5IGluIFNldHRpbmdzLlwiLFxuICAgICAgICAgICAgICAgICAgICApIH08L3A+XG4gICAgICAgICAgICAgICAgICAgIDxEaWFsb2dCdXR0b25zXG4gICAgICAgICAgICAgICAgICAgICAgICBwcmltYXJ5QnV0dG9uPXtfdChcIlNldCB1cCBTZWN1cmUgTWVzc2FnZXNcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICBvblByaW1hcnlCdXR0b25DbGljaz17dGhpcy5vblNldHVwQ2xpY2t9XG4gICAgICAgICAgICAgICAgICAgICAgICBjYW5jZWxCdXR0b249e190KFwiR28gdG8gU2V0dGluZ3NcIil9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNhbmNlbD17dGhpcy5vbkdvVG9TZXR0aW5nc0NsaWNrfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9CYXNlRGlhbG9nPlxuICAgICAgICApO1xuICAgIH1cbn1cbiJdfQ==