"use strict";

let hasCalled = false;

function remoteRender(event) {
  const data = event.data; // If we're handling secondary calls, start from scratch

  if (hasCalled) {
    document.body.replaceWith(document.createElement("BODY"));
  }

  hasCalled = true;
  const img = document.createElement("span"); // we'll mask it as an image

  img.id = "img";
  const a = document.createElement("a");
  a.id = "a";
  a.rel = "noreferrer noopener";
  a.download = data.download; // @ts-ignore

  a.style = data.style;
  a.style.fontFamily = "Arial, Helvetica, Sans-Serif";
  a.href = window.URL.createObjectURL(data.blob);
  a.appendChild(img);
  a.appendChild(document.createTextNode(data.textContent)); // Apply image style after so we can steal the anchor's colour.
  // Style copied from a rendered version of mx_MFileBody_download_icon

  if (data.imgStyle) {
    // @ts-ignore
    img.style = data.imgStyle;
  } else {
    img.style.width = "12px";
    img.style.height = "12px";
    img.style.webkitMaskSize = "12px";
    img.style.webkitMaskPosition = "center";
    img.style.webkitMaskRepeat = "no-repeat";
    img.style.display = "inline-block";
    img.style.webkitMaskImage = `url('${data.imgSrc}')`;
    img.style.backgroundColor = `${a.style.color}`;
  }

  const body = document.body; // Don't display scrollbars if the link takes more than one line to display.

  body.style.margin = "0px";
  body.style.overflow = "hidden";
  body.appendChild(a);

  if (event.data.auto) {
    a.click(); // try to trigger download automatically
  }
}

window.onmessage = function (e) {
  if (e.origin === window.location.origin) {
    if (e.data.blob) remoteRender(e);
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91c2VyY29udGVudC9pbmRleC50cyJdLCJuYW1lcyI6WyJoYXNDYWxsZWQiLCJyZW1vdGVSZW5kZXIiLCJldmVudCIsImRhdGEiLCJkb2N1bWVudCIsImJvZHkiLCJyZXBsYWNlV2l0aCIsImNyZWF0ZUVsZW1lbnQiLCJpbWciLCJpZCIsImEiLCJyZWwiLCJkb3dubG9hZCIsInN0eWxlIiwiZm9udEZhbWlseSIsImhyZWYiLCJ3aW5kb3ciLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJibG9iIiwiYXBwZW5kQ2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsInRleHRDb250ZW50IiwiaW1nU3R5bGUiLCJ3aWR0aCIsImhlaWdodCIsIndlYmtpdE1hc2tTaXplIiwid2Via2l0TWFza1Bvc2l0aW9uIiwid2Via2l0TWFza1JlcGVhdCIsImRpc3BsYXkiLCJ3ZWJraXRNYXNrSW1hZ2UiLCJpbWdTcmMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJjb2xvciIsIm1hcmdpbiIsIm92ZXJmbG93IiwiYXV0byIsImNsaWNrIiwib25tZXNzYWdlIiwiZSIsIm9yaWdpbiIsImxvY2F0aW9uIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFNBQVMsR0FBRyxLQUFoQjs7QUFDQSxTQUFTQyxZQUFULENBQXNCQyxLQUF0QixFQUFpRDtBQUM3QyxRQUFNQyxJQUFJLEdBQUdELEtBQUssQ0FBQ0MsSUFBbkIsQ0FENkMsQ0FHN0M7O0FBQ0EsTUFBSUgsU0FBSixFQUFlO0FBQ1hJLElBQUFBLFFBQVEsQ0FBQ0MsSUFBVCxDQUFjQyxXQUFkLENBQTBCRixRQUFRLENBQUNHLGFBQVQsQ0FBdUIsTUFBdkIsQ0FBMUI7QUFDSDs7QUFDRFAsRUFBQUEsU0FBUyxHQUFHLElBQVo7QUFFQSxRQUFNUSxHQUFvQixHQUFHSixRQUFRLENBQUNHLGFBQVQsQ0FBdUIsTUFBdkIsQ0FBN0IsQ0FUNkMsQ0FTZ0I7O0FBQzdEQyxFQUFBQSxHQUFHLENBQUNDLEVBQUosR0FBUyxLQUFUO0FBRUEsUUFBTUMsQ0FBb0IsR0FBR04sUUFBUSxDQUFDRyxhQUFULENBQXVCLEdBQXZCLENBQTdCO0FBQ0FHLEVBQUFBLENBQUMsQ0FBQ0QsRUFBRixHQUFPLEdBQVA7QUFDQUMsRUFBQUEsQ0FBQyxDQUFDQyxHQUFGLEdBQVEscUJBQVI7QUFDQUQsRUFBQUEsQ0FBQyxDQUFDRSxRQUFGLEdBQWFULElBQUksQ0FBQ1MsUUFBbEIsQ0FmNkMsQ0FnQjdDOztBQUNBRixFQUFBQSxDQUFDLENBQUNHLEtBQUYsR0FBVVYsSUFBSSxDQUFDVSxLQUFmO0FBQ0FILEVBQUFBLENBQUMsQ0FBQ0csS0FBRixDQUFRQyxVQUFSLEdBQXFCLDhCQUFyQjtBQUNBSixFQUFBQSxDQUFDLENBQUNLLElBQUYsR0FBU0MsTUFBTSxDQUFDQyxHQUFQLENBQVdDLGVBQVgsQ0FBMkJmLElBQUksQ0FBQ2dCLElBQWhDLENBQVQ7QUFDQVQsRUFBQUEsQ0FBQyxDQUFDVSxXQUFGLENBQWNaLEdBQWQ7QUFDQUUsRUFBQUEsQ0FBQyxDQUFDVSxXQUFGLENBQWNoQixRQUFRLENBQUNpQixjQUFULENBQXdCbEIsSUFBSSxDQUFDbUIsV0FBN0IsQ0FBZCxFQXJCNkMsQ0F1QjdDO0FBQ0E7O0FBQ0EsTUFBSW5CLElBQUksQ0FBQ29CLFFBQVQsRUFBbUI7QUFDZjtBQUNBZixJQUFBQSxHQUFHLENBQUNLLEtBQUosR0FBWVYsSUFBSSxDQUFDb0IsUUFBakI7QUFDSCxHQUhELE1BR087QUFDSGYsSUFBQUEsR0FBRyxDQUFDSyxLQUFKLENBQVVXLEtBQVYsR0FBa0IsTUFBbEI7QUFDQWhCLElBQUFBLEdBQUcsQ0FBQ0ssS0FBSixDQUFVWSxNQUFWLEdBQW1CLE1BQW5CO0FBQ0FqQixJQUFBQSxHQUFHLENBQUNLLEtBQUosQ0FBVWEsY0FBVixHQUEyQixNQUEzQjtBQUNBbEIsSUFBQUEsR0FBRyxDQUFDSyxLQUFKLENBQVVjLGtCQUFWLEdBQStCLFFBQS9CO0FBQ0FuQixJQUFBQSxHQUFHLENBQUNLLEtBQUosQ0FBVWUsZ0JBQVYsR0FBNkIsV0FBN0I7QUFDQXBCLElBQUFBLEdBQUcsQ0FBQ0ssS0FBSixDQUFVZ0IsT0FBVixHQUFvQixjQUFwQjtBQUNBckIsSUFBQUEsR0FBRyxDQUFDSyxLQUFKLENBQVVpQixlQUFWLEdBQTZCLFFBQU8zQixJQUFJLENBQUM0QixNQUFPLElBQWhEO0FBQ0F2QixJQUFBQSxHQUFHLENBQUNLLEtBQUosQ0FBVW1CLGVBQVYsR0FBNkIsR0FBRXRCLENBQUMsQ0FBQ0csS0FBRixDQUFRb0IsS0FBTSxFQUE3QztBQUNIOztBQUVELFFBQU01QixJQUFJLEdBQUdELFFBQVEsQ0FBQ0MsSUFBdEIsQ0F2QzZDLENBd0M3Qzs7QUFDQUEsRUFBQUEsSUFBSSxDQUFDUSxLQUFMLENBQVlxQixNQUFaLEdBQXFCLEtBQXJCO0FBQ0E3QixFQUFBQSxJQUFJLENBQUNRLEtBQUwsQ0FBV3NCLFFBQVgsR0FBc0IsUUFBdEI7QUFDQTlCLEVBQUFBLElBQUksQ0FBQ2UsV0FBTCxDQUFpQlYsQ0FBakI7O0FBRUEsTUFBSVIsS0FBSyxDQUFDQyxJQUFOLENBQVdpQyxJQUFmLEVBQXFCO0FBQ2pCMUIsSUFBQUEsQ0FBQyxDQUFDMkIsS0FBRixHQURpQixDQUNOO0FBQ2Q7QUFDSjs7QUFFRHJCLE1BQU0sQ0FBQ3NCLFNBQVAsR0FBbUIsVUFBU0MsQ0FBVCxFQUFnQztBQUMvQyxNQUFJQSxDQUFDLENBQUNDLE1BQUYsS0FBYXhCLE1BQU0sQ0FBQ3lCLFFBQVAsQ0FBZ0JELE1BQWpDLEVBQXlDO0FBQ3JDLFFBQUlELENBQUMsQ0FBQ3BDLElBQUYsQ0FBT2dCLElBQVgsRUFBaUJsQixZQUFZLENBQUNzQyxDQUFELENBQVo7QUFDcEI7QUFDSixDQUpEIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGhhc0NhbGxlZCA9IGZhbHNlO1xuZnVuY3Rpb24gcmVtb3RlUmVuZGVyKGV2ZW50OiBNZXNzYWdlRXZlbnQpOiB2b2lkIHtcbiAgICBjb25zdCBkYXRhID0gZXZlbnQuZGF0YTtcblxuICAgIC8vIElmIHdlJ3JlIGhhbmRsaW5nIHNlY29uZGFyeSBjYWxscywgc3RhcnQgZnJvbSBzY3JhdGNoXG4gICAgaWYgKGhhc0NhbGxlZCkge1xuICAgICAgICBkb2N1bWVudC5ib2R5LnJlcGxhY2VXaXRoKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJCT0RZXCIpKTtcbiAgICB9XG4gICAgaGFzQ2FsbGVkID0gdHJ1ZTtcblxuICAgIGNvbnN0IGltZzogSFRNTFNwYW5FbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7IC8vIHdlJ2xsIG1hc2sgaXQgYXMgYW4gaW1hZ2VcbiAgICBpbWcuaWQgPSBcImltZ1wiO1xuXG4gICAgY29uc3QgYTogSFRNTEFuY2hvckVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcbiAgICBhLmlkID0gXCJhXCI7XG4gICAgYS5yZWwgPSBcIm5vcmVmZXJyZXIgbm9vcGVuZXJcIjtcbiAgICBhLmRvd25sb2FkID0gZGF0YS5kb3dubG9hZDtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgYS5zdHlsZSA9IGRhdGEuc3R5bGU7XG4gICAgYS5zdHlsZS5mb250RmFtaWx5ID0gXCJBcmlhbCwgSGVsdmV0aWNhLCBTYW5zLVNlcmlmXCI7XG4gICAgYS5ocmVmID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoZGF0YS5ibG9iKTtcbiAgICBhLmFwcGVuZENoaWxkKGltZyk7XG4gICAgYS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShkYXRhLnRleHRDb250ZW50KSk7XG5cbiAgICAvLyBBcHBseSBpbWFnZSBzdHlsZSBhZnRlciBzbyB3ZSBjYW4gc3RlYWwgdGhlIGFuY2hvcidzIGNvbG91ci5cbiAgICAvLyBTdHlsZSBjb3BpZWQgZnJvbSBhIHJlbmRlcmVkIHZlcnNpb24gb2YgbXhfTUZpbGVCb2R5X2Rvd25sb2FkX2ljb25cbiAgICBpZiAoZGF0YS5pbWdTdHlsZSkge1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGltZy5zdHlsZSA9IGRhdGEuaW1nU3R5bGU7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgaW1nLnN0eWxlLndpZHRoID0gXCIxMnB4XCI7XG4gICAgICAgIGltZy5zdHlsZS5oZWlnaHQgPSBcIjEycHhcIjtcbiAgICAgICAgaW1nLnN0eWxlLndlYmtpdE1hc2tTaXplID0gXCIxMnB4XCI7XG4gICAgICAgIGltZy5zdHlsZS53ZWJraXRNYXNrUG9zaXRpb24gPSBcImNlbnRlclwiO1xuICAgICAgICBpbWcuc3R5bGUud2Via2l0TWFza1JlcGVhdCA9IFwibm8tcmVwZWF0XCI7XG4gICAgICAgIGltZy5zdHlsZS5kaXNwbGF5ID0gXCJpbmxpbmUtYmxvY2tcIjtcbiAgICAgICAgaW1nLnN0eWxlLndlYmtpdE1hc2tJbWFnZSA9IGB1cmwoJyR7ZGF0YS5pbWdTcmN9JylgO1xuICAgICAgICBpbWcuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYCR7YS5zdHlsZS5jb2xvcn1gO1xuICAgIH1cblxuICAgIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5ib2R5O1xuICAgIC8vIERvbid0IGRpc3BsYXkgc2Nyb2xsYmFycyBpZiB0aGUgbGluayB0YWtlcyBtb3JlIHRoYW4gb25lIGxpbmUgdG8gZGlzcGxheS5cbiAgICBib2R5LnN0eWxlIC5tYXJnaW4gPSBcIjBweFwiO1xuICAgIGJvZHkuc3R5bGUub3ZlcmZsb3cgPSBcImhpZGRlblwiO1xuICAgIGJvZHkuYXBwZW5kQ2hpbGQoYSk7XG5cbiAgICBpZiAoZXZlbnQuZGF0YS5hdXRvKSB7XG4gICAgICAgIGEuY2xpY2soKTsgLy8gdHJ5IHRvIHRyaWdnZXIgZG93bmxvYWQgYXV0b21hdGljYWxseVxuICAgIH1cbn1cblxud2luZG93Lm9ubWVzc2FnZSA9IGZ1bmN0aW9uKGU6IE1lc3NhZ2VFdmVudCk6IHZvaWQge1xuICAgIGlmIChlLm9yaWdpbiA9PT0gd2luZG93LmxvY2F0aW9uLm9yaWdpbikge1xuICAgICAgICBpZiAoZS5kYXRhLmJsb2IpIHJlbW90ZVJlbmRlcihlKTtcbiAgICB9XG59O1xuIl19