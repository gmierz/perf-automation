"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.TimelineRenderingType = void 0;

var _react = require("react");

var _Layout = require("../settings/enums/Layout");

/*
Copyright 2019 The Matrix.org Foundation C.I.C.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
let TimelineRenderingType;
exports.TimelineRenderingType = TimelineRenderingType;

(function (TimelineRenderingType) {
  TimelineRenderingType["Room"] = "Room";
  TimelineRenderingType["Thread"] = "Thread";
  TimelineRenderingType["ThreadsList"] = "ThreadsList";
  TimelineRenderingType["File"] = "File";
  TimelineRenderingType["Notification"] = "Notification";
})(TimelineRenderingType || (exports.TimelineRenderingType = TimelineRenderingType = {}));

const RoomContext = /*#__PURE__*/(0, _react.createContext)({
  roomLoading: true,
  peekLoading: false,
  shouldPeek: true,
  membersLoaded: false,
  numUnreadMessages: 0,
  draggingFile: false,
  searching: false,
  guestsCanJoin: false,
  canPeek: false,
  showApps: false,
  isPeeking: false,
  showRightPanel: true,
  joining: false,
  atEndOfLiveTimeline: true,
  atEndOfLiveTimelineInit: false,
  showTopUnreadMessagesBar: false,
  statusBarVisible: false,
  canReact: false,
  canReply: false,
  layout: _Layout.Layout.Group,
  lowBandwidth: false,
  alwaysShowTimestamps: false,
  showTwelveHourTimestamps: false,
  readMarkerInViewThresholdMs: 3000,
  readMarkerOutOfViewThresholdMs: 30000,
  showHiddenEventsInTimeline: false,
  showReadReceipts: true,
  showRedactions: true,
  showJoinLeaves: true,
  showAvatarChanges: true,
  showDisplaynameChanges: true,
  matrixClientIsReady: false,
  dragCounter: 0,
  timelineRenderingType: TimelineRenderingType.Room,
  liveTimeline: undefined
});
RoomContext.displayName = "RoomContext";
var _default = RoomContext;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb250ZXh0cy9Sb29tQ29udGV4dC50cyJdLCJuYW1lcyI6WyJUaW1lbGluZVJlbmRlcmluZ1R5cGUiLCJSb29tQ29udGV4dCIsInJvb21Mb2FkaW5nIiwicGVla0xvYWRpbmciLCJzaG91bGRQZWVrIiwibWVtYmVyc0xvYWRlZCIsIm51bVVucmVhZE1lc3NhZ2VzIiwiZHJhZ2dpbmdGaWxlIiwic2VhcmNoaW5nIiwiZ3Vlc3RzQ2FuSm9pbiIsImNhblBlZWsiLCJzaG93QXBwcyIsImlzUGVla2luZyIsInNob3dSaWdodFBhbmVsIiwiam9pbmluZyIsImF0RW5kT2ZMaXZlVGltZWxpbmUiLCJhdEVuZE9mTGl2ZVRpbWVsaW5lSW5pdCIsInNob3dUb3BVbnJlYWRNZXNzYWdlc0JhciIsInN0YXR1c0JhclZpc2libGUiLCJjYW5SZWFjdCIsImNhblJlcGx5IiwibGF5b3V0IiwiTGF5b3V0IiwiR3JvdXAiLCJsb3dCYW5kd2lkdGgiLCJhbHdheXNTaG93VGltZXN0YW1wcyIsInNob3dUd2VsdmVIb3VyVGltZXN0YW1wcyIsInJlYWRNYXJrZXJJblZpZXdUaHJlc2hvbGRNcyIsInJlYWRNYXJrZXJPdXRPZlZpZXdUaHJlc2hvbGRNcyIsInNob3dIaWRkZW5FdmVudHNJblRpbWVsaW5lIiwic2hvd1JlYWRSZWNlaXB0cyIsInNob3dSZWRhY3Rpb25zIiwic2hvd0pvaW5MZWF2ZXMiLCJzaG93QXZhdGFyQ2hhbmdlcyIsInNob3dEaXNwbGF5bmFtZUNoYW5nZXMiLCJtYXRyaXhDbGllbnRJc1JlYWR5IiwiZHJhZ0NvdW50ZXIiLCJ0aW1lbGluZVJlbmRlcmluZ1R5cGUiLCJSb29tIiwibGl2ZVRpbWVsaW5lIiwidW5kZWZpbmVkIiwiZGlzcGxheU5hbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFnQkE7O0FBR0E7O0FBbkJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtJQU9ZQSxxQjs7O1dBQUFBLHFCO0FBQUFBLEVBQUFBLHFCO0FBQUFBLEVBQUFBLHFCO0FBQUFBLEVBQUFBLHFCO0FBQUFBLEVBQUFBLHFCO0FBQUFBLEVBQUFBLHFCO0dBQUFBLHFCLHFDQUFBQSxxQjs7QUFRWixNQUFNQyxXQUFXLGdCQUFHLDBCQUEwQjtBQUMxQ0MsRUFBQUEsV0FBVyxFQUFFLElBRDZCO0FBRTFDQyxFQUFBQSxXQUFXLEVBQUUsS0FGNkI7QUFHMUNDLEVBQUFBLFVBQVUsRUFBRSxJQUg4QjtBQUkxQ0MsRUFBQUEsYUFBYSxFQUFFLEtBSjJCO0FBSzFDQyxFQUFBQSxpQkFBaUIsRUFBRSxDQUx1QjtBQU0xQ0MsRUFBQUEsWUFBWSxFQUFFLEtBTjRCO0FBTzFDQyxFQUFBQSxTQUFTLEVBQUUsS0FQK0I7QUFRMUNDLEVBQUFBLGFBQWEsRUFBRSxLQVIyQjtBQVMxQ0MsRUFBQUEsT0FBTyxFQUFFLEtBVGlDO0FBVTFDQyxFQUFBQSxRQUFRLEVBQUUsS0FWZ0M7QUFXMUNDLEVBQUFBLFNBQVMsRUFBRSxLQVgrQjtBQVkxQ0MsRUFBQUEsY0FBYyxFQUFFLElBWjBCO0FBYTFDQyxFQUFBQSxPQUFPLEVBQUUsS0FiaUM7QUFjMUNDLEVBQUFBLG1CQUFtQixFQUFFLElBZHFCO0FBZTFDQyxFQUFBQSx1QkFBdUIsRUFBRSxLQWZpQjtBQWdCMUNDLEVBQUFBLHdCQUF3QixFQUFFLEtBaEJnQjtBQWlCMUNDLEVBQUFBLGdCQUFnQixFQUFFLEtBakJ3QjtBQWtCMUNDLEVBQUFBLFFBQVEsRUFBRSxLQWxCZ0M7QUFtQjFDQyxFQUFBQSxRQUFRLEVBQUUsS0FuQmdDO0FBb0IxQ0MsRUFBQUEsTUFBTSxFQUFFQyxlQUFPQyxLQXBCMkI7QUFxQjFDQyxFQUFBQSxZQUFZLEVBQUUsS0FyQjRCO0FBc0IxQ0MsRUFBQUEsb0JBQW9CLEVBQUUsS0F0Qm9CO0FBdUIxQ0MsRUFBQUEsd0JBQXdCLEVBQUUsS0F2QmdCO0FBd0IxQ0MsRUFBQUEsMkJBQTJCLEVBQUUsSUF4QmE7QUF5QjFDQyxFQUFBQSw4QkFBOEIsRUFBRSxLQXpCVTtBQTBCMUNDLEVBQUFBLDBCQUEwQixFQUFFLEtBMUJjO0FBMkIxQ0MsRUFBQUEsZ0JBQWdCLEVBQUUsSUEzQndCO0FBNEIxQ0MsRUFBQUEsY0FBYyxFQUFFLElBNUIwQjtBQTZCMUNDLEVBQUFBLGNBQWMsRUFBRSxJQTdCMEI7QUE4QjFDQyxFQUFBQSxpQkFBaUIsRUFBRSxJQTlCdUI7QUErQjFDQyxFQUFBQSxzQkFBc0IsRUFBRSxJQS9Ca0I7QUFnQzFDQyxFQUFBQSxtQkFBbUIsRUFBRSxLQWhDcUI7QUFpQzFDQyxFQUFBQSxXQUFXLEVBQUUsQ0FqQzZCO0FBa0MxQ0MsRUFBQUEscUJBQXFCLEVBQUVyQyxxQkFBcUIsQ0FBQ3NDLElBbENIO0FBbUMxQ0MsRUFBQUEsWUFBWSxFQUFFQztBQW5DNEIsQ0FBMUIsQ0FBcEI7QUFxQ0F2QyxXQUFXLENBQUN3QyxXQUFaLEdBQTBCLGFBQTFCO2VBQ2V4QyxXIiwic291cmNlc0NvbnRlbnQiOlsiLypcbkNvcHlyaWdodCAyMDE5IFRoZSBNYXRyaXgub3JnIEZvdW5kYXRpb24gQy5JLkMuXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IHsgY3JlYXRlQ29udGV4dCB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgeyBJUm9vbVN0YXRlIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvc3RydWN0dXJlcy9Sb29tVmlld1wiO1xuaW1wb3J0IHsgTGF5b3V0IH0gZnJvbSBcIi4uL3NldHRpbmdzL2VudW1zL0xheW91dFwiO1xuXG5leHBvcnQgZW51bSBUaW1lbGluZVJlbmRlcmluZ1R5cGUge1xuICAgIFJvb20gPSBcIlJvb21cIixcbiAgICBUaHJlYWQgPSBcIlRocmVhZFwiLFxuICAgIFRocmVhZHNMaXN0ID0gXCJUaHJlYWRzTGlzdFwiLFxuICAgIEZpbGUgPSBcIkZpbGVcIixcbiAgICBOb3RpZmljYXRpb24gPSBcIk5vdGlmaWNhdGlvblwiLFxufVxuXG5jb25zdCBSb29tQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8SVJvb21TdGF0ZT4oe1xuICAgIHJvb21Mb2FkaW5nOiB0cnVlLFxuICAgIHBlZWtMb2FkaW5nOiBmYWxzZSxcbiAgICBzaG91bGRQZWVrOiB0cnVlLFxuICAgIG1lbWJlcnNMb2FkZWQ6IGZhbHNlLFxuICAgIG51bVVucmVhZE1lc3NhZ2VzOiAwLFxuICAgIGRyYWdnaW5nRmlsZTogZmFsc2UsXG4gICAgc2VhcmNoaW5nOiBmYWxzZSxcbiAgICBndWVzdHNDYW5Kb2luOiBmYWxzZSxcbiAgICBjYW5QZWVrOiBmYWxzZSxcbiAgICBzaG93QXBwczogZmFsc2UsXG4gICAgaXNQZWVraW5nOiBmYWxzZSxcbiAgICBzaG93UmlnaHRQYW5lbDogdHJ1ZSxcbiAgICBqb2luaW5nOiBmYWxzZSxcbiAgICBhdEVuZE9mTGl2ZVRpbWVsaW5lOiB0cnVlLFxuICAgIGF0RW5kT2ZMaXZlVGltZWxpbmVJbml0OiBmYWxzZSxcbiAgICBzaG93VG9wVW5yZWFkTWVzc2FnZXNCYXI6IGZhbHNlLFxuICAgIHN0YXR1c0JhclZpc2libGU6IGZhbHNlLFxuICAgIGNhblJlYWN0OiBmYWxzZSxcbiAgICBjYW5SZXBseTogZmFsc2UsXG4gICAgbGF5b3V0OiBMYXlvdXQuR3JvdXAsXG4gICAgbG93QmFuZHdpZHRoOiBmYWxzZSxcbiAgICBhbHdheXNTaG93VGltZXN0YW1wczogZmFsc2UsXG4gICAgc2hvd1R3ZWx2ZUhvdXJUaW1lc3RhbXBzOiBmYWxzZSxcbiAgICByZWFkTWFya2VySW5WaWV3VGhyZXNob2xkTXM6IDMwMDAsXG4gICAgcmVhZE1hcmtlck91dE9mVmlld1RocmVzaG9sZE1zOiAzMDAwMCxcbiAgICBzaG93SGlkZGVuRXZlbnRzSW5UaW1lbGluZTogZmFsc2UsXG4gICAgc2hvd1JlYWRSZWNlaXB0czogdHJ1ZSxcbiAgICBzaG93UmVkYWN0aW9uczogdHJ1ZSxcbiAgICBzaG93Sm9pbkxlYXZlczogdHJ1ZSxcbiAgICBzaG93QXZhdGFyQ2hhbmdlczogdHJ1ZSxcbiAgICBzaG93RGlzcGxheW5hbWVDaGFuZ2VzOiB0cnVlLFxuICAgIG1hdHJpeENsaWVudElzUmVhZHk6IGZhbHNlLFxuICAgIGRyYWdDb3VudGVyOiAwLFxuICAgIHRpbWVsaW5lUmVuZGVyaW5nVHlwZTogVGltZWxpbmVSZW5kZXJpbmdUeXBlLlJvb20sXG4gICAgbGl2ZVRpbWVsaW5lOiB1bmRlZmluZWQsXG59KTtcblJvb21Db250ZXh0LmRpc3BsYXlOYW1lID0gXCJSb29tQ29udGV4dFwiO1xuZXhwb3J0IGRlZmF1bHQgUm9vbUNvbnRleHQ7XG4iXX0=