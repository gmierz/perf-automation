"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _replaceableComponent = require("../../../utils/replaceableComponent");

var _Field = _interopRequireDefault(require("../elements/Field"));

var _languageHandler = require("../../../languageHandler");

var _Validation = _interopRequireDefault(require("../elements/Validation"));

var Email = _interopRequireWildcard(require("../../../email"));

var _dec, _class, _class2, _temp;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

let EmailField = (_dec = (0, _replaceableComponent.replaceableComponent)("views.auth.EmailField"), _dec(_class = (_temp = _class2 = class EmailField extends _react.PureComponent {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "validate", (0, _Validation.default)({
      rules: [{
        key: "required",
        test: ({
          value,
          allowEmpty
        }) => allowEmpty || !!value,
        invalid: () => (0, _languageHandler._t)(this.props.labelRequired)
      }, {
        key: "email",
        test: ({
          value
        }) => !value || Email.looksValid(value),
        invalid: () => (0, _languageHandler._t)(this.props.labelInvalid)
      }]
    }));
    (0, _defineProperty2.default)(this, "onValidate", async fieldState => {
      let validate = this.validate;

      if (this.props.validationRules) {
        validate = this.props.validationRules;
      }

      const result = await validate(fieldState);

      if (this.props.onValidate) {
        this.props.onValidate(result);
      }

      return result;
    });
  }

  render() {
    return /*#__PURE__*/_react.default.createElement(_Field.default, {
      id: this.props.id,
      ref: this.props.fieldRef,
      type: "text",
      label: (0, _languageHandler._t)(this.props.label),
      value: this.props.value,
      autoFocus: this.props.autoFocus,
      onChange: this.props.onChange,
      onValidate: this.onValidate
    });
  }

}, (0, _defineProperty2.default)(_class2, "defaultProps", {
  label: (0, _languageHandler._td)("Email"),
  labelRequired: (0, _languageHandler._td)("Enter email address"),
  labelInvalid: (0, _languageHandler._td)("Doesn't look like a valid email address")
}), _temp)) || _class);
var _default = EmailField;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL2F1dGgvRW1haWxGaWVsZC50c3giXSwibmFtZXMiOlsiRW1haWxGaWVsZCIsIlB1cmVDb21wb25lbnQiLCJydWxlcyIsImtleSIsInRlc3QiLCJ2YWx1ZSIsImFsbG93RW1wdHkiLCJpbnZhbGlkIiwicHJvcHMiLCJsYWJlbFJlcXVpcmVkIiwiRW1haWwiLCJsb29rc1ZhbGlkIiwibGFiZWxJbnZhbGlkIiwiZmllbGRTdGF0ZSIsInZhbGlkYXRlIiwidmFsaWRhdGlvblJ1bGVzIiwicmVzdWx0Iiwib25WYWxpZGF0ZSIsInJlbmRlciIsImlkIiwiZmllbGRSZWYiLCJsYWJlbCIsImF1dG9Gb2N1cyIsIm9uQ2hhbmdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQWdCQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7SUFvQk1BLFUsV0FETCxnREFBcUIsdUJBQXJCLEMsbUNBQUQsTUFDTUEsVUFETixTQUN5QkMsb0JBRHpCLENBQytDO0FBQUE7QUFBQTtBQUFBLG9EQU9oQix5QkFBZTtBQUN0Q0MsTUFBQUEsS0FBSyxFQUFFLENBQ0g7QUFDSUMsUUFBQUEsR0FBRyxFQUFFLFVBRFQ7QUFFSUMsUUFBQUEsSUFBSSxFQUFFLENBQUM7QUFBRUMsVUFBQUEsS0FBRjtBQUFTQyxVQUFBQTtBQUFULFNBQUQsS0FBMkJBLFVBQVUsSUFBSSxDQUFDLENBQUNELEtBRnJEO0FBR0lFLFFBQUFBLE9BQU8sRUFBRSxNQUFNLHlCQUFHLEtBQUtDLEtBQUwsQ0FBV0MsYUFBZDtBQUhuQixPQURHLEVBTUg7QUFDSU4sUUFBQUEsR0FBRyxFQUFFLE9BRFQ7QUFFSUMsUUFBQUEsSUFBSSxFQUFFLENBQUM7QUFBRUMsVUFBQUE7QUFBRixTQUFELEtBQWUsQ0FBQ0EsS0FBRCxJQUFVSyxLQUFLLENBQUNDLFVBQU4sQ0FBaUJOLEtBQWpCLENBRm5DO0FBR0lFLFFBQUFBLE9BQU8sRUFBRSxNQUFNLHlCQUFHLEtBQUtDLEtBQUwsQ0FBV0ksWUFBZDtBQUhuQixPQU5HO0FBRCtCLEtBQWYsQ0FQZ0I7QUFBQSxzREFzQjlCLE1BQU9DLFVBQVAsSUFBbUM7QUFDNUMsVUFBSUMsUUFBUSxHQUFHLEtBQUtBLFFBQXBCOztBQUNBLFVBQUksS0FBS04sS0FBTCxDQUFXTyxlQUFmLEVBQWdDO0FBQzVCRCxRQUFBQSxRQUFRLEdBQUcsS0FBS04sS0FBTCxDQUFXTyxlQUF0QjtBQUNIOztBQUVELFlBQU1DLE1BQU0sR0FBRyxNQUFNRixRQUFRLENBQUNELFVBQUQsQ0FBN0I7O0FBQ0EsVUFBSSxLQUFLTCxLQUFMLENBQVdTLFVBQWYsRUFBMkI7QUFDdkIsYUFBS1QsS0FBTCxDQUFXUyxVQUFYLENBQXNCRCxNQUF0QjtBQUNIOztBQUVELGFBQU9BLE1BQVA7QUFDSCxLQWxDMEM7QUFBQTs7QUFvQzNDRSxFQUFBQSxNQUFNLEdBQUc7QUFDTCx3QkFBTyw2QkFBQyxjQUFEO0FBQ0gsTUFBQSxFQUFFLEVBQUUsS0FBS1YsS0FBTCxDQUFXVyxFQURaO0FBRUgsTUFBQSxHQUFHLEVBQUUsS0FBS1gsS0FBTCxDQUFXWSxRQUZiO0FBR0gsTUFBQSxJQUFJLEVBQUMsTUFIRjtBQUlILE1BQUEsS0FBSyxFQUFFLHlCQUFHLEtBQUtaLEtBQUwsQ0FBV2EsS0FBZCxDQUpKO0FBS0gsTUFBQSxLQUFLLEVBQUUsS0FBS2IsS0FBTCxDQUFXSCxLQUxmO0FBTUgsTUFBQSxTQUFTLEVBQUUsS0FBS0csS0FBTCxDQUFXYyxTQU5uQjtBQU9ILE1BQUEsUUFBUSxFQUFFLEtBQUtkLEtBQUwsQ0FBV2UsUUFQbEI7QUFRSCxNQUFBLFVBQVUsRUFBRSxLQUFLTjtBQVJkLE1BQVA7QUFVSDs7QUEvQzBDLEMseURBQ3JCO0FBQ2xCSSxFQUFBQSxLQUFLLEVBQUUsMEJBQUksT0FBSixDQURXO0FBRWxCWixFQUFBQSxhQUFhLEVBQUUsMEJBQUkscUJBQUosQ0FGRztBQUdsQkcsRUFBQUEsWUFBWSxFQUFFLDBCQUFJLHlDQUFKO0FBSEksQztlQWlEWFosVSIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5Db3B5cmlnaHQgMjAyMSBUaGUgTWF0cml4Lm9yZyBGb3VuZGF0aW9uIEMuSS5DLlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50LCBSZWZDYWxsYmFjaywgUmVmT2JqZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyByZXBsYWNlYWJsZUNvbXBvbmVudCB9IGZyb20gXCIuLi8uLi8uLi91dGlscy9yZXBsYWNlYWJsZUNvbXBvbmVudFwiO1xuaW1wb3J0IEZpZWxkLCB7IElJbnB1dFByb3BzIH0gZnJvbSBcIi4uL2VsZW1lbnRzL0ZpZWxkXCI7XG5pbXBvcnQgeyBfdCwgX3RkIH0gZnJvbSBcIi4uLy4uLy4uL2xhbmd1YWdlSGFuZGxlclwiO1xuaW1wb3J0IHdpdGhWYWxpZGF0aW9uLCB7IElGaWVsZFN0YXRlLCBJVmFsaWRhdGlvblJlc3VsdCB9IGZyb20gXCIuLi9lbGVtZW50cy9WYWxpZGF0aW9uXCI7XG5pbXBvcnQgKiBhcyBFbWFpbCBmcm9tIFwiLi4vLi4vLi4vZW1haWxcIjtcblxuaW50ZXJmYWNlIElQcm9wcyBleHRlbmRzIE9taXQ8SUlucHV0UHJvcHMsIFwib25WYWxpZGF0ZVwiPiB7XG4gICAgaWQ/OiBzdHJpbmc7XG4gICAgZmllbGRSZWY/OiBSZWZDYWxsYmFjazxGaWVsZD4gfCBSZWZPYmplY3Q8RmllbGQ+O1xuICAgIHZhbHVlOiBzdHJpbmc7XG4gICAgYXV0b0ZvY3VzPzogYm9vbGVhbjtcblxuICAgIGxhYmVsPzogc3RyaW5nO1xuICAgIGxhYmVsUmVxdWlyZWQ/OiBzdHJpbmc7XG4gICAgbGFiZWxJbnZhbGlkPzogc3RyaW5nO1xuXG4gICAgLy8gV2hlbiBwcmVzZW50LCBjb21wbGV0ZWx5IG92ZXJyaWRlcyB0aGUgZGVmYXVsdCB2YWxpZGF0aW9uIHJ1bGVzLlxuICAgIHZhbGlkYXRpb25SdWxlcz86IChmaWVsZFN0YXRlOiBJRmllbGRTdGF0ZSkgPT4gUHJvbWlzZTxJVmFsaWRhdGlvblJlc3VsdD47XG5cbiAgICBvbkNoYW5nZShldjogUmVhY3QuRm9ybUV2ZW50PEhUTUxFbGVtZW50Pik6IHZvaWQ7XG4gICAgb25WYWxpZGF0ZT8ocmVzdWx0OiBJVmFsaWRhdGlvblJlc3VsdCk6IHZvaWQ7XG59XG5cbkByZXBsYWNlYWJsZUNvbXBvbmVudChcInZpZXdzLmF1dGguRW1haWxGaWVsZFwiKVxuY2xhc3MgRW1haWxGaWVsZCBleHRlbmRzIFB1cmVDb21wb25lbnQ8SVByb3BzPiB7XG4gICAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICAgICAgbGFiZWw6IF90ZChcIkVtYWlsXCIpLFxuICAgICAgICBsYWJlbFJlcXVpcmVkOiBfdGQoXCJFbnRlciBlbWFpbCBhZGRyZXNzXCIpLFxuICAgICAgICBsYWJlbEludmFsaWQ6IF90ZChcIkRvZXNuJ3QgbG9vayBsaWtlIGEgdmFsaWQgZW1haWwgYWRkcmVzc1wiKSxcbiAgICB9O1xuXG4gICAgcHVibGljIHJlYWRvbmx5IHZhbGlkYXRlID0gd2l0aFZhbGlkYXRpb24oe1xuICAgICAgICBydWxlczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGtleTogXCJyZXF1aXJlZFwiLFxuICAgICAgICAgICAgICAgIHRlc3Q6ICh7IHZhbHVlLCBhbGxvd0VtcHR5IH0pID0+IGFsbG93RW1wdHkgfHwgISF2YWx1ZSxcbiAgICAgICAgICAgICAgICBpbnZhbGlkOiAoKSA9PiBfdCh0aGlzLnByb3BzLmxhYmVsUmVxdWlyZWQpLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBrZXk6IFwiZW1haWxcIixcbiAgICAgICAgICAgICAgICB0ZXN0OiAoeyB2YWx1ZSB9KSA9PiAhdmFsdWUgfHwgRW1haWwubG9va3NWYWxpZCh2YWx1ZSksXG4gICAgICAgICAgICAgICAgaW52YWxpZDogKCkgPT4gX3QodGhpcy5wcm9wcy5sYWJlbEludmFsaWQpLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICB9KTtcblxuICAgIG9uVmFsaWRhdGUgPSBhc3luYyAoZmllbGRTdGF0ZTogSUZpZWxkU3RhdGUpID0+IHtcbiAgICAgICAgbGV0IHZhbGlkYXRlID0gdGhpcy52YWxpZGF0ZTtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMudmFsaWRhdGlvblJ1bGVzKSB7XG4gICAgICAgICAgICB2YWxpZGF0ZSA9IHRoaXMucHJvcHMudmFsaWRhdGlvblJ1bGVzO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdmFsaWRhdGUoZmllbGRTdGF0ZSk7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLm9uVmFsaWRhdGUpIHtcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25WYWxpZGF0ZShyZXN1bHQpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gPEZpZWxkXG4gICAgICAgICAgICBpZD17dGhpcy5wcm9wcy5pZH1cbiAgICAgICAgICAgIHJlZj17dGhpcy5wcm9wcy5maWVsZFJlZn1cbiAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgIGxhYmVsPXtfdCh0aGlzLnByb3BzLmxhYmVsKX1cbiAgICAgICAgICAgIHZhbHVlPXt0aGlzLnByb3BzLnZhbHVlfVxuICAgICAgICAgICAgYXV0b0ZvY3VzPXt0aGlzLnByb3BzLmF1dG9Gb2N1c31cbiAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLnByb3BzLm9uQ2hhbmdlfVxuICAgICAgICAgICAgb25WYWxpZGF0ZT17dGhpcy5vblZhbGlkYXRlfVxuICAgICAgICAvPjtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEVtYWlsRmllbGQ7XG4iXX0=