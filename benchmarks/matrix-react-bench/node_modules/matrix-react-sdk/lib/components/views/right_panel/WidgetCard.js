"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _MatrixClientContext = _interopRequireDefault(require("../../../contexts/MatrixClientContext"));

var _BaseCard = _interopRequireDefault(require("./BaseCard"));

var _WidgetUtils = _interopRequireDefault(require("../../../utils/WidgetUtils"));

var _AppTile = _interopRequireDefault(require("../elements/AppTile"));

var _languageHandler = require("../../../languageHandler");

var _RoomSummaryCard = require("./RoomSummaryCard");

var _RightPanelStorePhases = require("../../../stores/RightPanelStorePhases");

var _dispatcher = _interopRequireDefault(require("../../../dispatcher/dispatcher"));

var _actions = require("../../../dispatcher/actions");

var _ContextMenu = require("../../structures/ContextMenu");

var _WidgetContextMenu = _interopRequireDefault(require("../context_menus/WidgetContextMenu"));

var _WidgetLayoutStore = require("../../../stores/widgets/WidgetLayoutStore");

var _UIStore = _interopRequireDefault(require("../../../stores/UIStore"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/*
Copyright 2020 The Matrix.org Foundation C.I.C.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
const WidgetCard = ({
  room,
  widgetId,
  onClose
}) => {
  const cli = (0, _react.useContext)(_MatrixClientContext.default);
  const apps = (0, _RoomSummaryCard.useWidgets)(room);
  const app = apps.find(a => a.id === widgetId);

  const isPinned = app && _WidgetLayoutStore.WidgetLayoutStore.instance.isInContainer(room, app, _WidgetLayoutStore.Container.Top);

  const [menuDisplayed, handle, openMenu, closeMenu] = (0, _ContextMenu.useContextMenu)();
  (0, _react.useEffect)(() => {
    if (!app || isPinned) {
      // stop showing this card
      _dispatcher.default.dispatch({
        action: _actions.Action.SetRightPanelPhase,
        phase: _RightPanelStorePhases.RightPanelPhases.RoomSummary
      });
    }
  }, [app, isPinned]); // Don't render anything as we are about to transition

  if (!app || isPinned) return null;
  let contextMenu;

  if (menuDisplayed) {
    const rect = handle.current.getBoundingClientRect();
    contextMenu = /*#__PURE__*/_react.default.createElement(_WidgetContextMenu.default, {
      chevronFace: _ContextMenu.ChevronFace.None,
      right: _UIStore.default.instance.windowWidth - rect.right - 12,
      top: rect.bottom + 12,
      onFinished: closeMenu,
      app: app
    });
  }

  const header = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("h2", null, _WidgetUtils.default.getWidgetName(app)), /*#__PURE__*/_react.default.createElement(_ContextMenu.ContextMenuButton, {
    kind: "secondary",
    className: "mx_WidgetCard_optionsButton",
    inputRef: handle,
    onClick: openMenu,
    isExpanded: menuDisplayed,
    label: (0, _languageHandler._t)("Options")
  }), contextMenu);

  return /*#__PURE__*/_react.default.createElement(_BaseCard.default, {
    header: header,
    className: "mx_WidgetCard",
    onClose: onClose,
    previousPhase: _RightPanelStorePhases.RightPanelPhases.RoomSummary,
    withoutScrollContainer: true
  }, /*#__PURE__*/_react.default.createElement(_AppTile.default, {
    app: app,
    fullWidth: true,
    showMenubar: false,
    room: room,
    userId: cli.getUserId(),
    creatorUserId: app.creatorUserId,
    widgetPageTitle: _WidgetUtils.default.getWidgetDataTitle(app),
    waitForIframeLoad: app.waitForIframeLoad
  }));
};

var _default = WidgetCard;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,