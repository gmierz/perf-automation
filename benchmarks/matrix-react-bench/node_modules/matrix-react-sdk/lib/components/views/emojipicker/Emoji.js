"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _ContextMenu = require("../../structures/ContextMenu");

var _replaceableComponent = require("../../../utils/replaceableComponent");

var _dec, _class;

let Emoji = (_dec = (0, _replaceableComponent.replaceableComponent)("views.emojipicker.Emoji"), _dec(_class = class Emoji extends _react.default.PureComponent {
  render() {
    const {
      onClick,
      onMouseEnter,
      onMouseLeave,
      emoji,
      selectedEmojis
    } = this.props;
    const isSelected = selectedEmojis && selectedEmojis.has(emoji.unicode);
    return /*#__PURE__*/_react.default.createElement(_ContextMenu.MenuItem, {
      element: "li",
      onClick: () => onClick(emoji),
      onMouseEnter: () => onMouseEnter(emoji),
      onMouseLeave: () => onMouseLeave(emoji),
      className: "mx_EmojiPicker_item_wrapper",
      label: emoji.unicode
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: `mx_EmojiPicker_item ${isSelected ? 'mx_EmojiPicker_item_selected' : ''}`
    }, emoji.unicode));
  }

}) || _class);
var _default = Emoji;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL2Vtb2ppcGlja2VyL0Vtb2ppLnRzeCJdLCJuYW1lcyI6WyJFbW9qaSIsIlJlYWN0IiwiUHVyZUNvbXBvbmVudCIsInJlbmRlciIsIm9uQ2xpY2siLCJvbk1vdXNlRW50ZXIiLCJvbk1vdXNlTGVhdmUiLCJlbW9qaSIsInNlbGVjdGVkRW1vamlzIiwicHJvcHMiLCJpc1NlbGVjdGVkIiwiaGFzIiwidW5pY29kZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBaUJBOztBQUVBOztBQUVBOzs7O0lBV01BLEssV0FETCxnREFBcUIseUJBQXJCLEMsZ0JBQUQsTUFDTUEsS0FETixTQUNvQkMsZUFBTUMsYUFEMUIsQ0FDZ0Q7QUFDNUNDLEVBQUFBLE1BQU0sR0FBRztBQUNMLFVBQU07QUFBRUMsTUFBQUEsT0FBRjtBQUFXQyxNQUFBQSxZQUFYO0FBQXlCQyxNQUFBQSxZQUF6QjtBQUF1Q0MsTUFBQUEsS0FBdkM7QUFBOENDLE1BQUFBO0FBQTlDLFFBQWlFLEtBQUtDLEtBQTVFO0FBQ0EsVUFBTUMsVUFBVSxHQUFHRixjQUFjLElBQUlBLGNBQWMsQ0FBQ0csR0FBZixDQUFtQkosS0FBSyxDQUFDSyxPQUF6QixDQUFyQztBQUNBLHdCQUNJLDZCQUFDLHFCQUFEO0FBQ0ksTUFBQSxPQUFPLEVBQUMsSUFEWjtBQUVJLE1BQUEsT0FBTyxFQUFFLE1BQU1SLE9BQU8sQ0FBQ0csS0FBRCxDQUYxQjtBQUdJLE1BQUEsWUFBWSxFQUFFLE1BQU1GLFlBQVksQ0FBQ0UsS0FBRCxDQUhwQztBQUlJLE1BQUEsWUFBWSxFQUFFLE1BQU1ELFlBQVksQ0FBQ0MsS0FBRCxDQUpwQztBQUtJLE1BQUEsU0FBUyxFQUFDLDZCQUxkO0FBTUksTUFBQSxLQUFLLEVBQUVBLEtBQUssQ0FBQ0s7QUFOakIsb0JBUUk7QUFBSyxNQUFBLFNBQVMsRUFBRyx1QkFBc0JGLFVBQVUsR0FBRyw4QkFBSCxHQUFvQyxFQUFHO0FBQXhGLE9BQ01ILEtBQUssQ0FBQ0ssT0FEWixDQVJKLENBREo7QUFjSDs7QUFsQjJDLEM7ZUFxQmpDWixLIiwic291cmNlc0NvbnRlbnQiOlsiLypcbkNvcHlyaWdodCAyMDE5IFR1bGlyIEFzb2thbiA8dHVsaXJAbWF1bml1bS5uZXQ+XG5Db3B5cmlnaHQgMjAyMCBUaGUgTWF0cml4Lm9yZyBGb3VuZGF0aW9uIEMuSS5DLlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IE1lbnVJdGVtIH0gZnJvbSBcIi4uLy4uL3N0cnVjdHVyZXMvQ29udGV4dE1lbnVcIjtcbmltcG9ydCB7IElFbW9qaSB9IGZyb20gXCIuLi8uLi8uLi9lbW9qaVwiO1xuaW1wb3J0IHsgcmVwbGFjZWFibGVDb21wb25lbnQgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvcmVwbGFjZWFibGVDb21wb25lbnRcIjtcblxuaW50ZXJmYWNlIElQcm9wcyB7XG4gICAgZW1vamk6IElFbW9qaTtcbiAgICBzZWxlY3RlZEVtb2ppcz86IFNldDxzdHJpbmc+O1xuICAgIG9uQ2xpY2soZW1vamk6IElFbW9qaSk6IHZvaWQ7XG4gICAgb25Nb3VzZUVudGVyKGVtb2ppOiBJRW1vamkpOiB2b2lkO1xuICAgIG9uTW91c2VMZWF2ZShlbW9qaTogSUVtb2ppKTogdm9pZDtcbn1cblxuQHJlcGxhY2VhYmxlQ29tcG9uZW50KFwidmlld3MuZW1vamlwaWNrZXIuRW1vamlcIilcbmNsYXNzIEVtb2ppIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudDxJUHJvcHM+IHtcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgb25DbGljaywgb25Nb3VzZUVudGVyLCBvbk1vdXNlTGVhdmUsIGVtb2ppLCBzZWxlY3RlZEVtb2ppcyB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgaXNTZWxlY3RlZCA9IHNlbGVjdGVkRW1vamlzICYmIHNlbGVjdGVkRW1vamlzLmhhcyhlbW9qaS51bmljb2RlKTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxNZW51SXRlbVxuICAgICAgICAgICAgICAgIGVsZW1lbnQ9XCJsaVwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gb25DbGljayhlbW9qaSl9XG4gICAgICAgICAgICAgICAgb25Nb3VzZUVudGVyPXsoKSA9PiBvbk1vdXNlRW50ZXIoZW1vamkpfVxuICAgICAgICAgICAgICAgIG9uTW91c2VMZWF2ZT17KCkgPT4gb25Nb3VzZUxlYXZlKGVtb2ppKX1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJteF9FbW9qaVBpY2tlcl9pdGVtX3dyYXBwZXJcIlxuICAgICAgICAgICAgICAgIGxhYmVsPXtlbW9qaS51bmljb2RlfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgbXhfRW1vamlQaWNrZXJfaXRlbSAke2lzU2VsZWN0ZWQgPyAnbXhfRW1vamlQaWNrZXJfaXRlbV9zZWxlY3RlZCcgOiAnJ31gfT5cbiAgICAgICAgICAgICAgICAgICAgeyBlbW9qaS51bmljb2RlIH1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvTWVudUl0ZW0+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBFbW9qaTtcbiJdfQ==