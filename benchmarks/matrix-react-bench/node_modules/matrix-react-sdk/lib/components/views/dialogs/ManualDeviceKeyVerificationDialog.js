"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _MatrixClientPeg = require("../../../MatrixClientPeg");

var FormattingUtils = _interopRequireWildcard(require("../../../utils/FormattingUtils"));

var _languageHandler = require("../../../languageHandler");

var _replaceableComponent = require("../../../utils/replaceableComponent");

var _QuestionDialog = _interopRequireDefault(require("./QuestionDialog"));

var _dec, _class;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

let ManualDeviceKeyVerificationDialog = (_dec = (0, _replaceableComponent.replaceableComponent)("views.dialogs.ManualDeviceKeyVerificationDialog"), _dec(_class = class ManualDeviceKeyVerificationDialog extends _react.default.Component {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "onLegacyFinished", confirm => {
      if (confirm) {
        _MatrixClientPeg.MatrixClientPeg.get().setDeviceVerified(this.props.userId, this.props.device.deviceId, true);
      }

      this.props.onFinished(confirm);
    });
  }

  render() {
    let text;

    if (_MatrixClientPeg.MatrixClientPeg.get().getUserId() === this.props.userId) {
      text = (0, _languageHandler._t)("Confirm by comparing the following with the User Settings in your other session:");
    } else {
      text = (0, _languageHandler._t)("Confirm this user's session by comparing the following with their User Settings:");
    }

    const key = FormattingUtils.formatCryptoKey(this.props.device.getFingerprint());

    const body = /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("p", null, text), /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_DeviceVerifyDialog_cryptoSection"
    }, /*#__PURE__*/_react.default.createElement("ul", null, /*#__PURE__*/_react.default.createElement("li", null, /*#__PURE__*/_react.default.createElement("label", null, (0, _languageHandler._t)("Session name"), ":"), " ", /*#__PURE__*/_react.default.createElement("span", null, this.props.device.getDisplayName())), /*#__PURE__*/_react.default.createElement("li", null, /*#__PURE__*/_react.default.createElement("label", null, (0, _languageHandler._t)("Session ID"), ":"), " ", /*#__PURE__*/_react.default.createElement("span", null, /*#__PURE__*/_react.default.createElement("code", null, this.props.device.deviceId))), /*#__PURE__*/_react.default.createElement("li", null, /*#__PURE__*/_react.default.createElement("label", null, (0, _languageHandler._t)("Session key"), ":"), " ", /*#__PURE__*/_react.default.createElement("span", null, /*#__PURE__*/_react.default.createElement("code", null, /*#__PURE__*/_react.default.createElement("b", null, key)))))), /*#__PURE__*/_react.default.createElement("p", null, (0, _languageHandler._t)("If they don't match, the security of your communication may be compromised.")));

    return /*#__PURE__*/_react.default.createElement(_QuestionDialog.default, {
      title: (0, _languageHandler._t)("Verify session"),
      description: body,
      button: (0, _languageHandler._t)("Verify session"),
      onFinished: this.onLegacyFinished
    });
  }

}) || _class);
exports.default = ManualDeviceKeyVerificationDialog;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL2RpYWxvZ3MvTWFudWFsRGV2aWNlS2V5VmVyaWZpY2F0aW9uRGlhbG9nLnRzeCJdLCJuYW1lcyI6WyJNYW51YWxEZXZpY2VLZXlWZXJpZmljYXRpb25EaWFsb2ciLCJSZWFjdCIsIkNvbXBvbmVudCIsImNvbmZpcm0iLCJNYXRyaXhDbGllbnRQZWciLCJnZXQiLCJzZXREZXZpY2VWZXJpZmllZCIsInByb3BzIiwidXNlcklkIiwiZGV2aWNlIiwiZGV2aWNlSWQiLCJvbkZpbmlzaGVkIiwicmVuZGVyIiwidGV4dCIsImdldFVzZXJJZCIsImtleSIsIkZvcm1hdHRpbmdVdGlscyIsImZvcm1hdENyeXB0b0tleSIsImdldEZpbmdlcnByaW50IiwiYm9keSIsImdldERpc3BsYXlOYW1lIiwib25MZWdhY3lGaW5pc2hlZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFvQkE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0lBVXFCQSxpQyxXQURwQixnREFBcUIsaURBQXJCLEMsZ0JBQUQsTUFDcUJBLGlDQURyQixTQUMrREMsZUFBTUMsU0FEckUsQ0FDdUY7QUFBQTtBQUFBO0FBQUEsNERBQ3ZEQyxPQUFELElBQTRCO0FBQ25ELFVBQUlBLE9BQUosRUFBYTtBQUNUQyx5Q0FBZ0JDLEdBQWhCLEdBQXNCQyxpQkFBdEIsQ0FDSSxLQUFLQyxLQUFMLENBQVdDLE1BRGYsRUFDdUIsS0FBS0QsS0FBTCxDQUFXRSxNQUFYLENBQWtCQyxRQUR6QyxFQUNtRCxJQURuRDtBQUdIOztBQUNELFdBQUtILEtBQUwsQ0FBV0ksVUFBWCxDQUFzQlIsT0FBdEI7QUFDSCxLQVJrRjtBQUFBOztBQVU1RVMsRUFBQUEsTUFBTSxHQUFnQjtBQUN6QixRQUFJQyxJQUFKOztBQUNBLFFBQUlULGlDQUFnQkMsR0FBaEIsR0FBc0JTLFNBQXRCLE9BQXNDLEtBQUtQLEtBQUwsQ0FBV0MsTUFBckQsRUFBNkQ7QUFDekRLLE1BQUFBLElBQUksR0FBRyx5QkFBRyxrRkFBSCxDQUFQO0FBQ0gsS0FGRCxNQUVPO0FBQ0hBLE1BQUFBLElBQUksR0FBRyx5QkFBRyxrRkFBSCxDQUFQO0FBQ0g7O0FBRUQsVUFBTUUsR0FBRyxHQUFHQyxlQUFlLENBQUNDLGVBQWhCLENBQWdDLEtBQUtWLEtBQUwsQ0FBV0UsTUFBWCxDQUFrQlMsY0FBbEIsRUFBaEMsQ0FBWjs7QUFDQSxVQUFNQyxJQUFJLGdCQUNOLHVEQUNJLHdDQUNNTixJQUROLENBREosZUFJSTtBQUFLLE1BQUEsU0FBUyxFQUFDO0FBQWYsb0JBQ0ksc0RBQ0ksc0RBQUksNENBQVMseUJBQUcsY0FBSCxDQUFULE1BQUosb0JBQTJDLDJDQUFRLEtBQUtOLEtBQUwsQ0FBV0UsTUFBWCxDQUFrQlcsY0FBbEIsRUFBUixDQUEzQyxDQURKLGVBRUksc0RBQUksNENBQVMseUJBQUcsWUFBSCxDQUFULE1BQUosb0JBQXlDLHdEQUFNLDJDQUFRLEtBQUtiLEtBQUwsQ0FBV0UsTUFBWCxDQUFrQkMsUUFBMUIsQ0FBTixDQUF6QyxDQUZKLGVBR0ksc0RBQUksNENBQVMseUJBQUcsYUFBSCxDQUFULE1BQUosb0JBQTBDLHdEQUFNLHdEQUFNLHdDQUFLSyxHQUFMLENBQU4sQ0FBTixDQUExQyxDQUhKLENBREosQ0FKSixlQVdJLHdDQUNNLHlCQUFHLDZFQUFILENBRE4sQ0FYSixDQURKOztBQWtCQSx3QkFDSSw2QkFBQyx1QkFBRDtBQUNJLE1BQUEsS0FBSyxFQUFFLHlCQUFHLGdCQUFILENBRFg7QUFFSSxNQUFBLFdBQVcsRUFBRUksSUFGakI7QUFHSSxNQUFBLE1BQU0sRUFBRSx5QkFBRyxnQkFBSCxDQUhaO0FBSUksTUFBQSxVQUFVLEVBQUUsS0FBS0U7QUFKckIsTUFESjtBQVFIOztBQTdDa0YsQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5Db3B5cmlnaHQgMjAxNiBPcGVuTWFya2V0IEx0ZFxuQ29weXJpZ2h0IDIwMTcgVmVjdG9yIENyZWF0aW9ucyBMdGRcbkNvcHlyaWdodCAyMDE5IE5ldyBWZWN0b3IgTHRkXG5Db3B5cmlnaHQgMjAxOSBNaWNoYWVsIFRlbGF0eW5za2kgPDd0M2NoZ3V5QGdtYWlsLmNvbT5cbkNvcHlyaWdodCAyMDIwIFRoZSBNYXRyaXgub3JnIEZvdW5kYXRpb24gQy5JLkMuXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IE1hdHJpeENsaWVudFBlZyB9IGZyb20gJy4uLy4uLy4uL01hdHJpeENsaWVudFBlZyc7XG5pbXBvcnQgKiBhcyBGb3JtYXR0aW5nVXRpbHMgZnJvbSAnLi4vLi4vLi4vdXRpbHMvRm9ybWF0dGluZ1V0aWxzJztcbmltcG9ydCB7IF90IH0gZnJvbSAnLi4vLi4vLi4vbGFuZ3VhZ2VIYW5kbGVyJztcbmltcG9ydCB7IHJlcGxhY2VhYmxlQ29tcG9uZW50IH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL3JlcGxhY2VhYmxlQ29tcG9uZW50XCI7XG5pbXBvcnQgUXVlc3Rpb25EaWFsb2cgZnJvbSBcIi4vUXVlc3Rpb25EaWFsb2dcIjtcbmltcG9ydCB7IERldmljZUluZm8gfSBmcm9tIFwibWF0cml4LWpzLXNkay9zcmMvY3J5cHRvL2RldmljZWluZm9cIjtcbmltcG9ydCB7IElEaWFsb2dQcm9wcyB9IGZyb20gXCIuL0lEaWFsb2dQcm9wc1wiO1xuXG5pbnRlcmZhY2UgSVByb3BzIGV4dGVuZHMgSURpYWxvZ1Byb3BzIHtcbiAgICB1c2VySWQ6IHN0cmluZztcbiAgICBkZXZpY2U6IERldmljZUluZm87XG59XG5cbkByZXBsYWNlYWJsZUNvbXBvbmVudChcInZpZXdzLmRpYWxvZ3MuTWFudWFsRGV2aWNlS2V5VmVyaWZpY2F0aW9uRGlhbG9nXCIpXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNYW51YWxEZXZpY2VLZXlWZXJpZmljYXRpb25EaWFsb2cgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8SVByb3BzPiB7XG4gICAgcHJpdmF0ZSBvbkxlZ2FjeUZpbmlzaGVkID0gKGNvbmZpcm06IGJvb2xlYW4pOiB2b2lkID0+IHtcbiAgICAgICAgaWYgKGNvbmZpcm0pIHtcbiAgICAgICAgICAgIE1hdHJpeENsaWVudFBlZy5nZXQoKS5zZXREZXZpY2VWZXJpZmllZChcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BzLnVzZXJJZCwgdGhpcy5wcm9wcy5kZXZpY2UuZGV2aWNlSWQsIHRydWUsXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucHJvcHMub25GaW5pc2hlZChjb25maXJtKTtcbiAgICB9O1xuXG4gICAgcHVibGljIHJlbmRlcigpOiBKU1guRWxlbWVudCB7XG4gICAgICAgIGxldCB0ZXh0O1xuICAgICAgICBpZiAoTWF0cml4Q2xpZW50UGVnLmdldCgpLmdldFVzZXJJZCgpID09PSB0aGlzLnByb3BzLnVzZXJJZCkge1xuICAgICAgICAgICAgdGV4dCA9IF90KFwiQ29uZmlybSBieSBjb21wYXJpbmcgdGhlIGZvbGxvd2luZyB3aXRoIHRoZSBVc2VyIFNldHRpbmdzIGluIHlvdXIgb3RoZXIgc2Vzc2lvbjpcIik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0ZXh0ID0gX3QoXCJDb25maXJtIHRoaXMgdXNlcidzIHNlc3Npb24gYnkgY29tcGFyaW5nIHRoZSBmb2xsb3dpbmcgd2l0aCB0aGVpciBVc2VyIFNldHRpbmdzOlwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGtleSA9IEZvcm1hdHRpbmdVdGlscy5mb3JtYXRDcnlwdG9LZXkodGhpcy5wcm9wcy5kZXZpY2UuZ2V0RmluZ2VycHJpbnQoKSk7XG4gICAgICAgIGNvbnN0IGJvZHkgPSAoXG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIDxwPlxuICAgICAgICAgICAgICAgICAgICB7IHRleHQgfVxuICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm14X0RldmljZVZlcmlmeURpYWxvZ19jcnlwdG9TZWN0aW9uXCI+XG4gICAgICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48bGFiZWw+eyBfdChcIlNlc3Npb24gbmFtZVwiKSB9OjwvbGFiZWw+IDxzcGFuPnsgdGhpcy5wcm9wcy5kZXZpY2UuZ2V0RGlzcGxheU5hbWUoKSB9PC9zcGFuPjwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGxhYmVsPnsgX3QoXCJTZXNzaW9uIElEXCIpIH06PC9sYWJlbD4gPHNwYW4+PGNvZGU+eyB0aGlzLnByb3BzLmRldmljZS5kZXZpY2VJZCB9PC9jb2RlPjwvc3Bhbj48L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxsYWJlbD57IF90KFwiU2Vzc2lvbiBrZXlcIikgfTo8L2xhYmVsPiA8c3Bhbj48Y29kZT48Yj57IGtleSB9PC9iPjwvY29kZT48L3NwYW4+PC9saT5cbiAgICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8cD5cbiAgICAgICAgICAgICAgICAgICAgeyBfdChcIklmIHRoZXkgZG9uJ3QgbWF0Y2gsIHRoZSBzZWN1cml0eSBvZiB5b3VyIGNvbW11bmljYXRpb24gbWF5IGJlIGNvbXByb21pc2VkLlwiKSB9XG4gICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxRdWVzdGlvbkRpYWxvZ1xuICAgICAgICAgICAgICAgIHRpdGxlPXtfdChcIlZlcmlmeSBzZXNzaW9uXCIpfVxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXtib2R5fVxuICAgICAgICAgICAgICAgIGJ1dHRvbj17X3QoXCJWZXJpZnkgc2Vzc2lvblwiKX1cbiAgICAgICAgICAgICAgICBvbkZpbmlzaGVkPXt0aGlzLm9uTGVnYWN5RmluaXNoZWR9XG4gICAgICAgICAgICAvPlxuICAgICAgICApO1xuICAgIH1cbn1cbiJdfQ==