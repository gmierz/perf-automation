"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.SpaceSettingsTab = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _languageHandler = require("../../../languageHandler");

var _BaseDialog = _interopRequireDefault(require("./BaseDialog"));

var _dispatcher = _interopRequireDefault(require("../../../dispatcher/dispatcher"));

var _useDispatcher = require("../../../hooks/useDispatcher");

var _TabbedView = _interopRequireWildcard(require("../../structures/TabbedView"));

var _SpaceSettingsGeneralTab = _interopRequireDefault(require("../spaces/SpaceSettingsGeneralTab"));

var _SpaceSettingsVisibilityTab = _interopRequireDefault(require("../spaces/SpaceSettingsVisibilityTab"));

var _SettingsStore = _interopRequireDefault(require("../../../settings/SettingsStore"));

var _UIFeature = require("../../../settings/UIFeature");

var _AdvancedRoomSettingsTab = _interopRequireDefault(require("../settings/tabs/room/AdvancedRoomSettingsTab"));

var _RolesRoomSettingsTab = _interopRequireDefault(require("../settings/tabs/room/RolesRoomSettingsTab"));

const _excluded = ["action"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

let SpaceSettingsTab;
exports.SpaceSettingsTab = SpaceSettingsTab;

(function (SpaceSettingsTab) {
  SpaceSettingsTab["General"] = "SPACE_GENERAL_TAB";
  SpaceSettingsTab["Visibility"] = "SPACE_VISIBILITY_TAB";
  SpaceSettingsTab["Roles"] = "SPACE_ROLES_TAB";
  SpaceSettingsTab["Advanced"] = "SPACE_ADVANCED_TAB";
})(SpaceSettingsTab || (exports.SpaceSettingsTab = SpaceSettingsTab = {}));

const SpaceSettingsDialog = ({
  matrixClient: cli,
  space,
  onFinished
}) => {
  (0, _useDispatcher.useDispatcher)(_dispatcher.default, _ref => {
    let {
      action
    } = _ref,
        params = (0, _objectWithoutProperties2.default)(_ref, _excluded);

    if (action === "after_leave_room" && params.room_id === space.roomId) {
      onFinished(false);
    }
  });
  const tabs = (0, _react.useMemo)(() => {
    return [new _TabbedView.Tab(SpaceSettingsTab.General, (0, _languageHandler._td)("General"), "mx_SpaceSettingsDialog_generalIcon", /*#__PURE__*/_react.default.createElement(_SpaceSettingsGeneralTab.default, {
      matrixClient: cli,
      space: space,
      onFinished: onFinished
    })), new _TabbedView.Tab(SpaceSettingsTab.Visibility, (0, _languageHandler._td)("Visibility"), "mx_SpaceSettingsDialog_visibilityIcon", /*#__PURE__*/_react.default.createElement(_SpaceSettingsVisibilityTab.default, {
      matrixClient: cli,
      space: space,
      closeSettingsFn: onFinished
    })), new _TabbedView.Tab(SpaceSettingsTab.Roles, (0, _languageHandler._td)("Roles & Permissions"), "mx_RoomSettingsDialog_rolesIcon", /*#__PURE__*/_react.default.createElement(_RolesRoomSettingsTab.default, {
      roomId: space.roomId
    })), _SettingsStore.default.getValue(_UIFeature.UIFeature.AdvancedSettings) ? new _TabbedView.Tab(SpaceSettingsTab.Advanced, (0, _languageHandler._td)("Advanced"), "mx_RoomSettingsDialog_warningIcon", /*#__PURE__*/_react.default.createElement(_AdvancedRoomSettingsTab.default, {
      roomId: space.roomId,
      closeSettingsFn: onFinished
    })) : null].filter(Boolean);
  }, [cli, space, onFinished]);
  return /*#__PURE__*/_react.default.createElement(_BaseDialog.default, {
    title: (0, _languageHandler._t)("Space settings"),
    className: "mx_SpaceSettingsDialog",
    contentId: "mx_SpaceSettingsDialog",
    onFinished: onFinished,
    fixedWidth: false
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "mx_SpaceSettingsDialog_content",
    id: "mx_SpaceSettingsDialog",
    title: (0, _languageHandler._t)("Settings - %(spaceName)s", {
      spaceName: space.name
    })
  }, /*#__PURE__*/_react.default.createElement(_TabbedView.default, {
    tabs: tabs
  })));
};

var _default = SpaceSettingsDialog;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,