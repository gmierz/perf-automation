import React, { ReactNode } from "react";
import { Room } from "matrix-js-sdk/src/models/room";
interface IProps {
    space: Room;
    onCreateRoomClick(): void;
    onAddSubspaceClick(): void;
    onFinished(added?: boolean): void;
}
export declare const Entry: ({ room, checked, onChange }: {
    room: any;
    checked: any;
    onChange: any;
}) => JSX.Element;
interface IAddExistingToSpaceProps {
    space: Room;
    footerPrompt?: ReactNode;
    filterPlaceholder: string;
    emptySelectionButton?: ReactNode;
    onFinished(added: boolean): void;
    roomsRenderer?(rooms: Room[], selectedToAdd: Set<Room>, onChange: undefined | ((checked: boolean, room: Room) => void), truncateAt: number, overflowTile: (overflowCount: number, totalCount: number) => JSX.Element): ReactNode;
    spacesRenderer?(spaces: Room[], selectedToAdd: Set<Room>, onChange?: (checked: boolean, room: Room) => void): ReactNode;
    dmsRenderer?(dms: Room[], selectedToAdd: Set<Room>, onChange?: (checked: boolean, room: Room) => void): ReactNode;
}
export declare const AddExistingToSpace: React.FC<IAddExistingToSpaceProps>;
export declare const defaultRoomsRenderer: IAddExistingToSpaceProps["roomsRenderer"];
export declare const defaultSpacesRenderer: IAddExistingToSpaceProps["spacesRenderer"];
export declare const defaultDmsRenderer: IAddExistingToSpaceProps["dmsRenderer"];
interface ISubspaceSelectorProps {
    title: string;
    space: Room;
    value: Room;
    onChange(space: Room): void;
}
export declare const SubspaceSelector: ({ title, space, value, onChange }: ISubspaceSelectorProps) => JSX.Element;
declare const AddExistingToSpaceDialog: React.FC<IProps>;
export default AddExistingToSpaceDialog;
