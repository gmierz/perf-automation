"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _SdkConfig = _interopRequireDefault(require("../../../SdkConfig"));

var _Modal = _interopRequireDefault(require("../../../Modal"));

var _languageHandler = require("../../../languageHandler");

var _replaceableComponent = require("../../../utils/replaceableComponent");

var _BaseDialog = _interopRequireDefault(require("./BaseDialog"));

var _DialogButtons = _interopRequireDefault(require("../elements/DialogButtons"));

var _BugReportDialog = _interopRequireDefault(require("./BugReportDialog"));

var _dec, _class;

let StorageEvictedDialog = (_dec = (0, _replaceableComponent.replaceableComponent)("views.dialogs.StorageEvictedDialog"), _dec(_class = class StorageEvictedDialog extends _react.default.Component {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "sendBugReport", ev => {
      ev.preventDefault();

      _Modal.default.createTrackedDialog('Storage evicted', 'Send Bug Report Dialog', _BugReportDialog.default, {});
    });
    (0, _defineProperty2.default)(this, "onSignOutClick", () => {
      this.props.onFinished(true);
    });
  }

  render() {
    let logRequest;

    if (_SdkConfig.default.get().bug_report_endpoint_url) {
      logRequest = (0, _languageHandler._t)("To help us prevent this in future, please <a>send us logs</a>.", {}, {
        a: text => /*#__PURE__*/_react.default.createElement("a", {
          href: "#",
          onClick: this.sendBugReport
        }, text)
      });
    }

    return /*#__PURE__*/_react.default.createElement(_BaseDialog.default, {
      className: "mx_ErrorDialog",
      onFinished: this.props.onFinished,
      title: (0, _languageHandler._t)('Missing session data'),
      contentId: "mx_Dialog_content",
      hasCancel: false
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_Dialog_content",
      id: "mx_Dialog_content"
    }, /*#__PURE__*/_react.default.createElement("p", null, (0, _languageHandler._t)("Some session data, including encrypted message keys, is " + "missing. Sign out and sign in to fix this, restoring keys " + "from backup.")), /*#__PURE__*/_react.default.createElement("p", null, (0, _languageHandler._t)("Your browser likely removed this data when running low on " + "disk space."), " ", logRequest)), /*#__PURE__*/_react.default.createElement(_DialogButtons.default, {
      primaryButton: (0, _languageHandler._t)("Sign out"),
      onPrimaryButtonClick: this.onSignOutClick,
      focus: true,
      hasCancel: false
    }));
  }

}) || _class);
exports.default = StorageEvictedDialog;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL2RpYWxvZ3MvU3RvcmFnZUV2aWN0ZWREaWFsb2cudHN4Il0sIm5hbWVzIjpbIlN0b3JhZ2VFdmljdGVkRGlhbG9nIiwiUmVhY3QiLCJDb21wb25lbnQiLCJldiIsInByZXZlbnREZWZhdWx0IiwiTW9kYWwiLCJjcmVhdGVUcmFja2VkRGlhbG9nIiwiQnVnUmVwb3J0RGlhbG9nIiwicHJvcHMiLCJvbkZpbmlzaGVkIiwicmVuZGVyIiwibG9nUmVxdWVzdCIsIlNka0NvbmZpZyIsImdldCIsImJ1Z19yZXBvcnRfZW5kcG9pbnRfdXJsIiwiYSIsInRleHQiLCJzZW5kQnVnUmVwb3J0Iiwib25TaWduT3V0Q2xpY2siXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBZ0JBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0lBTXFCQSxvQixXQURwQixnREFBcUIsb0NBQXJCLEMsZ0JBQUQsTUFDcUJBLG9CQURyQixTQUNrREMsZUFBTUMsU0FEeEQsQ0FDMEU7QUFBQTtBQUFBO0FBQUEseURBQzdDQyxFQUFELElBQWdDO0FBQ3BEQSxNQUFBQSxFQUFFLENBQUNDLGNBQUg7O0FBQ0FDLHFCQUFNQyxtQkFBTixDQUEwQixpQkFBMUIsRUFBNkMsd0JBQTdDLEVBQXVFQyx3QkFBdkUsRUFBd0YsRUFBeEY7QUFDSCxLQUpxRTtBQUFBLDBEQU03QyxNQUFZO0FBQ2pDLFdBQUtDLEtBQUwsQ0FBV0MsVUFBWCxDQUFzQixJQUF0QjtBQUNILEtBUnFFO0FBQUE7O0FBVS9EQyxFQUFBQSxNQUFNLEdBQWdCO0FBQ3pCLFFBQUlDLFVBQUo7O0FBQ0EsUUFBSUMsbUJBQVVDLEdBQVYsR0FBZ0JDLHVCQUFwQixFQUE2QztBQUN6Q0gsTUFBQUEsVUFBVSxHQUFHLHlCQUNULGdFQURTLEVBRVQsRUFGUyxFQUdUO0FBQ0lJLFFBQUFBLENBQUMsRUFBRUMsSUFBSSxpQkFBSTtBQUFHLFVBQUEsSUFBSSxFQUFDLEdBQVI7QUFBWSxVQUFBLE9BQU8sRUFBRSxLQUFLQztBQUExQixXQUEyQ0QsSUFBM0M7QUFEZixPQUhTLENBQWI7QUFPSDs7QUFFRCx3QkFDSSw2QkFBQyxtQkFBRDtBQUNJLE1BQUEsU0FBUyxFQUFDLGdCQURkO0FBRUksTUFBQSxVQUFVLEVBQUUsS0FBS1IsS0FBTCxDQUFXQyxVQUYzQjtBQUdJLE1BQUEsS0FBSyxFQUFFLHlCQUFHLHNCQUFILENBSFg7QUFJSSxNQUFBLFNBQVMsRUFBQyxtQkFKZDtBQUtJLE1BQUEsU0FBUyxFQUFFO0FBTGYsb0JBT0k7QUFBSyxNQUFBLFNBQVMsRUFBQyxtQkFBZjtBQUFtQyxNQUFBLEVBQUUsRUFBQztBQUF0QyxvQkFDSSx3Q0FBSyx5QkFDRCw2REFDQSw0REFEQSxHQUVBLGNBSEMsQ0FBTCxDQURKLGVBTUksd0NBQUsseUJBQ0QsK0RBQ0EsYUFGQyxDQUFMLE9BR01FLFVBSE4sQ0FOSixDQVBKLGVBa0JJLDZCQUFDLHNCQUFEO0FBQWUsTUFBQSxhQUFhLEVBQUUseUJBQUcsVUFBSCxDQUE5QjtBQUNJLE1BQUEsb0JBQW9CLEVBQUUsS0FBS08sY0FEL0I7QUFFSSxNQUFBLEtBQUssRUFBRSxJQUZYO0FBR0ksTUFBQSxTQUFTLEVBQUU7QUFIZixNQWxCSixDQURKO0FBMEJIOztBQWhEcUUsQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5Db3B5cmlnaHQgMjAxOSBOZXcgVmVjdG9yIEx0ZFxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgU2RrQ29uZmlnIGZyb20gJy4uLy4uLy4uL1Nka0NvbmZpZyc7XG5pbXBvcnQgTW9kYWwgZnJvbSAnLi4vLi4vLi4vTW9kYWwnO1xuaW1wb3J0IHsgX3QgfSBmcm9tICcuLi8uLi8uLi9sYW5ndWFnZUhhbmRsZXInO1xuaW1wb3J0IHsgcmVwbGFjZWFibGVDb21wb25lbnQgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvcmVwbGFjZWFibGVDb21wb25lbnRcIjtcbmltcG9ydCBCYXNlRGlhbG9nIGZyb20gXCIuL0Jhc2VEaWFsb2dcIjtcbmltcG9ydCBEaWFsb2dCdXR0b25zIGZyb20gXCIuLi9lbGVtZW50cy9EaWFsb2dCdXR0b25zXCI7XG5pbXBvcnQgQnVnUmVwb3J0RGlhbG9nIGZyb20gXCIuL0J1Z1JlcG9ydERpYWxvZ1wiO1xuaW1wb3J0IHsgSURpYWxvZ1Byb3BzIH0gZnJvbSBcIi4vSURpYWxvZ1Byb3BzXCI7XG5cbmludGVyZmFjZSBJUHJvcHMgZXh0ZW5kcyBJRGlhbG9nUHJvcHMgeyB9XG5cbkByZXBsYWNlYWJsZUNvbXBvbmVudChcInZpZXdzLmRpYWxvZ3MuU3RvcmFnZUV2aWN0ZWREaWFsb2dcIilcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN0b3JhZ2VFdmljdGVkRGlhbG9nIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PElQcm9wcz4ge1xuICAgIHByaXZhdGUgc2VuZEJ1Z1JlcG9ydCA9IChldjogUmVhY3QuTW91c2VFdmVudCk6IHZvaWQgPT4ge1xuICAgICAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBNb2RhbC5jcmVhdGVUcmFja2VkRGlhbG9nKCdTdG9yYWdlIGV2aWN0ZWQnLCAnU2VuZCBCdWcgUmVwb3J0IERpYWxvZycsIEJ1Z1JlcG9ydERpYWxvZywge30pO1xuICAgIH07XG5cbiAgICBwcml2YXRlIG9uU2lnbk91dENsaWNrID0gKCk6IHZvaWQgPT4ge1xuICAgICAgICB0aGlzLnByb3BzLm9uRmluaXNoZWQodHJ1ZSk7XG4gICAgfTtcblxuICAgIHB1YmxpYyByZW5kZXIoKTogSlNYLkVsZW1lbnQge1xuICAgICAgICBsZXQgbG9nUmVxdWVzdDtcbiAgICAgICAgaWYgKFNka0NvbmZpZy5nZXQoKS5idWdfcmVwb3J0X2VuZHBvaW50X3VybCkge1xuICAgICAgICAgICAgbG9nUmVxdWVzdCA9IF90KFxuICAgICAgICAgICAgICAgIFwiVG8gaGVscCB1cyBwcmV2ZW50IHRoaXMgaW4gZnV0dXJlLCBwbGVhc2UgPGE+c2VuZCB1cyBsb2dzPC9hPi5cIixcbiAgICAgICAgICAgICAgICB7fSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGE6IHRleHQgPT4gPGEgaHJlZj1cIiNcIiBvbkNsaWNrPXt0aGlzLnNlbmRCdWdSZXBvcnR9PnsgdGV4dCB9PC9hPixcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8QmFzZURpYWxvZ1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cIm14X0Vycm9yRGlhbG9nXCJcbiAgICAgICAgICAgICAgICBvbkZpbmlzaGVkPXt0aGlzLnByb3BzLm9uRmluaXNoZWR9XG4gICAgICAgICAgICAgICAgdGl0bGU9e190KCdNaXNzaW5nIHNlc3Npb24gZGF0YScpfVxuICAgICAgICAgICAgICAgIGNvbnRlbnRJZD0nbXhfRGlhbG9nX2NvbnRlbnQnXG4gICAgICAgICAgICAgICAgaGFzQ2FuY2VsPXtmYWxzZX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm14X0RpYWxvZ19jb250ZW50XCIgaWQ9J214X0RpYWxvZ19jb250ZW50Jz5cbiAgICAgICAgICAgICAgICAgICAgPHA+eyBfdChcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiU29tZSBzZXNzaW9uIGRhdGEsIGluY2x1ZGluZyBlbmNyeXB0ZWQgbWVzc2FnZSBrZXlzLCBpcyBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICBcIm1pc3NpbmcuIFNpZ24gb3V0IGFuZCBzaWduIGluIHRvIGZpeCB0aGlzLCByZXN0b3Jpbmcga2V5cyBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICBcImZyb20gYmFja3VwLlwiLFxuICAgICAgICAgICAgICAgICAgICApIH08L3A+XG4gICAgICAgICAgICAgICAgICAgIDxwPnsgX3QoXG4gICAgICAgICAgICAgICAgICAgICAgICBcIllvdXIgYnJvd3NlciBsaWtlbHkgcmVtb3ZlZCB0aGlzIGRhdGEgd2hlbiBydW5uaW5nIGxvdyBvbiBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICBcImRpc2sgc3BhY2UuXCIsXG4gICAgICAgICAgICAgICAgICAgICkgfSB7IGxvZ1JlcXVlc3QgfTwvcD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8RGlhbG9nQnV0dG9ucyBwcmltYXJ5QnV0dG9uPXtfdChcIlNpZ24gb3V0XCIpfVxuICAgICAgICAgICAgICAgICAgICBvblByaW1hcnlCdXR0b25DbGljaz17dGhpcy5vblNpZ25PdXRDbGlja31cbiAgICAgICAgICAgICAgICAgICAgZm9jdXM9e3RydWV9XG4gICAgICAgICAgICAgICAgICAgIGhhc0NhbmNlbD17ZmFsc2V9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvQmFzZURpYWxvZz5cbiAgICAgICAgKTtcbiAgICB9XG59XG4iXX0=