import React from 'react';
import { AddressType, IUserAddress } from '../../../UserAddress';
interface IProps {
    title: string;
    description?: JSX.Element;
    extraNode?: JSX.Element;
    value?: string;
    placeholder?: ((validAddressTypes: any) => string) | string;
    roomId?: string;
    button?: string;
    focus?: boolean;
    validAddressTypes?: AddressType[];
    onFinished: (success: boolean, list?: IUserAddress[]) => void;
    groupId?: string;
    pickerType?: 'user' | 'room';
    includeSelf?: boolean;
}
interface IState {
    invalidAddressError: boolean;
    selectedList: IUserAddress[];
    busy: boolean;
    searchError: string;
    serverSupportsUserDirectory: boolean;
    query: string;
    suggestedList: IUserAddress[];
    validAddressTypes: AddressType[];
}
export default class AddressPickerDialog extends React.Component<IProps, IState> {
    private textinput;
    private addressSelector;
    private queryChangedDebouncer;
    private cancelThreepidLookup;
    static defaultProps: Partial<IProps>;
    constructor(props: IProps);
    componentDidMount(): void;
    private getPlaceholder;
    private onButtonClick;
    private onCancel;
    private onKeyDown;
    private onQueryChanged;
    private onDismissed;
    private onSelected;
    private doNaiveGroupSearch;
    private doNaiveGroupRoomSearch;
    private doRoomSearch;
    private doUserDirectorySearch;
    private doLocalSearch;
    private processResults;
    private addAddressesToList;
    private lookupThreepid;
    private getFilteredSuggestions;
    private onPaste;
    private onUseDefaultIdentityServerClick;
    private onManageSettingsClick;
    render(): JSX.Element;
}
export {};
