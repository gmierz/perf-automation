"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _PlayPauseButton = _interopRequireDefault(require("./PlayPauseButton"));

var _PlaybackClock = _interopRequireDefault(require("./PlaybackClock"));

var _replaceableComponent = require("../../../utils/replaceableComponent");

var _EventTile = require("../rooms/EventTile");

var _PlaybackWaveform = _interopRequireDefault(require("./PlaybackWaveform"));

var _AudioPlayerBase = _interopRequireDefault(require("./AudioPlayerBase"));

var _dec, _class;

let RecordingPlayback = (_dec = (0, _replaceableComponent.replaceableComponent)("views.audio_messages.RecordingPlayback"), _dec(_class = class RecordingPlayback extends _AudioPlayerBase.default {
  get isWaveformable() {
    return this.props.tileShape !== _EventTile.TileShape.Notif && this.props.tileShape !== _EventTile.TileShape.FileGrid && this.props.tileShape !== _EventTile.TileShape.Pinned;
  }

  renderComponent() {
    const shapeClass = !this.isWaveformable ? 'mx_VoiceMessagePrimaryContainer_noWaveform' : '';
    return /*#__PURE__*/_react.default.createElement("div", {
      className: 'mx_MediaBody mx_VoiceMessagePrimaryContainer ' + shapeClass
    }, /*#__PURE__*/_react.default.createElement(_PlayPauseButton.default, {
      playback: this.props.playback,
      playbackPhase: this.state.playbackPhase
    }), /*#__PURE__*/_react.default.createElement(_PlaybackClock.default, {
      playback: this.props.playback
    }), this.isWaveformable && /*#__PURE__*/_react.default.createElement(_PlaybackWaveform.default, {
      playback: this.props.playback
    }));
  }

}) || _class);
exports.default = RecordingPlayback;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL2F1ZGlvX21lc3NhZ2VzL1JlY29yZGluZ1BsYXliYWNrLnRzeCJdLCJuYW1lcyI6WyJSZWNvcmRpbmdQbGF5YmFjayIsIkF1ZGlvUGxheWVyQmFzZSIsImlzV2F2ZWZvcm1hYmxlIiwicHJvcHMiLCJ0aWxlU2hhcGUiLCJUaWxlU2hhcGUiLCJOb3RpZiIsIkZpbGVHcmlkIiwiUGlubmVkIiwicmVuZGVyQ29tcG9uZW50Iiwic2hhcGVDbGFzcyIsInBsYXliYWNrIiwic3RhdGUiLCJwbGF5YmFja1BoYXNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFnQkE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7SUFHcUJBLGlCLFdBRHBCLGdEQUFxQix3Q0FBckIsQyxnQkFBRCxNQUNxQkEsaUJBRHJCLFNBQytDQyx3QkFEL0MsQ0FDK0Q7QUFDakMsTUFBZEMsY0FBYyxHQUFZO0FBQ2xDLFdBQU8sS0FBS0MsS0FBTCxDQUFXQyxTQUFYLEtBQXlCQyxxQkFBVUMsS0FBbkMsSUFDQSxLQUFLSCxLQUFMLENBQVdDLFNBQVgsS0FBeUJDLHFCQUFVRSxRQURuQyxJQUVBLEtBQUtKLEtBQUwsQ0FBV0MsU0FBWCxLQUF5QkMscUJBQVVHLE1BRjFDO0FBR0g7O0FBRVNDLEVBQUFBLGVBQWUsR0FBYztBQUNuQyxVQUFNQyxVQUFVLEdBQUcsQ0FBQyxLQUFLUixjQUFOLEdBQXVCLDRDQUF2QixHQUFzRSxFQUF6RjtBQUNBLHdCQUNJO0FBQUssTUFBQSxTQUFTLEVBQUUsa0RBQWtEUTtBQUFsRSxvQkFDSSw2QkFBQyx3QkFBRDtBQUFpQixNQUFBLFFBQVEsRUFBRSxLQUFLUCxLQUFMLENBQVdRLFFBQXRDO0FBQWdELE1BQUEsYUFBYSxFQUFFLEtBQUtDLEtBQUwsQ0FBV0M7QUFBMUUsTUFESixlQUVJLDZCQUFDLHNCQUFEO0FBQWUsTUFBQSxRQUFRLEVBQUUsS0FBS1YsS0FBTCxDQUFXUTtBQUFwQyxNQUZKLEVBR00sS0FBS1QsY0FBTCxpQkFBdUIsNkJBQUMseUJBQUQ7QUFBa0IsTUFBQSxRQUFRLEVBQUUsS0FBS0MsS0FBTCxDQUFXUTtBQUF2QyxNQUg3QixDQURKO0FBT0g7O0FBaEIwRCxDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbkNvcHlyaWdodCAyMDIxIFRoZSBNYXRyaXgub3JnIEZvdW5kYXRpb24gQy5JLkMuXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IFJlYWN0LCB7IFJlYWN0Tm9kZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFBsYXlQYXVzZUJ1dHRvbiBmcm9tIFwiLi9QbGF5UGF1c2VCdXR0b25cIjtcbmltcG9ydCBQbGF5YmFja0Nsb2NrIGZyb20gXCIuL1BsYXliYWNrQ2xvY2tcIjtcbmltcG9ydCB7IHJlcGxhY2VhYmxlQ29tcG9uZW50IH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL3JlcGxhY2VhYmxlQ29tcG9uZW50XCI7XG5pbXBvcnQgeyBUaWxlU2hhcGUgfSBmcm9tIFwiLi4vcm9vbXMvRXZlbnRUaWxlXCI7XG5pbXBvcnQgUGxheWJhY2tXYXZlZm9ybSBmcm9tIFwiLi9QbGF5YmFja1dhdmVmb3JtXCI7XG5pbXBvcnQgQXVkaW9QbGF5ZXJCYXNlIGZyb20gXCIuL0F1ZGlvUGxheWVyQmFzZVwiO1xuXG5AcmVwbGFjZWFibGVDb21wb25lbnQoXCJ2aWV3cy5hdWRpb19tZXNzYWdlcy5SZWNvcmRpbmdQbGF5YmFja1wiKVxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVjb3JkaW5nUGxheWJhY2sgZXh0ZW5kcyBBdWRpb1BsYXllckJhc2Uge1xuICAgIHByaXZhdGUgZ2V0IGlzV2F2ZWZvcm1hYmxlKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9wcy50aWxlU2hhcGUgIT09IFRpbGVTaGFwZS5Ob3RpZlxuICAgICAgICAgICAgJiYgdGhpcy5wcm9wcy50aWxlU2hhcGUgIT09IFRpbGVTaGFwZS5GaWxlR3JpZFxuICAgICAgICAgICAgJiYgdGhpcy5wcm9wcy50aWxlU2hhcGUgIT09IFRpbGVTaGFwZS5QaW5uZWQ7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIHJlbmRlckNvbXBvbmVudCgpOiBSZWFjdE5vZGUge1xuICAgICAgICBjb25zdCBzaGFwZUNsYXNzID0gIXRoaXMuaXNXYXZlZm9ybWFibGUgPyAnbXhfVm9pY2VNZXNzYWdlUHJpbWFyeUNvbnRhaW5lcl9ub1dhdmVmb3JtJyA6ICcnO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9eydteF9NZWRpYUJvZHkgbXhfVm9pY2VNZXNzYWdlUHJpbWFyeUNvbnRhaW5lciAnICsgc2hhcGVDbGFzc30+XG4gICAgICAgICAgICAgICAgPFBsYXlQYXVzZUJ1dHRvbiBwbGF5YmFjaz17dGhpcy5wcm9wcy5wbGF5YmFja30gcGxheWJhY2tQaGFzZT17dGhpcy5zdGF0ZS5wbGF5YmFja1BoYXNlfSAvPlxuICAgICAgICAgICAgICAgIDxQbGF5YmFja0Nsb2NrIHBsYXliYWNrPXt0aGlzLnByb3BzLnBsYXliYWNrfSAvPlxuICAgICAgICAgICAgICAgIHsgdGhpcy5pc1dhdmVmb3JtYWJsZSAmJiA8UGxheWJhY2tXYXZlZm9ybSBwbGF5YmFjaz17dGhpcy5wcm9wcy5wbGF5YmFja30gLz4gfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuIl19