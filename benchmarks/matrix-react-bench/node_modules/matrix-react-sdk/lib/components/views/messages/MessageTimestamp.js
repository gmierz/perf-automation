"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _DateUtils = require("../../../DateUtils");

var _replaceableComponent = require("../../../utils/replaceableComponent");

var _dec, _class;

let MessageTimestamp = (_dec = (0, _replaceableComponent.replaceableComponent)("views.messages.MessageTimestamp"), _dec(_class = class MessageTimestamp extends _react.default.Component {
  render() {
    const date = new Date(this.props.ts);
    let timestamp;

    if (this.props.showRelative) {
      timestamp = (0, _DateUtils.formatRelativeTime)(date, this.props.showTwelveHour);
    } else if (this.props.showFullDate) {
      timestamp = (0, _DateUtils.formatFullDate)(date, this.props.showTwelveHour, this.props.showSeconds);
    } else if (this.props.showSeconds) {
      timestamp = (0, _DateUtils.formatFullTime)(date, this.props.showTwelveHour);
    } else {
      timestamp = (0, _DateUtils.formatTime)(date, this.props.showTwelveHour);
    }

    return /*#__PURE__*/_react.default.createElement("span", {
      className: "mx_MessageTimestamp",
      title: (0, _DateUtils.formatFullDate)(date, this.props.showTwelveHour),
      "aria-hidden": true
    }, timestamp);
  }

}) || _class);
exports.default = MessageTimestamp;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL21lc3NhZ2VzL01lc3NhZ2VUaW1lc3RhbXAudHN4Il0sIm5hbWVzIjpbIk1lc3NhZ2VUaW1lc3RhbXAiLCJSZWFjdCIsIkNvbXBvbmVudCIsInJlbmRlciIsImRhdGUiLCJEYXRlIiwicHJvcHMiLCJ0cyIsInRpbWVzdGFtcCIsInNob3dSZWxhdGl2ZSIsInNob3dUd2VsdmVIb3VyIiwic2hvd0Z1bGxEYXRlIiwic2hvd1NlY29uZHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQWlCQTs7QUFDQTs7QUFDQTs7OztJQVdxQkEsZ0IsV0FEcEIsZ0RBQXFCLGlDQUFyQixDLGdCQUFELE1BQ3FCQSxnQkFEckIsU0FDOENDLGVBQU1DLFNBRHBELENBQ3NFO0FBQzNEQyxFQUFBQSxNQUFNLEdBQUc7QUFDWixVQUFNQyxJQUFJLEdBQUcsSUFBSUMsSUFBSixDQUFTLEtBQUtDLEtBQUwsQ0FBV0MsRUFBcEIsQ0FBYjtBQUNBLFFBQUlDLFNBQUo7O0FBQ0EsUUFBSSxLQUFLRixLQUFMLENBQVdHLFlBQWYsRUFBNkI7QUFDekJELE1BQUFBLFNBQVMsR0FBRyxtQ0FBbUJKLElBQW5CLEVBQXlCLEtBQUtFLEtBQUwsQ0FBV0ksY0FBcEMsQ0FBWjtBQUNILEtBRkQsTUFFTyxJQUFJLEtBQUtKLEtBQUwsQ0FBV0ssWUFBZixFQUE2QjtBQUNoQ0gsTUFBQUEsU0FBUyxHQUFHLCtCQUFlSixJQUFmLEVBQXFCLEtBQUtFLEtBQUwsQ0FBV0ksY0FBaEMsRUFBZ0QsS0FBS0osS0FBTCxDQUFXTSxXQUEzRCxDQUFaO0FBQ0gsS0FGTSxNQUVBLElBQUksS0FBS04sS0FBTCxDQUFXTSxXQUFmLEVBQTRCO0FBQy9CSixNQUFBQSxTQUFTLEdBQUcsK0JBQWVKLElBQWYsRUFBcUIsS0FBS0UsS0FBTCxDQUFXSSxjQUFoQyxDQUFaO0FBQ0gsS0FGTSxNQUVBO0FBQ0hGLE1BQUFBLFNBQVMsR0FBRywyQkFBV0osSUFBWCxFQUFpQixLQUFLRSxLQUFMLENBQVdJLGNBQTVCLENBQVo7QUFDSDs7QUFFRCx3QkFDSTtBQUNJLE1BQUEsU0FBUyxFQUFDLHFCQURkO0FBRUksTUFBQSxLQUFLLEVBQUUsK0JBQWVOLElBQWYsRUFBcUIsS0FBS0UsS0FBTCxDQUFXSSxjQUFoQyxDQUZYO0FBR0kscUJBQWE7QUFIakIsT0FLTUYsU0FMTixDQURKO0FBU0g7O0FBdkJpRSxDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbkNvcHlyaWdodCAyMDE1LCAyMDE2IE9wZW5NYXJrZXQgTHRkXG5Db3B5cmlnaHQgMjAxOCBNaWNoYWVsIFRlbGF0eW5za2kgPDd0M2NoZ3V5QGdtYWlsLmNvbT5cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgZm9ybWF0RnVsbERhdGUsIGZvcm1hdFRpbWUsIGZvcm1hdEZ1bGxUaW1lLCBmb3JtYXRSZWxhdGl2ZVRpbWUgfSBmcm9tICcuLi8uLi8uLi9EYXRlVXRpbHMnO1xuaW1wb3J0IHsgcmVwbGFjZWFibGVDb21wb25lbnQgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvcmVwbGFjZWFibGVDb21wb25lbnRcIjtcblxuaW50ZXJmYWNlIElQcm9wcyB7XG4gICAgdHM6IG51bWJlcjtcbiAgICBzaG93VHdlbHZlSG91cj86IGJvb2xlYW47XG4gICAgc2hvd0Z1bGxEYXRlPzogYm9vbGVhbjtcbiAgICBzaG93U2Vjb25kcz86IGJvb2xlYW47XG4gICAgc2hvd1JlbGF0aXZlPzogYm9vbGVhbjtcbn1cblxuQHJlcGxhY2VhYmxlQ29tcG9uZW50KFwidmlld3MubWVzc2FnZXMuTWVzc2FnZVRpbWVzdGFtcFwiKVxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWVzc2FnZVRpbWVzdGFtcCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxJUHJvcHM+IHtcbiAgICBwdWJsaWMgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUodGhpcy5wcm9wcy50cyk7XG4gICAgICAgIGxldCB0aW1lc3RhbXA7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLnNob3dSZWxhdGl2ZSkge1xuICAgICAgICAgICAgdGltZXN0YW1wID0gZm9ybWF0UmVsYXRpdmVUaW1lKGRhdGUsIHRoaXMucHJvcHMuc2hvd1R3ZWx2ZUhvdXIpO1xuICAgICAgICB9IGVsc2UgaWYgKHRoaXMucHJvcHMuc2hvd0Z1bGxEYXRlKSB7XG4gICAgICAgICAgICB0aW1lc3RhbXAgPSBmb3JtYXRGdWxsRGF0ZShkYXRlLCB0aGlzLnByb3BzLnNob3dUd2VsdmVIb3VyLCB0aGlzLnByb3BzLnNob3dTZWNvbmRzKTtcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnByb3BzLnNob3dTZWNvbmRzKSB7XG4gICAgICAgICAgICB0aW1lc3RhbXAgPSBmb3JtYXRGdWxsVGltZShkYXRlLCB0aGlzLnByb3BzLnNob3dUd2VsdmVIb3VyKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRpbWVzdGFtcCA9IGZvcm1hdFRpbWUoZGF0ZSwgdGhpcy5wcm9wcy5zaG93VHdlbHZlSG91cik7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJteF9NZXNzYWdlVGltZXN0YW1wXCJcbiAgICAgICAgICAgICAgICB0aXRsZT17Zm9ybWF0RnVsbERhdGUoZGF0ZSwgdGhpcy5wcm9wcy5zaG93VHdlbHZlSG91cil9XG4gICAgICAgICAgICAgICAgYXJpYS1oaWRkZW49e3RydWV9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgeyB0aW1lc3RhbXAgfVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICApO1xuICAgIH1cbn1cbiJdfQ==