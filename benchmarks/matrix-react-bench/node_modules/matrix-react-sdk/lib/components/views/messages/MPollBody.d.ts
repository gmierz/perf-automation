import React from 'react';
import { IBodyProps } from "./IBodyProps";
import { Relations } from 'matrix-js-sdk/src/models/relations';
import MatrixClientContext from "../../../contexts/MatrixClientContext";
interface IState {
    selected?: string;
    pollRelations: Relations;
}
export default class MPollBody extends React.Component<IBodyProps, IState> {
    static contextType: React.Context<import("matrix-js-sdk").MatrixClient>;
    context: React.ContextType<typeof MatrixClientContext>;
    constructor(props: IBodyProps);
    componentWillUnmount(): void;
    private addListeners;
    private removeListeners;
    private onPollRelationsCreated;
    private onRelationsChange;
    private selectOption;
    private onOptionSelected;
    private fetchPollRelations;
    /**
     * @returns userId -> UserVote
     */
    private collectUserVotes;
    private totalVotes;
    render(): JSX.Element;
}
export declare class UserVote {
    readonly ts: number;
    readonly sender: string;
    readonly answers: string[];
    constructor(ts: number, sender: string, answers: string[]);
}
export declare function allVotes(pollRelations: Relations): Array<UserVote>;
export {};
