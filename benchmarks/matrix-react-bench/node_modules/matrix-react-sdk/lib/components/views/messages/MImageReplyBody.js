"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _MImageBody = _interopRequireDefault(require("./MImageBody"));

var _FileUtils = require("../../../utils/FileUtils");

var _SenderProfile = _interopRequireDefault(require("./SenderProfile"));

var _event = require("matrix-js-sdk/src/@types/event");

var _languageHandler = require("../../../languageHandler");

/*
Copyright 2020-2021 Tulir Asokan <tulir@maunium.net>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
const FORCED_IMAGE_HEIGHT = 44;

class MImageReplyBody extends _MImageBody.default {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "onClick", ev => {
      ev.preventDefault();
    });
  }

  wrapImage(contentUrl, children) {
    return children;
  } // Don't show "Download this_file.png ..."


  getFileBody() {
    const sticker = this.props.mxEvent.getType() === _event.EventType.Sticker;

    return (0, _FileUtils.presentableTextForFile)(this.props.mxEvent.getContent(), sticker ? (0, _languageHandler._t)("Sticker") : (0, _languageHandler._t)("Image"), !sticker);
  }

  render() {
    if (this.state.error !== null) {
      return super.render();
    }

    const content = this.props.mxEvent.getContent();
    const contentUrl = this.getContentUrl();
    const thumbnail = this.messageContent(contentUrl, this.getThumbUrl(), content, FORCED_IMAGE_HEIGHT);
    const fileBody = this.getFileBody();

    const sender = /*#__PURE__*/_react.default.createElement(_SenderProfile.default, {
      mxEvent: this.props.mxEvent,
      enableFlair: false
    });

    return /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_MImageReplyBody"
    }, thumbnail, /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_MImageReplyBody_info"
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_MImageReplyBody_sender"
    }, sender), /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_MImageReplyBody_filename"
    }, fileBody)));
  }

}

exports.default = MImageReplyBody;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL21lc3NhZ2VzL01JbWFnZVJlcGx5Qm9keS50c3giXSwibmFtZXMiOlsiRk9SQ0VEX0lNQUdFX0hFSUdIVCIsIk1JbWFnZVJlcGx5Qm9keSIsIk1JbWFnZUJvZHkiLCJldiIsInByZXZlbnREZWZhdWx0Iiwid3JhcEltYWdlIiwiY29udGVudFVybCIsImNoaWxkcmVuIiwiZ2V0RmlsZUJvZHkiLCJzdGlja2VyIiwicHJvcHMiLCJteEV2ZW50IiwiZ2V0VHlwZSIsIkV2ZW50VHlwZSIsIlN0aWNrZXIiLCJnZXRDb250ZW50IiwicmVuZGVyIiwic3RhdGUiLCJlcnJvciIsImNvbnRlbnQiLCJnZXRDb250ZW50VXJsIiwidGh1bWJuYWlsIiwibWVzc2FnZUNvbnRlbnQiLCJnZXRUaHVtYlVybCIsImZpbGVCb2R5Iiwic2VuZGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQWdCQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUF0QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVUEsTUFBTUEsbUJBQW1CLEdBQUcsRUFBNUI7O0FBRWUsTUFBTUMsZUFBTixTQUE4QkMsbUJBQTlCLENBQXlDO0FBQUE7QUFBQTtBQUFBLG1EQUNsQ0MsRUFBRCxJQUFnQztBQUM3Q0EsTUFBQUEsRUFBRSxDQUFDQyxjQUFIO0FBQ0gsS0FIbUQ7QUFBQTs7QUFLN0NDLEVBQUFBLFNBQVMsQ0FBQ0MsVUFBRCxFQUFxQkMsUUFBckIsRUFBeUQ7QUFDckUsV0FBT0EsUUFBUDtBQUNILEdBUG1ELENBU3BEOzs7QUFDT0MsRUFBQUEsV0FBVyxHQUFXO0FBQ3pCLFVBQU1DLE9BQU8sR0FBRyxLQUFLQyxLQUFMLENBQVdDLE9BQVgsQ0FBbUJDLE9BQW5CLE9BQWlDQyxpQkFBVUMsT0FBM0Q7O0FBQ0EsV0FBTyx1Q0FBdUIsS0FBS0osS0FBTCxDQUFXQyxPQUFYLENBQW1CSSxVQUFuQixFQUF2QixFQUF3RE4sT0FBTyxHQUFHLHlCQUFHLFNBQUgsQ0FBSCxHQUFtQix5QkFBRyxPQUFILENBQWxGLEVBQStGLENBQUNBLE9BQWhHLENBQVA7QUFDSDs7QUFFRE8sRUFBQUEsTUFBTSxHQUFHO0FBQ0wsUUFBSSxLQUFLQyxLQUFMLENBQVdDLEtBQVgsS0FBcUIsSUFBekIsRUFBK0I7QUFDM0IsYUFBTyxNQUFNRixNQUFOLEVBQVA7QUFDSDs7QUFFRCxVQUFNRyxPQUFPLEdBQUcsS0FBS1QsS0FBTCxDQUFXQyxPQUFYLENBQW1CSSxVQUFuQixFQUFoQjtBQUVBLFVBQU1ULFVBQVUsR0FBRyxLQUFLYyxhQUFMLEVBQW5CO0FBQ0EsVUFBTUMsU0FBUyxHQUFHLEtBQUtDLGNBQUwsQ0FBb0JoQixVQUFwQixFQUFnQyxLQUFLaUIsV0FBTCxFQUFoQyxFQUFvREosT0FBcEQsRUFBNkRuQixtQkFBN0QsQ0FBbEI7QUFDQSxVQUFNd0IsUUFBUSxHQUFHLEtBQUtoQixXQUFMLEVBQWpCOztBQUNBLFVBQU1pQixNQUFNLGdCQUFHLDZCQUFDLHNCQUFEO0FBQ1gsTUFBQSxPQUFPLEVBQUUsS0FBS2YsS0FBTCxDQUFXQyxPQURUO0FBRVgsTUFBQSxXQUFXLEVBQUU7QUFGRixNQUFmOztBQUtBLHdCQUFPO0FBQUssTUFBQSxTQUFTLEVBQUM7QUFBZixPQUNEVSxTQURDLGVBRUg7QUFBSyxNQUFBLFNBQVMsRUFBQztBQUFmLG9CQUNJO0FBQUssTUFBQSxTQUFTLEVBQUM7QUFBZixPQUE2Q0ksTUFBN0MsQ0FESixlQUVJO0FBQUssTUFBQSxTQUFTLEVBQUM7QUFBZixPQUErQ0QsUUFBL0MsQ0FGSixDQUZHLENBQVA7QUFPSDs7QUFyQ21EIiwic291cmNlc0NvbnRlbnQiOlsiLypcbkNvcHlyaWdodCAyMDIwLTIwMjEgVHVsaXIgQXNva2FuIDx0dWxpckBtYXVuaXVtLm5ldD5cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgTUltYWdlQm9keSBmcm9tIFwiLi9NSW1hZ2VCb2R5XCI7XG5pbXBvcnQgeyBwcmVzZW50YWJsZVRleHRGb3JGaWxlIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL0ZpbGVVdGlsc1wiO1xuaW1wb3J0IHsgSU1lZGlhRXZlbnRDb250ZW50IH0gZnJvbSBcIi4uLy4uLy4uL2N1c3RvbWlzYXRpb25zL21vZGVscy9JTWVkaWFFdmVudENvbnRlbnRcIjtcbmltcG9ydCBTZW5kZXJQcm9maWxlIGZyb20gXCIuL1NlbmRlclByb2ZpbGVcIjtcbmltcG9ydCB7IEV2ZW50VHlwZSB9IGZyb20gXCJtYXRyaXgtanMtc2RrL3NyYy9AdHlwZXMvZXZlbnRcIjtcbmltcG9ydCB7IF90IH0gZnJvbSBcIi4uLy4uLy4uL2xhbmd1YWdlSGFuZGxlclwiO1xuXG5jb25zdCBGT1JDRURfSU1BR0VfSEVJR0hUID0gNDQ7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1JbWFnZVJlcGx5Qm9keSBleHRlbmRzIE1JbWFnZUJvZHkge1xuICAgIHB1YmxpYyBvbkNsaWNrID0gKGV2OiBSZWFjdC5Nb3VzZUV2ZW50KTogdm9pZCA9PiB7XG4gICAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG4gICAgfTtcblxuICAgIHB1YmxpYyB3cmFwSW1hZ2UoY29udGVudFVybDogc3RyaW5nLCBjaGlsZHJlbjogSlNYLkVsZW1lbnQpOiBKU1guRWxlbWVudCB7XG4gICAgICAgIHJldHVybiBjaGlsZHJlbjtcbiAgICB9XG5cbiAgICAvLyBEb24ndCBzaG93IFwiRG93bmxvYWQgdGhpc19maWxlLnBuZyAuLi5cIlxuICAgIHB1YmxpYyBnZXRGaWxlQm9keSgpOiBzdHJpbmcge1xuICAgICAgICBjb25zdCBzdGlja2VyID0gdGhpcy5wcm9wcy5teEV2ZW50LmdldFR5cGUoKSA9PT0gRXZlbnRUeXBlLlN0aWNrZXI7XG4gICAgICAgIHJldHVybiBwcmVzZW50YWJsZVRleHRGb3JGaWxlKHRoaXMucHJvcHMubXhFdmVudC5nZXRDb250ZW50KCksIHN0aWNrZXIgPyBfdChcIlN0aWNrZXJcIikgOiBfdChcIkltYWdlXCIpLCAhc3RpY2tlcik7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBpZiAodGhpcy5zdGF0ZS5lcnJvciAhPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIHN1cGVyLnJlbmRlcigpO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgY29udGVudCA9IHRoaXMucHJvcHMubXhFdmVudC5nZXRDb250ZW50PElNZWRpYUV2ZW50Q29udGVudD4oKTtcblxuICAgICAgICBjb25zdCBjb250ZW50VXJsID0gdGhpcy5nZXRDb250ZW50VXJsKCk7XG4gICAgICAgIGNvbnN0IHRodW1ibmFpbCA9IHRoaXMubWVzc2FnZUNvbnRlbnQoY29udGVudFVybCwgdGhpcy5nZXRUaHVtYlVybCgpLCBjb250ZW50LCBGT1JDRURfSU1BR0VfSEVJR0hUKTtcbiAgICAgICAgY29uc3QgZmlsZUJvZHkgPSB0aGlzLmdldEZpbGVCb2R5KCk7XG4gICAgICAgIGNvbnN0IHNlbmRlciA9IDxTZW5kZXJQcm9maWxlXG4gICAgICAgICAgICBteEV2ZW50PXt0aGlzLnByb3BzLm14RXZlbnR9XG4gICAgICAgICAgICBlbmFibGVGbGFpcj17ZmFsc2V9XG4gICAgICAgIC8+O1xuXG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cIm14X01JbWFnZVJlcGx5Qm9keVwiPlxuICAgICAgICAgICAgeyB0aHVtYm5haWwgfVxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJteF9NSW1hZ2VSZXBseUJvZHlfaW5mb1wiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXhfTUltYWdlUmVwbHlCb2R5X3NlbmRlclwiPnsgc2VuZGVyIH08L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm14X01JbWFnZVJlcGx5Qm9keV9maWxlbmFtZVwiPnsgZmlsZUJvZHkgfTwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PjtcbiAgICB9XG59XG4iXX0=