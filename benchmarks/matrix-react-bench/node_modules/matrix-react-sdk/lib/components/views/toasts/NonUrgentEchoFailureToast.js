"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _languageHandler = require("../../../languageHandler");

var _AccessibleButton = _interopRequireDefault(require("../elements/AccessibleButton"));

var _Modal = _interopRequireDefault(require("../../../Modal"));

var _ServerOfflineDialog = _interopRequireDefault(require("../dialogs/ServerOfflineDialog"));

var _replaceableComponent = require("../../../utils/replaceableComponent");

var _dec, _class;

let NonUrgentEchoFailureToast = (_dec = (0, _replaceableComponent.replaceableComponent)("views.toasts.NonUrgentEchoFailureToast"), _dec(_class = class NonUrgentEchoFailureToast extends _react.default.PureComponent {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "openDialog", () => {
      _Modal.default.createTrackedDialog('Local Echo Server Error', '', _ServerOfflineDialog.default, {});
    });
  }

  render() {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_NonUrgentEchoFailureToast"
    }, /*#__PURE__*/_react.default.createElement("span", {
      className: "mx_NonUrgentEchoFailureToast_icon"
    }), (0, _languageHandler._t)("Your server isn't responding to some <a>requests</a>.", {}, {
      'a': sub => /*#__PURE__*/_react.default.createElement(_AccessibleButton.default, {
        kind: "link",
        onClick: this.openDialog
      }, sub)
    }));
  }

}) || _class);
exports.default = NonUrgentEchoFailureToast;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL3RvYXN0cy9Ob25VcmdlbnRFY2hvRmFpbHVyZVRvYXN0LnRzeCJdLCJuYW1lcyI6WyJOb25VcmdlbnRFY2hvRmFpbHVyZVRvYXN0IiwiUmVhY3QiLCJQdXJlQ29tcG9uZW50IiwiTW9kYWwiLCJjcmVhdGVUcmFja2VkRGlhbG9nIiwiU2VydmVyT2ZmbGluZURpYWxvZyIsInJlbmRlciIsInN1YiIsIm9wZW5EaWFsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBZ0JBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0lBR3FCQSx5QixXQURwQixnREFBcUIsd0NBQXJCLEMsZ0JBQUQsTUFDcUJBLHlCQURyQixTQUN1REMsZUFBTUMsYUFEN0QsQ0FDMkU7QUFBQTtBQUFBO0FBQUEsc0RBQ2xELE1BQU07QUFDdkJDLHFCQUFNQyxtQkFBTixDQUEwQix5QkFBMUIsRUFBcUQsRUFBckQsRUFBeURDLDRCQUF6RCxFQUE4RSxFQUE5RTtBQUNILEtBSHNFO0FBQUE7O0FBS2hFQyxFQUFBQSxNQUFNLEdBQUc7QUFDWix3QkFDSTtBQUFLLE1BQUEsU0FBUyxFQUFDO0FBQWYsb0JBQ0k7QUFBTSxNQUFBLFNBQVMsRUFBQztBQUFoQixNQURKLEVBRU0seUJBQUcsdURBQUgsRUFBNEQsRUFBNUQsRUFBZ0U7QUFDOUQsV0FBTUMsR0FBRCxpQkFDRCw2QkFBQyx5QkFBRDtBQUFrQixRQUFBLElBQUksRUFBQyxNQUF2QjtBQUE4QixRQUFBLE9BQU8sRUFBRSxLQUFLQztBQUE1QyxTQUEwREQsR0FBMUQ7QUFGMEQsS0FBaEUsQ0FGTixDQURKO0FBVUg7O0FBaEJzRSxDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbkNvcHlyaWdodCAyMDIwIFRoZSBNYXRyaXgub3JnIEZvdW5kYXRpb24gQy5JLkMuXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBfdCB9IGZyb20gXCIuLi8uLi8uLi9sYW5ndWFnZUhhbmRsZXJcIjtcbmltcG9ydCBBY2Nlc3NpYmxlQnV0dG9uIGZyb20gXCIuLi9lbGVtZW50cy9BY2Nlc3NpYmxlQnV0dG9uXCI7XG5pbXBvcnQgTW9kYWwgZnJvbSBcIi4uLy4uLy4uL01vZGFsXCI7XG5pbXBvcnQgU2VydmVyT2ZmbGluZURpYWxvZyBmcm9tIFwiLi4vZGlhbG9ncy9TZXJ2ZXJPZmZsaW5lRGlhbG9nXCI7XG5pbXBvcnQgeyByZXBsYWNlYWJsZUNvbXBvbmVudCB9IGZyb20gXCIuLi8uLi8uLi91dGlscy9yZXBsYWNlYWJsZUNvbXBvbmVudFwiO1xuXG5AcmVwbGFjZWFibGVDb21wb25lbnQoXCJ2aWV3cy50b2FzdHMuTm9uVXJnZW50RWNob0ZhaWx1cmVUb2FzdFwiKVxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTm9uVXJnZW50RWNob0ZhaWx1cmVUb2FzdCBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQge1xuICAgIHByaXZhdGUgb3BlbkRpYWxvZyA9ICgpID0+IHtcbiAgICAgICAgTW9kYWwuY3JlYXRlVHJhY2tlZERpYWxvZygnTG9jYWwgRWNobyBTZXJ2ZXIgRXJyb3InLCAnJywgU2VydmVyT2ZmbGluZURpYWxvZywge30pO1xuICAgIH07XG5cbiAgICBwdWJsaWMgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJteF9Ob25VcmdlbnRFY2hvRmFpbHVyZVRvYXN0XCI+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibXhfTm9uVXJnZW50RWNob0ZhaWx1cmVUb2FzdF9pY29uXCIgLz5cbiAgICAgICAgICAgICAgICB7IF90KFwiWW91ciBzZXJ2ZXIgaXNuJ3QgcmVzcG9uZGluZyB0byBzb21lIDxhPnJlcXVlc3RzPC9hPi5cIiwge30sIHtcbiAgICAgICAgICAgICAgICAgICAgJ2EnOiAoc3ViKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8QWNjZXNzaWJsZUJ1dHRvbiBraW5kPVwibGlua1wiIG9uQ2xpY2s9e3RoaXMub3BlbkRpYWxvZ30+eyBzdWIgfTwvQWNjZXNzaWJsZUJ1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICB9KSB9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG4iXX0=