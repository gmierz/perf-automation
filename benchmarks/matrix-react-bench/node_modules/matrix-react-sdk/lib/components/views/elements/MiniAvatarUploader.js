"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.AVATAR_SIZE = void 0;

var _react = _interopRequireWildcard(require("react"));

var _event = require("matrix-js-sdk/src/@types/event");

var _classnames = _interopRequireDefault(require("classnames"));

var _AccessibleButton = _interopRequireDefault(require("./AccessibleButton"));

var _Spinner = _interopRequireDefault(require("./Spinner"));

var _MatrixClientContext = _interopRequireDefault(require("../../../contexts/MatrixClientContext"));

var _useTimeout = require("../../../hooks/useTimeout");

var _Analytics = _interopRequireDefault(require("../../../Analytics"));

var _CountlyAnalytics = _interopRequireDefault(require("../../../CountlyAnalytics"));

var _RoomContext = _interopRequireDefault(require("../../../contexts/RoomContext"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/*
Copyright 2020 The Matrix.org Foundation C.I.C.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
const AVATAR_SIZE = 52;
exports.AVATAR_SIZE = AVATAR_SIZE;

const MiniAvatarUploader = ({
  hasAvatar,
  hasAvatarLabel,
  noAvatarLabel,
  setAvatarUrl,
  children
}) => {
  const cli = (0, _react.useContext)(_MatrixClientContext.default);
  const [busy, setBusy] = (0, _react.useState)(false);
  const [hover, setHover] = (0, _react.useState)(false);
  const [show, setShow] = (0, _react.useState)(false);
  (0, _useTimeout.useTimeout)(() => {
    setShow(true);
  }, 3000); // show after 3 seconds

  (0, _useTimeout.useTimeout)(() => {
    setShow(false);
  }, 13000); // hide after being shown for 10 seconds

  const uploadRef = (0, _react.useRef)();
  const label = hasAvatar || busy ? hasAvatarLabel : noAvatarLabel;
  const {
    room
  } = (0, _react.useContext)(_RoomContext.default);
  const canSetAvatar = room === null || room === void 0 ? void 0 : room.currentState.maySendStateEvent(_event.EventType.RoomAvatar, cli.getUserId());
  if (!canSetAvatar) return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, children);
  const visible = !!label && (hover || show);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("input", {
    type: "file",
    ref: uploadRef,
    className: "mx_MiniAvatarUploader_input",
    onChange: async ev => {
      var _ev$target$files;

      if (!((_ev$target$files = ev.target.files) !== null && _ev$target$files !== void 0 && _ev$target$files.length)) return;
      setBusy(true);

      _Analytics.default.trackEvent("mini_avatar", "upload");

      _CountlyAnalytics.default.instance.track("mini_avatar_upload");

      const file = ev.target.files[0];
      const uri = await cli.uploadContent(file);
      await setAvatarUrl(uri);
      setBusy(false);
    },
    accept: "image/*"
  }), /*#__PURE__*/_react.default.createElement(_AccessibleButton.default, {
    className: (0, _classnames.default)("mx_MiniAvatarUploader", {
      mx_MiniAvatarUploader_busy: busy,
      mx_MiniAvatarUploader_hasAvatar: hasAvatar
    }),
    disabled: busy,
    onClick: () => {
      uploadRef.current.click();
    },
    onMouseOver: () => setHover(true),
    onMouseLeave: () => setHover(false)
  }, children, /*#__PURE__*/_react.default.createElement("div", {
    className: "mx_MiniAvatarUploader_indicator"
  }, busy ? /*#__PURE__*/_react.default.createElement(_Spinner.default, {
    w: 20,
    h: 20
  }) : /*#__PURE__*/_react.default.createElement("div", {
    className: "mx_MiniAvatarUploader_cameraIcon"
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)("mx_Tooltip", {
      "mx_Tooltip_visible": visible,
      "mx_Tooltip_invisible": !visible
    })
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "mx_Tooltip_chevron"
  }), label)));
};

var _default = MiniAvatarUploader;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,