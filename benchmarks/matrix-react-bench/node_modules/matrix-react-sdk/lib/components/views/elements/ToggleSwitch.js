"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _AccessibleButton = _interopRequireDefault(require("./AccessibleButton"));

const _excluded = ["checked", "disabled", "onChange"];

// Controlled Toggle Switch element, written with Accessibility in mind
var _default = _ref => {
  let {
    checked,
    disabled = false,
    onChange
  } = _ref,
      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);

  const _onClick = () => {
    if (disabled) return;
    onChange(!checked);
  };

  const classes = (0, _classnames.default)({
    "mx_ToggleSwitch": true,
    "mx_ToggleSwitch_on": checked,
    "mx_ToggleSwitch_enabled": !disabled
  });
  return /*#__PURE__*/_react.default.createElement(_AccessibleButton.default, (0, _extends2.default)({}, props, {
    className: classes,
    onClick: _onClick,
    role: "switch",
    "aria-checked": checked,
    "aria-disabled": disabled
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "mx_ToggleSwitch_ball"
  }));
};

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL2VsZW1lbnRzL1RvZ2dsZVN3aXRjaC50c3giXSwibmFtZXMiOlsiY2hlY2tlZCIsImRpc2FibGVkIiwib25DaGFuZ2UiLCJwcm9wcyIsIl9vbkNsaWNrIiwiY2xhc3NlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQWlCQTs7QUFDQTs7QUFDQTs7OztBQWFBO2VBQ2UsUUFBK0Q7QUFBQSxNQUE5RDtBQUFFQSxJQUFBQSxPQUFGO0FBQVdDLElBQUFBLFFBQVEsR0FBRyxLQUF0QjtBQUE2QkMsSUFBQUE7QUFBN0IsR0FBOEQ7QUFBQSxNQUFwQkMsS0FBb0I7O0FBQzFFLFFBQU1DLFFBQVEsR0FBRyxNQUFNO0FBQ25CLFFBQUlILFFBQUosRUFBYztBQUNkQyxJQUFBQSxRQUFRLENBQUMsQ0FBQ0YsT0FBRixDQUFSO0FBQ0gsR0FIRDs7QUFLQSxRQUFNSyxPQUFPLEdBQUcseUJBQVc7QUFDdkIsdUJBQW1CLElBREk7QUFFdkIsMEJBQXNCTCxPQUZDO0FBR3ZCLCtCQUEyQixDQUFDQztBQUhMLEdBQVgsQ0FBaEI7QUFNQSxzQkFDSSw2QkFBQyx5QkFBRCw2QkFBc0JFLEtBQXRCO0FBQ0ksSUFBQSxTQUFTLEVBQUVFLE9BRGY7QUFFSSxJQUFBLE9BQU8sRUFBRUQsUUFGYjtBQUdJLElBQUEsSUFBSSxFQUFDLFFBSFQ7QUFJSSxvQkFBY0osT0FKbEI7QUFLSSxxQkFBZUM7QUFMbkIsbUJBT0k7QUFBSyxJQUFBLFNBQVMsRUFBQztBQUFmLElBUEosQ0FESjtBQVdILEMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQ29weXJpZ2h0IDIwMTkgTmV3IFZlY3RvciBMdGRcbkNvcHlyaWdodCAyMDE5IFRoZSBNYXRyaXgub3JnIEZvdW5kYXRpb24gQy5JLkMuXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSBcImNsYXNzbmFtZXNcIjtcbmltcG9ydCBBY2Nlc3NpYmxlQnV0dG9uIGZyb20gXCIuL0FjY2Vzc2libGVCdXR0b25cIjtcblxuaW50ZXJmYWNlIElQcm9wcyB7XG4gICAgLy8gV2hldGhlciBvciBub3QgdGhpcyB0b2dnbGUgaXMgaW4gdGhlICdvbicgcG9zaXRpb24uXG4gICAgY2hlY2tlZDogYm9vbGVhbjtcblxuICAgIC8vIFdoZXRoZXIgb3Igbm90IHRoZSB1c2VyIGNhbiBpbnRlcmFjdCB3aXRoIHRoZSBzd2l0Y2hcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcblxuICAgIC8vIENhbGxlZCB3aGVuIHRoZSBjaGVja2VkIHN0YXRlIGNoYW5nZXMuIEZpcnN0IGFyZ3VtZW50IHdpbGwgYmUgdGhlIG5ldyBzdGF0ZS5cbiAgICBvbkNoYW5nZShjaGVja2VkOiBib29sZWFuKTogdm9pZDtcbn1cblxuLy8gQ29udHJvbGxlZCBUb2dnbGUgU3dpdGNoIGVsZW1lbnQsIHdyaXR0ZW4gd2l0aCBBY2Nlc3NpYmlsaXR5IGluIG1pbmRcbmV4cG9ydCBkZWZhdWx0ICh7IGNoZWNrZWQsIGRpc2FibGVkID0gZmFsc2UsIG9uQ2hhbmdlLCAuLi5wcm9wcyB9OiBJUHJvcHMpID0+IHtcbiAgICBjb25zdCBfb25DbGljayA9ICgpID0+IHtcbiAgICAgICAgaWYgKGRpc2FibGVkKSByZXR1cm47XG4gICAgICAgIG9uQ2hhbmdlKCFjaGVja2VkKTtcbiAgICB9O1xuXG4gICAgY29uc3QgY2xhc3NlcyA9IGNsYXNzTmFtZXMoe1xuICAgICAgICBcIm14X1RvZ2dsZVN3aXRjaFwiOiB0cnVlLFxuICAgICAgICBcIm14X1RvZ2dsZVN3aXRjaF9vblwiOiBjaGVja2VkLFxuICAgICAgICBcIm14X1RvZ2dsZVN3aXRjaF9lbmFibGVkXCI6ICFkaXNhYmxlZCxcbiAgICB9KTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxBY2Nlc3NpYmxlQnV0dG9uIHsuLi5wcm9wc31cbiAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3Nlc31cbiAgICAgICAgICAgIG9uQ2xpY2s9e19vbkNsaWNrfVxuICAgICAgICAgICAgcm9sZT1cInN3aXRjaFwiXG4gICAgICAgICAgICBhcmlhLWNoZWNrZWQ9e2NoZWNrZWR9XG4gICAgICAgICAgICBhcmlhLWRpc2FibGVkPXtkaXNhYmxlZH1cbiAgICAgICAgPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJteF9Ub2dnbGVTd2l0Y2hfYmFsbFwiIC8+XG4gICAgICAgIDwvQWNjZXNzaWJsZUJ1dHRvbj5cbiAgICApO1xufTtcbiJdfQ==