"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _languageHandler = require("../../../languageHandler");

var _replaceableComponent = require("../../../utils/replaceableComponent");

var _dec, _class, _class2, _temp;

let DialogButtons = (
/**
 * Basic container for buttons in modal dialogs.
 */
_dec = (0, _replaceableComponent.replaceableComponent)("views.elements.DialogButtons"), _dec(_class = (_temp = _class2 = class DialogButtons extends _react.default.Component {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "onCancelClick", event => {
      this.props.onCancel(event);
    });
  }

  render() {
    let primaryButtonClassName = "mx_Dialog_primary";

    if (this.props.primaryButtonClass) {
      primaryButtonClassName += " " + this.props.primaryButtonClass;
    }

    let cancelButton;

    if (this.props.cancelButton || this.props.hasCancel) {
      cancelButton = /*#__PURE__*/_react.default.createElement("button", {
        // important: the default type is 'submit' and this button comes before the
        // primary in the DOM so will get form submissions unless we make it not a submit.
        type: "button",
        onClick: this.onCancelClick,
        className: this.props.cancelButtonClass,
        disabled: this.props.disabled
      }, this.props.cancelButton || (0, _languageHandler._t)("Cancel"));
    }

    let additive = null;

    if (this.props.additive) {
      additive = /*#__PURE__*/_react.default.createElement("div", {
        className: "mx_Dialog_buttons_additive"
      }, this.props.additive);
    }

    return /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_Dialog_buttons"
    }, additive, cancelButton, this.props.children, /*#__PURE__*/_react.default.createElement("button", {
      type: this.props.primaryIsSubmit ? 'submit' : 'button',
      className: primaryButtonClassName,
      onClick: this.props.onPrimaryButtonClick,
      autoFocus: this.props.focus,
      disabled: this.props.disabled || this.props.primaryDisabled
    }, this.props.primaryButton));
  }

}, (0, _defineProperty2.default)(_class2, "defaultProps", {
  hasCancel: true,
  disabled: false
}), _temp)) || _class);
exports.default = DialogButtons;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL2VsZW1lbnRzL0RpYWxvZ0J1dHRvbnMudHN4Il0sIm5hbWVzIjpbIkRpYWxvZ0J1dHRvbnMiLCJSZWFjdCIsIkNvbXBvbmVudCIsImV2ZW50IiwicHJvcHMiLCJvbkNhbmNlbCIsInJlbmRlciIsInByaW1hcnlCdXR0b25DbGFzc05hbWUiLCJwcmltYXJ5QnV0dG9uQ2xhc3MiLCJjYW5jZWxCdXR0b24iLCJoYXNDYW5jZWwiLCJvbkNhbmNlbENsaWNrIiwiY2FuY2VsQnV0dG9uQ2xhc3MiLCJkaXNhYmxlZCIsImFkZGl0aXZlIiwiY2hpbGRyZW4iLCJwcmltYXJ5SXNTdWJtaXQiLCJvblByaW1hcnlCdXR0b25DbGljayIsImZvY3VzIiwicHJpbWFyeURpc2FibGVkIiwicHJpbWFyeUJ1dHRvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFrQkE7O0FBQ0E7O0FBQ0E7Ozs7SUEyQ3FCQSxhO0FBSnJCO0FBQ0E7QUFDQTtPQUNDLGdEQUFxQiw4QkFBckIsQyxtQ0FBRCxNQUNxQkEsYUFEckIsU0FDMkNDLGVBQU1DLFNBRGpELENBQ21FO0FBQUE7QUFBQTtBQUFBLHlEQU10Q0MsS0FBRCxJQUFtQztBQUN2RCxXQUFLQyxLQUFMLENBQVdDLFFBQVgsQ0FBb0JGLEtBQXBCO0FBQ0gsS0FSOEQ7QUFBQTs7QUFVeERHLEVBQUFBLE1BQU0sR0FBZ0I7QUFDekIsUUFBSUMsc0JBQXNCLEdBQUcsbUJBQTdCOztBQUNBLFFBQUksS0FBS0gsS0FBTCxDQUFXSSxrQkFBZixFQUFtQztBQUMvQkQsTUFBQUEsc0JBQXNCLElBQUksTUFBTSxLQUFLSCxLQUFMLENBQVdJLGtCQUEzQztBQUNIOztBQUNELFFBQUlDLFlBQUo7O0FBRUEsUUFBSSxLQUFLTCxLQUFMLENBQVdLLFlBQVgsSUFBMkIsS0FBS0wsS0FBTCxDQUFXTSxTQUExQyxFQUFxRDtBQUNqREQsTUFBQUEsWUFBWSxnQkFBRztBQUNYO0FBQ0E7QUFDQSxRQUFBLElBQUksRUFBQyxRQUhNO0FBSVgsUUFBQSxPQUFPLEVBQUUsS0FBS0UsYUFKSDtBQUtYLFFBQUEsU0FBUyxFQUFFLEtBQUtQLEtBQUwsQ0FBV1EsaUJBTFg7QUFNWCxRQUFBLFFBQVEsRUFBRSxLQUFLUixLQUFMLENBQVdTO0FBTlYsU0FRVCxLQUFLVCxLQUFMLENBQVdLLFlBQVgsSUFBMkIseUJBQUcsUUFBSCxDQVJsQixDQUFmO0FBVUg7O0FBRUQsUUFBSUssUUFBUSxHQUFHLElBQWY7O0FBQ0EsUUFBSSxLQUFLVixLQUFMLENBQVdVLFFBQWYsRUFBeUI7QUFDckJBLE1BQUFBLFFBQVEsZ0JBQUc7QUFBSyxRQUFBLFNBQVMsRUFBQztBQUFmLFNBQThDLEtBQUtWLEtBQUwsQ0FBV1UsUUFBekQsQ0FBWDtBQUNIOztBQUVELHdCQUNJO0FBQUssTUFBQSxTQUFTLEVBQUM7QUFBZixPQUNNQSxRQUROLEVBRU1MLFlBRk4sRUFHTSxLQUFLTCxLQUFMLENBQVdXLFFBSGpCLGVBSUk7QUFBUSxNQUFBLElBQUksRUFBRSxLQUFLWCxLQUFMLENBQVdZLGVBQVgsR0FBNkIsUUFBN0IsR0FBd0MsUUFBdEQ7QUFDSSxNQUFBLFNBQVMsRUFBRVQsc0JBRGY7QUFFSSxNQUFBLE9BQU8sRUFBRSxLQUFLSCxLQUFMLENBQVdhLG9CQUZ4QjtBQUdJLE1BQUEsU0FBUyxFQUFFLEtBQUtiLEtBQUwsQ0FBV2MsS0FIMUI7QUFJSSxNQUFBLFFBQVEsRUFBRSxLQUFLZCxLQUFMLENBQVdTLFFBQVgsSUFBdUIsS0FBS1QsS0FBTCxDQUFXZTtBQUpoRCxPQU1NLEtBQUtmLEtBQUwsQ0FBV2dCLGFBTmpCLENBSkosQ0FESjtBQWVIOztBQWxEOEQsQyx5REFDakI7QUFDMUNWLEVBQUFBLFNBQVMsRUFBRSxJQUQrQjtBQUUxQ0csRUFBQUEsUUFBUSxFQUFFO0FBRmdDLEMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQ29weXJpZ2h0IDIwMTcgQWlkYW4gR2F1bGFuZFxuQ29weXJpZ2h0IDIwMTggTmV3IFZlY3RvciBMdGQuXG5Db3B5cmlnaHQgMjAxOSBUaGUgTWF0cml4Lm9yZyBGb3VuZGF0aW9uIEMuSS5DLlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IF90IH0gZnJvbSAnLi4vLi4vLi4vbGFuZ3VhZ2VIYW5kbGVyJztcbmltcG9ydCB7IHJlcGxhY2VhYmxlQ29tcG9uZW50IH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL3JlcGxhY2VhYmxlQ29tcG9uZW50XCI7XG5cbmludGVyZmFjZSBJUHJvcHMge1xuICAgIC8vIFRoZSBwcmltYXJ5IGJ1dHRvbiB3aGljaCBpcyBzdHlsZWQgZGlmZmVyZW50bHkgYW5kIGhhcyBkZWZhdWx0IGZvY3VzLlxuICAgIHByaW1hcnlCdXR0b246IFJlYWN0LlJlYWN0Tm9kZTtcblxuICAgIC8vIEEgbm9kZSB0byBpbnNlcnQgaW50byB0aGUgY2FuY2VsIGJ1dHRvbiBpbnN0ZWFkIG9mIGRlZmF1bHQgXCJDYW5jZWxcIlxuICAgIGNhbmNlbEJ1dHRvbj86IFJlYWN0LlJlYWN0Tm9kZTtcblxuICAgIC8vIElmIHRydWUsIG1ha2UgdGhlIHByaW1hcnkgYnV0dG9uIGEgZm9ybSBzdWJtaXQgYnV0dG9uIChpbnB1dCB0eXBlPVwic3VibWl0XCIpXG4gICAgcHJpbWFyeUlzU3VibWl0PzogYm9vbGVhbjtcblxuICAgIC8vIG9uQ2xpY2sgaGFuZGxlciBmb3IgdGhlIHByaW1hcnkgYnV0dG9uLlxuICAgIG9uUHJpbWFyeUJ1dHRvbkNsaWNrPzogKGV2OiBSZWFjdC5Nb3VzZUV2ZW50KSA9PiB2b2lkO1xuXG4gICAgLy8gc2hvdWxkIHRoZXJlIGJlIGEgY2FuY2VsIGJ1dHRvbj8gZGVmYXVsdDogdHJ1ZVxuICAgIGhhc0NhbmNlbD86IGJvb2xlYW47XG5cbiAgICAvLyBUaGUgY2xhc3Mgb2YgdGhlIGNhbmNlbCBidXR0b24sIG9ubHkgdXNlZCBpZiBhIGNhbmNlbCBidXR0b24gaXNcbiAgICAvLyBlbmFibGVkXG4gICAgY2FuY2VsQnV0dG9uQ2xhc3M/OiBzdHJpbmc7XG5cbiAgICAvLyBvbkNsaWNrIGhhbmRsZXIgZm9yIHRoZSBjYW5jZWwgYnV0dG9uLlxuICAgIG9uQ2FuY2VsPzogKC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkO1xuXG4gICAgZm9jdXM/OiBib29sZWFuO1xuXG4gICAgLy8gZGlzYWJsZXMgdGhlIHByaW1hcnkgYW5kIGNhbmNlbCBidXR0b25zXG4gICAgZGlzYWJsZWQ/OiBib29sZWFuO1xuXG4gICAgLy8gZGlzYWJsZXMgb25seSB0aGUgcHJpbWFyeSBidXR0b25cbiAgICBwcmltYXJ5RGlzYWJsZWQ/OiBib29sZWFuO1xuXG4gICAgLy8gc29tZXRoaW5nIHRvIHN0aWNrIG5leHQgdG8gdGhlIGJ1dHRvbnMsIG9wdGlvbmFsbHlcbiAgICBhZGRpdGl2ZT86IFJlYWN0LlJlYWN0Tm9kZTtcblxuICAgIHByaW1hcnlCdXR0b25DbGFzcz86IHN0cmluZztcbn1cblxuLyoqXG4gKiBCYXNpYyBjb250YWluZXIgZm9yIGJ1dHRvbnMgaW4gbW9kYWwgZGlhbG9ncy5cbiAqL1xuQHJlcGxhY2VhYmxlQ29tcG9uZW50KFwidmlld3MuZWxlbWVudHMuRGlhbG9nQnV0dG9uc1wiKVxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGlhbG9nQnV0dG9ucyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxJUHJvcHM+IHtcbiAgICBwdWJsaWMgc3RhdGljIGRlZmF1bHRQcm9wczogUGFydGlhbDxJUHJvcHM+ID0ge1xuICAgICAgICBoYXNDYW5jZWw6IHRydWUsXG4gICAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICB9O1xuXG4gICAgcHJpdmF0ZSBvbkNhbmNlbENsaWNrID0gKGV2ZW50OiBSZWFjdC5Nb3VzZUV2ZW50KTogdm9pZCA9PiB7XG4gICAgICAgIHRoaXMucHJvcHMub25DYW5jZWwoZXZlbnQpO1xuICAgIH07XG5cbiAgICBwdWJsaWMgcmVuZGVyKCk6IEpTWC5FbGVtZW50IHtcbiAgICAgICAgbGV0IHByaW1hcnlCdXR0b25DbGFzc05hbWUgPSBcIm14X0RpYWxvZ19wcmltYXJ5XCI7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLnByaW1hcnlCdXR0b25DbGFzcykge1xuICAgICAgICAgICAgcHJpbWFyeUJ1dHRvbkNsYXNzTmFtZSArPSBcIiBcIiArIHRoaXMucHJvcHMucHJpbWFyeUJ1dHRvbkNsYXNzO1xuICAgICAgICB9XG4gICAgICAgIGxldCBjYW5jZWxCdXR0b247XG5cbiAgICAgICAgaWYgKHRoaXMucHJvcHMuY2FuY2VsQnV0dG9uIHx8IHRoaXMucHJvcHMuaGFzQ2FuY2VsKSB7XG4gICAgICAgICAgICBjYW5jZWxCdXR0b24gPSA8YnV0dG9uXG4gICAgICAgICAgICAgICAgLy8gaW1wb3J0YW50OiB0aGUgZGVmYXVsdCB0eXBlIGlzICdzdWJtaXQnIGFuZCB0aGlzIGJ1dHRvbiBjb21lcyBiZWZvcmUgdGhlXG4gICAgICAgICAgICAgICAgLy8gcHJpbWFyeSBpbiB0aGUgRE9NIHNvIHdpbGwgZ2V0IGZvcm0gc3VibWlzc2lvbnMgdW5sZXNzIHdlIG1ha2UgaXQgbm90IGEgc3VibWl0LlxuICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMub25DYW5jZWxDbGlja31cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e3RoaXMucHJvcHMuY2FuY2VsQnV0dG9uQ2xhc3N9XG4gICAgICAgICAgICAgICAgZGlzYWJsZWQ9e3RoaXMucHJvcHMuZGlzYWJsZWR9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgeyB0aGlzLnByb3BzLmNhbmNlbEJ1dHRvbiB8fCBfdChcIkNhbmNlbFwiKSB9XG4gICAgICAgICAgICA8L2J1dHRvbj47XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgYWRkaXRpdmUgPSBudWxsO1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5hZGRpdGl2ZSkge1xuICAgICAgICAgICAgYWRkaXRpdmUgPSA8ZGl2IGNsYXNzTmFtZT1cIm14X0RpYWxvZ19idXR0b25zX2FkZGl0aXZlXCI+eyB0aGlzLnByb3BzLmFkZGl0aXZlIH08L2Rpdj47XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJteF9EaWFsb2dfYnV0dG9uc1wiPlxuICAgICAgICAgICAgICAgIHsgYWRkaXRpdmUgfVxuICAgICAgICAgICAgICAgIHsgY2FuY2VsQnV0dG9uIH1cbiAgICAgICAgICAgICAgICB7IHRoaXMucHJvcHMuY2hpbGRyZW4gfVxuICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT17dGhpcy5wcm9wcy5wcmltYXJ5SXNTdWJtaXQgPyAnc3VibWl0JyA6ICdidXR0b24nfVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e3ByaW1hcnlCdXR0b25DbGFzc05hbWV9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMucHJvcHMub25QcmltYXJ5QnV0dG9uQ2xpY2t9XG4gICAgICAgICAgICAgICAgICAgIGF1dG9Gb2N1cz17dGhpcy5wcm9wcy5mb2N1c31cbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e3RoaXMucHJvcHMuZGlzYWJsZWQgfHwgdGhpcy5wcm9wcy5wcmltYXJ5RGlzYWJsZWR9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7IHRoaXMucHJvcHMucHJpbWFyeUJ1dHRvbiB9XG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG4iXX0=