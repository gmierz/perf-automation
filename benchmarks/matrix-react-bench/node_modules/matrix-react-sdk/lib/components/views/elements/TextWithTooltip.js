"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _replaceableComponent = require("../../../utils/replaceableComponent");

var _Tooltip = _interopRequireDefault(require("./Tooltip"));

const _excluded = ["class", "children", "tooltip", "tooltipClass", "tooltipProps"];

var _dec, _class;

let TextWithTooltip = (_dec = (0, _replaceableComponent.replaceableComponent)("views.elements.TextWithTooltip"), _dec(_class = class TextWithTooltip extends _react.default.Component {
  constructor(props) {
    super(props);
    (0, _defineProperty2.default)(this, "onMouseOver", () => {
      this.setState({
        hover: true
      });
    });
    (0, _defineProperty2.default)(this, "onMouseLeave", () => {
      this.setState({
        hover: false
      });
    });
    this.state = {
      hover: false
    };
  }

  render() {
    const _this$props = this.props,
          {
      class: className,
      children,
      tooltip,
      tooltipClass,
      tooltipProps
    } = _this$props,
          props = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
    return /*#__PURE__*/_react.default.createElement("span", (0, _extends2.default)({}, props, {
      onMouseOver: this.onMouseOver,
      onMouseLeave: this.onMouseLeave,
      onClick: this.props.onClick,
      className: className
    }), children, this.state.hover && /*#__PURE__*/_react.default.createElement(_Tooltip.default, (0, _extends2.default)({}, tooltipProps, {
      label: tooltip,
      tooltipClassName: tooltipClass,
      className: "mx_TextWithTooltip_tooltip"
    })));
  }

}) || _class);
exports.default = TextWithTooltip;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL2VsZW1lbnRzL1RleHRXaXRoVG9vbHRpcC50c3giXSwibmFtZXMiOlsiVGV4dFdpdGhUb29sdGlwIiwiUmVhY3QiLCJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsInByb3BzIiwic2V0U3RhdGUiLCJob3ZlciIsInN0YXRlIiwicmVuZGVyIiwiY2xhc3MiLCJjbGFzc05hbWUiLCJjaGlsZHJlbiIsInRvb2x0aXAiLCJ0b29sdGlwQ2xhc3MiLCJ0b29sdGlwUHJvcHMiLCJvbk1vdXNlT3ZlciIsIm9uTW91c2VMZWF2ZSIsIm9uQ2xpY2siXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQWdCQTs7QUFDQTs7QUFDQTs7Ozs7O0lBZXFCQSxlLFdBRHBCLGdEQUFxQixnQ0FBckIsQyxnQkFBRCxNQUNxQkEsZUFEckIsU0FDNkNDLGVBQU1DLFNBRG5ELENBQzZFO0FBQ3pFQyxFQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBZ0I7QUFDdkIsVUFBTUEsS0FBTjtBQUR1Qix1REFRTCxNQUFZO0FBQzlCLFdBQUtDLFFBQUwsQ0FBYztBQUFFQyxRQUFBQSxLQUFLLEVBQUU7QUFBVCxPQUFkO0FBQ0gsS0FWMEI7QUFBQSx3REFZSixNQUFZO0FBQy9CLFdBQUtELFFBQUwsQ0FBYztBQUFFQyxRQUFBQSxLQUFLLEVBQUU7QUFBVCxPQUFkO0FBQ0gsS0FkMEI7QUFHdkIsU0FBS0MsS0FBTCxHQUFhO0FBQ1RELE1BQUFBLEtBQUssRUFBRTtBQURFLEtBQWI7QUFHSDs7QUFVTUUsRUFBQUEsTUFBTSxHQUFnQjtBQUN6Qix3QkFBc0YsS0FBS0osS0FBM0Y7QUFBQSxVQUFNO0FBQUVLLE1BQUFBLEtBQUssRUFBRUMsU0FBVDtBQUFvQkMsTUFBQUEsUUFBcEI7QUFBOEJDLE1BQUFBLE9BQTlCO0FBQXVDQyxNQUFBQSxZQUF2QztBQUFxREMsTUFBQUE7QUFBckQsS0FBTjtBQUFBLFVBQTRFVixLQUE1RTtBQUVBLHdCQUNJLGdFQUFVQSxLQUFWO0FBQWlCLE1BQUEsV0FBVyxFQUFFLEtBQUtXLFdBQW5DO0FBQWdELE1BQUEsWUFBWSxFQUFFLEtBQUtDLFlBQW5FO0FBQWlGLE1BQUEsT0FBTyxFQUFFLEtBQUtaLEtBQUwsQ0FBV2EsT0FBckc7QUFBOEcsTUFBQSxTQUFTLEVBQUVQO0FBQXpILFFBQ01DLFFBRE4sRUFFTSxLQUFLSixLQUFMLENBQVdELEtBQVgsaUJBQW9CLDZCQUFDLGdCQUFELDZCQUNkUSxZQURjO0FBRWxCLE1BQUEsS0FBSyxFQUFFRixPQUZXO0FBR2xCLE1BQUEsZ0JBQWdCLEVBQUVDLFlBSEE7QUFJbEIsTUFBQSxTQUFTLEVBQUM7QUFKUSxPQUYxQixDQURKO0FBV0g7O0FBL0J3RSxDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiBDb3B5cmlnaHQgMjAxOSBOZXcgVmVjdG9yIEx0ZC5cblxuIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cbiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgcmVwbGFjZWFibGVDb21wb25lbnQgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvcmVwbGFjZWFibGVDb21wb25lbnRcIjtcbmltcG9ydCBUb29sdGlwIGZyb20gXCIuL1Rvb2x0aXBcIjtcblxuaW50ZXJmYWNlIElQcm9wcyB7XG4gICAgY2xhc3M/OiBzdHJpbmc7XG4gICAgdG9vbHRpcENsYXNzPzogc3RyaW5nO1xuICAgIHRvb2x0aXA6IFJlYWN0LlJlYWN0Tm9kZTtcbiAgICB0b29sdGlwUHJvcHM/OiB7fTtcbiAgICBvbkNsaWNrPzogKGV2PzogUmVhY3QuTW91c2VFdmVudCkgPT4gdm9pZDtcbn1cblxuaW50ZXJmYWNlIElTdGF0ZSB7XG4gICAgaG92ZXI6IGJvb2xlYW47XG59XG5cbkByZXBsYWNlYWJsZUNvbXBvbmVudChcInZpZXdzLmVsZW1lbnRzLlRleHRXaXRoVG9vbHRpcFwiKVxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGV4dFdpdGhUb29sdGlwIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PElQcm9wcywgSVN0YXRlPiB7XG4gICAgY29uc3RydWN0b3IocHJvcHM6IElQcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG5cbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGhvdmVyOiBmYWxzZSxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBwcml2YXRlIG9uTW91c2VPdmVyID0gKCk6IHZvaWQgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgaG92ZXI6IHRydWUgfSk7XG4gICAgfTtcblxuICAgIHByaXZhdGUgb25Nb3VzZUxlYXZlID0gKCk6IHZvaWQgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgaG92ZXI6IGZhbHNlIH0pO1xuICAgIH07XG5cbiAgICBwdWJsaWMgcmVuZGVyKCk6IEpTWC5FbGVtZW50IHtcbiAgICAgICAgY29uc3QgeyBjbGFzczogY2xhc3NOYW1lLCBjaGlsZHJlbiwgdG9vbHRpcCwgdG9vbHRpcENsYXNzLCB0b29sdGlwUHJvcHMsIC4uLnByb3BzIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8c3BhbiB7Li4ucHJvcHN9IG9uTW91c2VPdmVyPXt0aGlzLm9uTW91c2VPdmVyfSBvbk1vdXNlTGVhdmU9e3RoaXMub25Nb3VzZUxlYXZlfSBvbkNsaWNrPXt0aGlzLnByb3BzLm9uQ2xpY2t9IGNsYXNzTmFtZT17Y2xhc3NOYW1lfT5cbiAgICAgICAgICAgICAgICB7IGNoaWxkcmVuIH1cbiAgICAgICAgICAgICAgICB7IHRoaXMuc3RhdGUuaG92ZXIgJiYgPFRvb2x0aXBcbiAgICAgICAgICAgICAgICAgICAgey4uLnRvb2x0aXBQcm9wc31cbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9e3Rvb2x0aXB9XG4gICAgICAgICAgICAgICAgICAgIHRvb2x0aXBDbGFzc05hbWU9e3Rvb2x0aXBDbGFzc31cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibXhfVGV4dFdpdGhUb29sdGlwX3Rvb2x0aXBcIlxuICAgICAgICAgICAgICAgIC8+IH1cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgKTtcbiAgICB9XG59XG4iXX0=