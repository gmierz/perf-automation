"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _replaceableComponent = require("../../../utils/replaceableComponent");

const _excluded = ["children", "className", "disabled", "outlined", "childrenInLabel"];

var _dec, _class, _class2, _temp;

let StyledRadioButton = (_dec = (0, _replaceableComponent.replaceableComponent)("views.elements.StyledRadioButton"), _dec(_class = (_temp = _class2 = class StyledRadioButton extends _react.default.PureComponent {
  render() {
    const _this$props = this.props,
          {
      children,
      className,
      disabled,
      outlined,
      childrenInLabel
    } = _this$props,
          otherProps = (0, _objectWithoutProperties2.default)(_this$props, _excluded);

    const _className = (0, _classnames.default)('mx_StyledRadioButton', className, {
      "mx_StyledRadioButton_disabled": disabled,
      "mx_StyledRadioButton_enabled": !disabled,
      "mx_StyledRadioButton_checked": this.props.checked,
      "mx_StyledRadioButton_outlined": outlined
    });

    const radioButton = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("input", (0, _extends2.default)({
      type: "radio",
      disabled: disabled
    }, otherProps)), /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("div", null)));

    if (childrenInLabel) {
      return /*#__PURE__*/_react.default.createElement("label", {
        className: _className
      }, radioButton, /*#__PURE__*/_react.default.createElement("div", {
        className: "mx_StyledRadioButton_content"
      }, children), /*#__PURE__*/_react.default.createElement("div", {
        className: "mx_StyledRadioButton_spacer"
      }));
    } else {
      return /*#__PURE__*/_react.default.createElement("div", {
        className: _className
      }, /*#__PURE__*/_react.default.createElement("label", {
        className: "mx_StyledRadioButton_innerLabel"
      }, radioButton), /*#__PURE__*/_react.default.createElement("div", {
        className: "mx_StyledRadioButton_content"
      }, children), /*#__PURE__*/_react.default.createElement("div", {
        className: "mx_StyledRadioButton_spacer"
      }));
    }
  }

}, (0, _defineProperty2.default)(_class2, "defaultProps", {
  className: '',
  childrenInLabel: true
}), _temp)) || _class);
exports.default = StyledRadioButton;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL2VsZW1lbnRzL1N0eWxlZFJhZGlvQnV0dG9uLnRzeCJdLCJuYW1lcyI6WyJTdHlsZWRSYWRpb0J1dHRvbiIsIlJlYWN0IiwiUHVyZUNvbXBvbmVudCIsInJlbmRlciIsInByb3BzIiwiY2hpbGRyZW4iLCJjbGFzc05hbWUiLCJkaXNhYmxlZCIsIm91dGxpbmVkIiwiY2hpbGRyZW5JbkxhYmVsIiwib3RoZXJQcm9wcyIsIl9jbGFzc05hbWUiLCJjaGVja2VkIiwicmFkaW9CdXR0b24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQWdCQTs7QUFDQTs7QUFDQTs7Ozs7O0lBY3FCQSxpQixXQURwQixnREFBcUIsa0NBQXJCLEMsbUNBQUQsTUFDcUJBLGlCQURyQixTQUMrQ0MsZUFBTUMsYUFEckQsQ0FDbUY7QUFNeEVDLEVBQUFBLE1BQU0sR0FBRztBQUNaLHdCQUFvRixLQUFLQyxLQUF6RjtBQUFBLFVBQU07QUFBRUMsTUFBQUEsUUFBRjtBQUFZQyxNQUFBQSxTQUFaO0FBQXVCQyxNQUFBQSxRQUF2QjtBQUFpQ0MsTUFBQUEsUUFBakM7QUFBMkNDLE1BQUFBO0FBQTNDLEtBQU47QUFBQSxVQUFxRUMsVUFBckU7O0FBQ0EsVUFBTUMsVUFBVSxHQUFHLHlCQUNmLHNCQURlLEVBRWZMLFNBRmUsRUFHZjtBQUNJLHVDQUFpQ0MsUUFEckM7QUFFSSxzQ0FBZ0MsQ0FBQ0EsUUFGckM7QUFHSSxzQ0FBZ0MsS0FBS0gsS0FBTCxDQUFXUSxPQUgvQztBQUlJLHVDQUFpQ0o7QUFKckMsS0FIZSxDQUFuQjs7QUFVQSxVQUFNSyxXQUFXLGdCQUFHLDZCQUFDLGNBQUQsQ0FBTyxRQUFQLHFCQUNoQjtBQUFPLE1BQUEsSUFBSSxFQUFDLE9BQVo7QUFBb0IsTUFBQSxRQUFRLEVBQUVOO0FBQTlCLE9BQTRDRyxVQUE1QyxFQURnQixlQUdoQix1REFBSyx5Q0FBTCxDQUhnQixDQUFwQjs7QUFNQSxRQUFJRCxlQUFKLEVBQXFCO0FBQ2pCLDBCQUFPO0FBQU8sUUFBQSxTQUFTLEVBQUVFO0FBQWxCLFNBQ0RFLFdBREMsZUFFSDtBQUFLLFFBQUEsU0FBUyxFQUFDO0FBQWYsU0FBZ0RSLFFBQWhELENBRkcsZUFHSDtBQUFLLFFBQUEsU0FBUyxFQUFDO0FBQWYsUUFIRyxDQUFQO0FBS0gsS0FORCxNQU1PO0FBQ0gsMEJBQU87QUFBSyxRQUFBLFNBQVMsRUFBRU07QUFBaEIsc0JBQ0g7QUFBTyxRQUFBLFNBQVMsRUFBQztBQUFqQixTQUNNRSxXQUROLENBREcsZUFJSDtBQUFLLFFBQUEsU0FBUyxFQUFDO0FBQWYsU0FBZ0RSLFFBQWhELENBSkcsZUFLSDtBQUFLLFFBQUEsU0FBUyxFQUFDO0FBQWYsUUFMRyxDQUFQO0FBT0g7QUFDSjs7QUF2QzhFLEMseURBQ3pDO0FBQ2xDQyxFQUFBQSxTQUFTLEVBQUUsRUFEdUI7QUFFbENHLEVBQUFBLGVBQWUsRUFBRTtBQUZpQixDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbkNvcHlyaWdodCAyMDIwIFRoZSBNYXRyaXgub3JnIEZvdW5kYXRpb24gQy5JLkMuXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbGFzc25hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHsgcmVwbGFjZWFibGVDb21wb25lbnQgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHMvcmVwbGFjZWFibGVDb21wb25lbnRcIjtcblxuaW50ZXJmYWNlIElQcm9wcyBleHRlbmRzIFJlYWN0LklucHV0SFRNTEF0dHJpYnV0ZXM8SFRNTElucHV0RWxlbWVudD4ge1xuICAgIG91dGxpbmVkPzogYm9vbGVhbjtcbiAgICAvLyBJZiB0cnVlIChkZWZhdWx0KSwgdGhlIGNoaWxkcmVuIHdpbGwgYmUgY29udGFpbmVkIHdpdGhpbiBhIDxsYWJlbD4gZWxlbWVudFxuICAgIC8vIElmIGZhbHNlLCB0aGV5J2xsIGJlIGluIGEgZGl2LiBQdXR0aW5nIGludGVyYWN0aXZlIGNvbXBvbmVudHMgdGhhdCBoYXZlIGxhYmVsc1xuICAgIC8vIHRoZW1zZWx2ZXMgaW4gbGFiZWxzIGNhbiBjYXVzZSBzdHJhbmdlIGJ1Z3MgbGlrZSBodHRwczovL2dpdGh1Yi5jb20vdmVjdG9yLWltL2VsZW1lbnQtd2ViL2lzc3Vlcy8xODAzMVxuICAgIGNoaWxkcmVuSW5MYWJlbD86IGJvb2xlYW47XG59XG5cbmludGVyZmFjZSBJU3RhdGUge1xufVxuXG5AcmVwbGFjZWFibGVDb21wb25lbnQoXCJ2aWV3cy5lbGVtZW50cy5TdHlsZWRSYWRpb0J1dHRvblwiKVxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3R5bGVkUmFkaW9CdXR0b24gZXh0ZW5kcyBSZWFjdC5QdXJlQ29tcG9uZW50PElQcm9wcywgSVN0YXRlPiB7XG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBkZWZhdWx0UHJvcHMgPSB7XG4gICAgICAgIGNsYXNzTmFtZTogJycsXG4gICAgICAgIGNoaWxkcmVuSW5MYWJlbDogdHJ1ZSxcbiAgICB9O1xuXG4gICAgcHVibGljIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBjaGlsZHJlbiwgY2xhc3NOYW1lLCBkaXNhYmxlZCwgb3V0bGluZWQsIGNoaWxkcmVuSW5MYWJlbCwgLi4ub3RoZXJQcm9wcyB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgX2NsYXNzTmFtZSA9IGNsYXNzbmFtZXMoXG4gICAgICAgICAgICAnbXhfU3R5bGVkUmFkaW9CdXR0b24nLFxuICAgICAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIFwibXhfU3R5bGVkUmFkaW9CdXR0b25fZGlzYWJsZWRcIjogZGlzYWJsZWQsXG4gICAgICAgICAgICAgICAgXCJteF9TdHlsZWRSYWRpb0J1dHRvbl9lbmFibGVkXCI6ICFkaXNhYmxlZCxcbiAgICAgICAgICAgICAgICBcIm14X1N0eWxlZFJhZGlvQnV0dG9uX2NoZWNrZWRcIjogdGhpcy5wcm9wcy5jaGVja2VkLFxuICAgICAgICAgICAgICAgIFwibXhfU3R5bGVkUmFkaW9CdXR0b25fb3V0bGluZWRcIjogb3V0bGluZWQsXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICBjb25zdCByYWRpb0J1dHRvbiA9IDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSdyYWRpbycgZGlzYWJsZWQ9e2Rpc2FibGVkfSB7Li4ub3RoZXJQcm9wc30gLz5cbiAgICAgICAgICAgIHsgLyogVXNlZCB0byByZW5kZXIgdGhlIHJhZGlvIGJ1dHRvbiBjaXJjbGUgKi8gfVxuICAgICAgICAgICAgPGRpdj48ZGl2IC8+PC9kaXY+XG4gICAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+O1xuXG4gICAgICAgIGlmIChjaGlsZHJlbkluTGFiZWwpIHtcbiAgICAgICAgICAgIHJldHVybiA8bGFiZWwgY2xhc3NOYW1lPXtfY2xhc3NOYW1lfT5cbiAgICAgICAgICAgICAgICB7IHJhZGlvQnV0dG9uIH1cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm14X1N0eWxlZFJhZGlvQnV0dG9uX2NvbnRlbnRcIj57IGNoaWxkcmVuIH08L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm14X1N0eWxlZFJhZGlvQnV0dG9uX3NwYWNlclwiIC8+XG4gICAgICAgICAgICA8L2xhYmVsPjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT17X2NsYXNzTmFtZX0+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cIm14X1N0eWxlZFJhZGlvQnV0dG9uX2lubmVyTGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgeyByYWRpb0J1dHRvbiB9XG4gICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm14X1N0eWxlZFJhZGlvQnV0dG9uX2NvbnRlbnRcIj57IGNoaWxkcmVuIH08L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm14X1N0eWxlZFJhZGlvQnV0dG9uX3NwYWNlclwiIC8+XG4gICAgICAgICAgICA8L2Rpdj47XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=