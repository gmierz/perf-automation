"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _AccessibleButton = _interopRequireDefault(require("./AccessibleButton"));

var _Tooltip = _interopRequireDefault(require("./Tooltip"));

var _replaceableComponent = require("../../../utils/replaceableComponent");

const _excluded = ["title", "tooltip", "children", "tooltipClassName", "forceHide", "yOffset", "alignment"];

var _dec, _class;

let AccessibleTooltipButton = (_dec = (0, _replaceableComponent.replaceableComponent)("views.elements.AccessibleTooltipButton"), _dec(_class = class AccessibleTooltipButton extends _react.default.PureComponent {
  constructor(props) {
    super(props);
    (0, _defineProperty2.default)(this, "onMouseOver", () => {
      if (this.props.forceHide) return;
      this.setState({
        hover: true
      });
    });
    (0, _defineProperty2.default)(this, "onMouseLeave", () => {
      this.setState({
        hover: false
      });
    });
    this.state = {
      hover: false
    };
  }

  componentDidUpdate(prevProps) {
    if (!prevProps.forceHide && this.props.forceHide && this.state.hover) {
      this.setState({
        hover: false
      });
    }
  }

  render() {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    const _this$props = this.props,
          {
      title,
      tooltip,
      children,
      tooltipClassName,
      forceHide,
      yOffset,
      alignment
    } = _this$props,
          props = (0, _objectWithoutProperties2.default)(_this$props, _excluded);

    const tip = this.state.hover && /*#__PURE__*/_react.default.createElement(_Tooltip.default, {
      tooltipClassName: tooltipClassName,
      label: tooltip || title,
      yOffset: yOffset,
      alignment: alignment
    });

    return /*#__PURE__*/_react.default.createElement(_AccessibleButton.default, (0, _extends2.default)({}, props, {
      onMouseOver: this.onMouseOver,
      onMouseLeave: this.onMouseLeave,
      "aria-label": title
    }), children, this.props.label, (tooltip || title) && tip);
  }

}) || _class);
exports.default = AccessibleTooltipButton;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL2VsZW1lbnRzL0FjY2Vzc2libGVUb29sdGlwQnV0dG9uLnRzeCJdLCJuYW1lcyI6WyJBY2Nlc3NpYmxlVG9vbHRpcEJ1dHRvbiIsIlJlYWN0IiwiUHVyZUNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJmb3JjZUhpZGUiLCJzZXRTdGF0ZSIsImhvdmVyIiwic3RhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJwcmV2UHJvcHMiLCJyZW5kZXIiLCJ0aXRsZSIsInRvb2x0aXAiLCJjaGlsZHJlbiIsInRvb2x0aXBDbGFzc05hbWUiLCJ5T2Zmc2V0IiwiYWxpZ25tZW50IiwidGlwIiwib25Nb3VzZU92ZXIiLCJvbk1vdXNlTGVhdmUiLCJsYWJlbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBOztBQUVBOztBQUNBOztBQUNBOzs7Ozs7SUFpQnFCQSx1QixXQURwQixnREFBcUIsd0NBQXJCLEMsZ0JBQUQsTUFDcUJBLHVCQURyQixTQUNxREMsZUFBTUMsYUFEM0QsQ0FDZ0c7QUFDNUZDLEVBQUFBLFdBQVcsQ0FBQ0MsS0FBRCxFQUF1QjtBQUM5QixVQUFNQSxLQUFOO0FBRDhCLHVEQWVwQixNQUFNO0FBQ2hCLFVBQUksS0FBS0EsS0FBTCxDQUFXQyxTQUFmLEVBQTBCO0FBQzFCLFdBQUtDLFFBQUwsQ0FBYztBQUNWQyxRQUFBQSxLQUFLLEVBQUU7QUFERyxPQUFkO0FBR0gsS0FwQmlDO0FBQUEsd0RBc0JuQixNQUFNO0FBQ2pCLFdBQUtELFFBQUwsQ0FBYztBQUNWQyxRQUFBQSxLQUFLLEVBQUU7QUFERyxPQUFkO0FBR0gsS0ExQmlDO0FBRTlCLFNBQUtDLEtBQUwsR0FBYTtBQUNURCxNQUFBQSxLQUFLLEVBQUU7QUFERSxLQUFiO0FBR0g7O0FBRURFLEVBQUFBLGtCQUFrQixDQUFDQyxTQUFELEVBQXFDO0FBQ25ELFFBQUksQ0FBQ0EsU0FBUyxDQUFDTCxTQUFYLElBQXdCLEtBQUtELEtBQUwsQ0FBV0MsU0FBbkMsSUFBZ0QsS0FBS0csS0FBTCxDQUFXRCxLQUEvRCxFQUFzRTtBQUNsRSxXQUFLRCxRQUFMLENBQWM7QUFDVkMsUUFBQUEsS0FBSyxFQUFFO0FBREcsT0FBZDtBQUdIO0FBQ0o7O0FBZURJLEVBQUFBLE1BQU0sR0FBRztBQUNMO0FBQ0Esd0JBQWdHLEtBQUtQLEtBQXJHO0FBQUEsVUFBTTtBQUFFUSxNQUFBQSxLQUFGO0FBQVNDLE1BQUFBLE9BQVQ7QUFBa0JDLE1BQUFBLFFBQWxCO0FBQTRCQyxNQUFBQSxnQkFBNUI7QUFBOENWLE1BQUFBLFNBQTlDO0FBQXlEVyxNQUFBQSxPQUF6RDtBQUFrRUMsTUFBQUE7QUFBbEUsS0FBTjtBQUFBLFVBQXNGYixLQUF0Rjs7QUFFQSxVQUFNYyxHQUFHLEdBQUcsS0FBS1YsS0FBTCxDQUFXRCxLQUFYLGlCQUFvQiw2QkFBQyxnQkFBRDtBQUM1QixNQUFBLGdCQUFnQixFQUFFUSxnQkFEVTtBQUU1QixNQUFBLEtBQUssRUFBRUYsT0FBTyxJQUFJRCxLQUZVO0FBRzVCLE1BQUEsT0FBTyxFQUFFSSxPQUhtQjtBQUk1QixNQUFBLFNBQVMsRUFBRUM7QUFKaUIsTUFBaEM7O0FBTUEsd0JBQ0ksNkJBQUMseUJBQUQsNkJBQ1FiLEtBRFI7QUFFSSxNQUFBLFdBQVcsRUFBRSxLQUFLZSxXQUZ0QjtBQUdJLE1BQUEsWUFBWSxFQUFFLEtBQUtDLFlBSHZCO0FBSUksb0JBQVlSO0FBSmhCLFFBTU1FLFFBTk4sRUFPTSxLQUFLVixLQUFMLENBQVdpQixLQVBqQixFQVFNLENBQUNSLE9BQU8sSUFBSUQsS0FBWixLQUFzQk0sR0FSNUIsQ0FESjtBQVlIOztBQW5EMkYsQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5Db3B5cmlnaHQgMjAxOSBNaWNoYWVsIFRlbGF0eW5za2kgPDd0M2NoZ3V5QGdtYWlsLmNvbT5cbkNvcHlyaWdodCAyMDE5IFRoZSBNYXRyaXgub3JnIEZvdW5kYXRpb24gQy5JLkMuXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IEFjY2Vzc2libGVCdXR0b24gZnJvbSBcIi4vQWNjZXNzaWJsZUJ1dHRvblwiO1xuaW1wb3J0IFRvb2x0aXAsIHsgQWxpZ25tZW50IH0gZnJvbSAnLi9Ub29sdGlwJztcbmltcG9ydCB7IHJlcGxhY2VhYmxlQ29tcG9uZW50IH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL3JlcGxhY2VhYmxlQ29tcG9uZW50XCI7XG5cbmludGVyZmFjZSBJVG9vbHRpcFByb3BzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50UHJvcHM8dHlwZW9mIEFjY2Vzc2libGVCdXR0b24+IHtcbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIHRvb2x0aXA/OiBSZWFjdC5SZWFjdE5vZGU7XG4gICAgbGFiZWw/OiBSZWFjdC5SZWFjdE5vZGU7XG4gICAgdG9vbHRpcENsYXNzTmFtZT86IHN0cmluZztcbiAgICBmb3JjZUhpZGU/OiBib29sZWFuO1xuICAgIHlPZmZzZXQ/OiBudW1iZXI7XG4gICAgYWxpZ25tZW50PzogQWxpZ25tZW50O1xufVxuXG5pbnRlcmZhY2UgSVN0YXRlIHtcbiAgICBob3ZlcjogYm9vbGVhbjtcbn1cblxuQHJlcGxhY2VhYmxlQ29tcG9uZW50KFwidmlld3MuZWxlbWVudHMuQWNjZXNzaWJsZVRvb2x0aXBCdXR0b25cIilcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFjY2Vzc2libGVUb29sdGlwQnV0dG9uIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudDxJVG9vbHRpcFByb3BzLCBJU3RhdGU+IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wczogSVRvb2x0aXBQcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBob3ZlcjogZmFsc2UsXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wczogUmVhZG9ubHk8SVRvb2x0aXBQcm9wcz4pIHtcbiAgICAgICAgaWYgKCFwcmV2UHJvcHMuZm9yY2VIaWRlICYmIHRoaXMucHJvcHMuZm9yY2VIaWRlICYmIHRoaXMuc3RhdGUuaG92ZXIpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIGhvdmVyOiBmYWxzZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgb25Nb3VzZU92ZXIgPSAoKSA9PiB7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLmZvcmNlSGlkZSkgcmV0dXJuO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGhvdmVyOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgb25Nb3VzZUxlYXZlID0gKCkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGhvdmVyOiBmYWxzZSxcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuICAgICAgICBjb25zdCB7IHRpdGxlLCB0b29sdGlwLCBjaGlsZHJlbiwgdG9vbHRpcENsYXNzTmFtZSwgZm9yY2VIaWRlLCB5T2Zmc2V0LCBhbGlnbm1lbnQsIC4uLnByb3BzIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICAgIGNvbnN0IHRpcCA9IHRoaXMuc3RhdGUuaG92ZXIgJiYgPFRvb2x0aXBcbiAgICAgICAgICAgIHRvb2x0aXBDbGFzc05hbWU9e3Rvb2x0aXBDbGFzc05hbWV9XG4gICAgICAgICAgICBsYWJlbD17dG9vbHRpcCB8fCB0aXRsZX1cbiAgICAgICAgICAgIHlPZmZzZXQ9e3lPZmZzZXR9XG4gICAgICAgICAgICBhbGlnbm1lbnQ9e2FsaWdubWVudH1cbiAgICAgICAgLz47XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8QWNjZXNzaWJsZUJ1dHRvblxuICAgICAgICAgICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgICAgICAgICBvbk1vdXNlT3Zlcj17dGhpcy5vbk1vdXNlT3Zlcn1cbiAgICAgICAgICAgICAgICBvbk1vdXNlTGVhdmU9e3RoaXMub25Nb3VzZUxlYXZlfVxuICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9e3RpdGxlfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHsgY2hpbGRyZW4gfVxuICAgICAgICAgICAgICAgIHsgdGhpcy5wcm9wcy5sYWJlbCB9XG4gICAgICAgICAgICAgICAgeyAodG9vbHRpcCB8fCB0aXRsZSkgJiYgdGlwIH1cbiAgICAgICAgICAgIDwvQWNjZXNzaWJsZUJ1dHRvbj5cbiAgICAgICAgKTtcbiAgICB9XG59XG4iXX0=