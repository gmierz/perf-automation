"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var sdk = _interopRequireWildcard(require("../../../index"));

var _dispatcher = _interopRequireDefault(require("../../../dispatcher/dispatcher"));

var _groups = require("../../../groups");

var _MatrixClientContext = _interopRequireDefault(require("../../../contexts/MatrixClientContext"));

var _replaceableComponent = require("../../../utils/replaceableComponent");

var _Media = require("../../../customisations/Media");

var _dec, _class, _class2, _temp;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

let GroupRoomTile = (_dec = (0, _replaceableComponent.replaceableComponent)("views.groups.GroupRoomTile"), _dec(_class = (_temp = _class2 = class GroupRoomTile extends _react.default.Component {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "onClick", e => {
      _dispatcher.default.dispatch({
        action: 'view_group_room',
        groupId: this.props.groupId,
        groupRoomId: this.props.groupRoom.roomId
      });
    });
  }

  render() {
    const BaseAvatar = sdk.getComponent('avatars.BaseAvatar');
    const AccessibleButton = sdk.getComponent('elements.AccessibleButton');
    const avatarUrl = this.props.groupRoom.avatarUrl ? (0, _Media.mediaFromMxc)(this.props.groupRoom.avatarUrl).getSquareThumbnailHttp(36) : null;

    const av = /*#__PURE__*/_react.default.createElement(BaseAvatar, {
      name: this.props.groupRoom.displayname,
      width: 36,
      height: 36,
      url: avatarUrl
    });

    return /*#__PURE__*/_react.default.createElement(AccessibleButton, {
      className: "mx_GroupRoomTile",
      onClick: this.onClick
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_GroupRoomTile_avatar"
    }, av), /*#__PURE__*/_react.default.createElement("div", {
      className: "mx_GroupRoomTile_name"
    }, this.props.groupRoom.displayname));
  }

}, (0, _defineProperty2.default)(_class2, "propTypes", {
  groupId: _propTypes.default.string.isRequired,
  groupRoom: _groups.GroupRoomType.isRequired
}), (0, _defineProperty2.default)(_class2, "contextType", _MatrixClientContext.default), _temp)) || _class);
var _default = GroupRoomTile;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3ZpZXdzL2dyb3Vwcy9Hcm91cFJvb21UaWxlLmpzIl0sIm5hbWVzIjpbIkdyb3VwUm9vbVRpbGUiLCJSZWFjdCIsIkNvbXBvbmVudCIsImUiLCJkaXMiLCJkaXNwYXRjaCIsImFjdGlvbiIsImdyb3VwSWQiLCJwcm9wcyIsImdyb3VwUm9vbUlkIiwiZ3JvdXBSb29tIiwicm9vbUlkIiwicmVuZGVyIiwiQmFzZUF2YXRhciIsInNkayIsImdldENvbXBvbmVudCIsIkFjY2Vzc2libGVCdXR0b24iLCJhdmF0YXJVcmwiLCJnZXRTcXVhcmVUaHVtYm5haWxIdHRwIiwiYXYiLCJkaXNwbGF5bmFtZSIsIm9uQ2xpY2siLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJpc1JlcXVpcmVkIiwiR3JvdXBSb29tVHlwZSIsIk1hdHJpeENsaWVudENvbnRleHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBZ0JBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztJQUdNQSxhLFdBREwsZ0RBQXFCLDRCQUFyQixDLG1DQUFELE1BQ01BLGFBRE4sU0FDNEJDLGVBQU1DLFNBRGxDLENBQzRDO0FBQUE7QUFBQTtBQUFBLG1EQVE5QkMsQ0FBQyxJQUFJO0FBQ1hDLDBCQUFJQyxRQUFKLENBQWE7QUFDVEMsUUFBQUEsTUFBTSxFQUFFLGlCQURDO0FBRVRDLFFBQUFBLE9BQU8sRUFBRSxLQUFLQyxLQUFMLENBQVdELE9BRlg7QUFHVEUsUUFBQUEsV0FBVyxFQUFFLEtBQUtELEtBQUwsQ0FBV0UsU0FBWCxDQUFxQkM7QUFIekIsT0FBYjtBQUtILEtBZHVDO0FBQUE7O0FBZ0J4Q0MsRUFBQUEsTUFBTSxHQUFHO0FBQ0wsVUFBTUMsVUFBVSxHQUFHQyxHQUFHLENBQUNDLFlBQUosQ0FBaUIsb0JBQWpCLENBQW5CO0FBQ0EsVUFBTUMsZ0JBQWdCLEdBQUdGLEdBQUcsQ0FBQ0MsWUFBSixDQUFpQiwyQkFBakIsQ0FBekI7QUFDQSxVQUFNRSxTQUFTLEdBQUcsS0FBS1QsS0FBTCxDQUFXRSxTQUFYLENBQXFCTyxTQUFyQixHQUNaLHlCQUFhLEtBQUtULEtBQUwsQ0FBV0UsU0FBWCxDQUFxQk8sU0FBbEMsRUFBNkNDLHNCQUE3QyxDQUFvRSxFQUFwRSxDQURZLEdBRVosSUFGTjs7QUFJQSxVQUFNQyxFQUFFLGdCQUNKLDZCQUFDLFVBQUQ7QUFDSSxNQUFBLElBQUksRUFBRSxLQUFLWCxLQUFMLENBQVdFLFNBQVgsQ0FBcUJVLFdBRC9CO0FBRUksTUFBQSxLQUFLLEVBQUUsRUFGWDtBQUdJLE1BQUEsTUFBTSxFQUFFLEVBSFo7QUFJSSxNQUFBLEdBQUcsRUFBRUg7QUFKVCxNQURKOztBQVNBLHdCQUNJLDZCQUFDLGdCQUFEO0FBQWtCLE1BQUEsU0FBUyxFQUFDLGtCQUE1QjtBQUErQyxNQUFBLE9BQU8sRUFBRSxLQUFLSTtBQUE3RCxvQkFDSTtBQUFLLE1BQUEsU0FBUyxFQUFDO0FBQWYsT0FDTUYsRUFETixDQURKLGVBSUk7QUFBSyxNQUFBLFNBQVMsRUFBQztBQUFmLE9BQ00sS0FBS1gsS0FBTCxDQUFXRSxTQUFYLENBQXFCVSxXQUQzQixDQUpKLENBREo7QUFVSDs7QUExQ3VDLEMsc0RBQ3JCO0FBQ2ZiLEVBQUFBLE9BQU8sRUFBRWUsbUJBQVVDLE1BQVYsQ0FBaUJDLFVBRFg7QUFFZmQsRUFBQUEsU0FBUyxFQUFFZSxzQkFBY0Q7QUFGVixDLHlEQUtFRSw0QjtlQXVDVjFCLGEiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQ29weXJpZ2h0IDIwMTcgTmV3IFZlY3RvciBMdGRcblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCAqIGFzIHNkayBmcm9tICcuLi8uLi8uLi9pbmRleCc7XG5pbXBvcnQgZGlzIGZyb20gJy4uLy4uLy4uL2Rpc3BhdGNoZXIvZGlzcGF0Y2hlcic7XG5pbXBvcnQgeyBHcm91cFJvb21UeXBlIH0gZnJvbSAnLi4vLi4vLi4vZ3JvdXBzJztcbmltcG9ydCBNYXRyaXhDbGllbnRDb250ZXh0IGZyb20gXCIuLi8uLi8uLi9jb250ZXh0cy9NYXRyaXhDbGllbnRDb250ZXh0XCI7XG5pbXBvcnQgeyByZXBsYWNlYWJsZUNvbXBvbmVudCB9IGZyb20gXCIuLi8uLi8uLi91dGlscy9yZXBsYWNlYWJsZUNvbXBvbmVudFwiO1xuaW1wb3J0IHsgbWVkaWFGcm9tTXhjIH0gZnJvbSBcIi4uLy4uLy4uL2N1c3RvbWlzYXRpb25zL01lZGlhXCI7XG5cbkByZXBsYWNlYWJsZUNvbXBvbmVudChcInZpZXdzLmdyb3Vwcy5Hcm91cFJvb21UaWxlXCIpXG5jbGFzcyBHcm91cFJvb21UaWxlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgICAgICBncm91cElkOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgICAgIGdyb3VwUm9vbTogR3JvdXBSb29tVHlwZS5pc1JlcXVpcmVkLFxuICAgIH07XG5cbiAgICBzdGF0aWMgY29udGV4dFR5cGUgPSBNYXRyaXhDbGllbnRDb250ZXh0XG5cbiAgICBvbkNsaWNrID0gZSA9PiB7XG4gICAgICAgIGRpcy5kaXNwYXRjaCh7XG4gICAgICAgICAgICBhY3Rpb246ICd2aWV3X2dyb3VwX3Jvb20nLFxuICAgICAgICAgICAgZ3JvdXBJZDogdGhpcy5wcm9wcy5ncm91cElkLFxuICAgICAgICAgICAgZ3JvdXBSb29tSWQ6IHRoaXMucHJvcHMuZ3JvdXBSb29tLnJvb21JZCxcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgQmFzZUF2YXRhciA9IHNkay5nZXRDb21wb25lbnQoJ2F2YXRhcnMuQmFzZUF2YXRhcicpO1xuICAgICAgICBjb25zdCBBY2Nlc3NpYmxlQnV0dG9uID0gc2RrLmdldENvbXBvbmVudCgnZWxlbWVudHMuQWNjZXNzaWJsZUJ1dHRvbicpO1xuICAgICAgICBjb25zdCBhdmF0YXJVcmwgPSB0aGlzLnByb3BzLmdyb3VwUm9vbS5hdmF0YXJVcmxcbiAgICAgICAgICAgID8gbWVkaWFGcm9tTXhjKHRoaXMucHJvcHMuZ3JvdXBSb29tLmF2YXRhclVybCkuZ2V0U3F1YXJlVGh1bWJuYWlsSHR0cCgzNilcbiAgICAgICAgICAgIDogbnVsbDtcblxuICAgICAgICBjb25zdCBhdiA9IChcbiAgICAgICAgICAgIDxCYXNlQXZhdGFyXG4gICAgICAgICAgICAgICAgbmFtZT17dGhpcy5wcm9wcy5ncm91cFJvb20uZGlzcGxheW5hbWV9XG4gICAgICAgICAgICAgICAgd2lkdGg9ezM2fVxuICAgICAgICAgICAgICAgIGhlaWdodD17MzZ9XG4gICAgICAgICAgICAgICAgdXJsPXthdmF0YXJVcmx9XG4gICAgICAgICAgICAvPlxuICAgICAgICApO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8QWNjZXNzaWJsZUJ1dHRvbiBjbGFzc05hbWU9XCJteF9Hcm91cFJvb21UaWxlXCIgb25DbGljaz17dGhpcy5vbkNsaWNrfT5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm14X0dyb3VwUm9vbVRpbGVfYXZhdGFyXCI+XG4gICAgICAgICAgICAgICAgICAgIHsgYXYgfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXhfR3JvdXBSb29tVGlsZV9uYW1lXCI+XG4gICAgICAgICAgICAgICAgICAgIHsgdGhpcy5wcm9wcy5ncm91cFJvb20uZGlzcGxheW5hbWUgfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9BY2Nlc3NpYmxlQnV0dG9uPlxuICAgICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgR3JvdXBSb29tVGlsZTtcbiJdfQ==