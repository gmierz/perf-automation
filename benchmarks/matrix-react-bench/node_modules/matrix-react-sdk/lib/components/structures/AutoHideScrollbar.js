"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

const _excluded = ["className", "onScroll", "onWheel", "style", "tabIndex", "wrappedRef", "children"];

class AutoHideScrollbar extends _react.default.Component {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "containerRef", /*#__PURE__*/_react.default.createRef());
  }

  componentDidMount() {
    if (this.containerRef.current && this.props.onScroll) {
      // Using the passive option to not block the main thread
      // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#improving_scrolling_performance_with_passive_listeners
      this.containerRef.current.addEventListener("scroll", this.props.onScroll, {
        passive: true
      });
    }

    if (this.props.wrappedRef) {
      this.props.wrappedRef(this.containerRef.current);
    }
  }

  componentWillUnmount() {
    if (this.containerRef.current && this.props.onScroll) {
      this.containerRef.current.removeEventListener("scroll", this.props.onScroll);
    }
  }

  getScrollTop() {
    return this.containerRef.current.scrollTop;
  }

  render() {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    const _this$props = this.props,
          {
      className,
      onScroll,
      onWheel,
      style,
      tabIndex,
      wrappedRef,
      children
    } = _this$props,
          otherProps = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
    return /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({}, otherProps, {
      ref: this.containerRef,
      style: style,
      className: ["mx_AutoHideScrollbar", className].join(" "),
      onWheel: onWheel // Firefox sometimes makes this element focusable due to
      // overflow:scroll;, so force it out of tab order by default.
      ,
      tabIndex: tabIndex ?? -1
    }), children);
  }

}

exports.default = AutoHideScrollbar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3N0cnVjdHVyZXMvQXV0b0hpZGVTY3JvbGxiYXIudHN4Il0sIm5hbWVzIjpbIkF1dG9IaWRlU2Nyb2xsYmFyIiwiUmVhY3QiLCJDb21wb25lbnQiLCJjcmVhdGVSZWYiLCJjb21wb25lbnREaWRNb3VudCIsImNvbnRhaW5lclJlZiIsImN1cnJlbnQiLCJwcm9wcyIsIm9uU2Nyb2xsIiwiYWRkRXZlbnRMaXN0ZW5lciIsInBhc3NpdmUiLCJ3cmFwcGVkUmVmIiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZ2V0U2Nyb2xsVG9wIiwic2Nyb2xsVG9wIiwicmVuZGVyIiwiY2xhc3NOYW1lIiwib25XaGVlbCIsInN0eWxlIiwidGFiSW5kZXgiLCJjaGlsZHJlbiIsIm90aGVyUHJvcHMiLCJqb2luIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFpQkE7Ozs7QUFXZSxNQUFNQSxpQkFBTixTQUFnQ0MsZUFBTUMsU0FBdEMsQ0FBd0Q7QUFBQTtBQUFBO0FBQUEscUVBQ1hELGVBQU1FLFNBQU4sRUFEVztBQUFBOztBQUc1REMsRUFBQUEsaUJBQWlCLEdBQUc7QUFDdkIsUUFBSSxLQUFLQyxZQUFMLENBQWtCQyxPQUFsQixJQUE2QixLQUFLQyxLQUFMLENBQVdDLFFBQTVDLEVBQXNEO0FBQ2xEO0FBQ0E7QUFDQSxXQUFLSCxZQUFMLENBQWtCQyxPQUFsQixDQUEwQkcsZ0JBQTFCLENBQTJDLFFBQTNDLEVBQXFELEtBQUtGLEtBQUwsQ0FBV0MsUUFBaEUsRUFBMEU7QUFBRUUsUUFBQUEsT0FBTyxFQUFFO0FBQVgsT0FBMUU7QUFDSDs7QUFFRCxRQUFJLEtBQUtILEtBQUwsQ0FBV0ksVUFBZixFQUEyQjtBQUN2QixXQUFLSixLQUFMLENBQVdJLFVBQVgsQ0FBc0IsS0FBS04sWUFBTCxDQUFrQkMsT0FBeEM7QUFDSDtBQUNKOztBQUVNTSxFQUFBQSxvQkFBb0IsR0FBRztBQUMxQixRQUFJLEtBQUtQLFlBQUwsQ0FBa0JDLE9BQWxCLElBQTZCLEtBQUtDLEtBQUwsQ0FBV0MsUUFBNUMsRUFBc0Q7QUFDbEQsV0FBS0gsWUFBTCxDQUFrQkMsT0FBbEIsQ0FBMEJPLG1CQUExQixDQUE4QyxRQUE5QyxFQUF3RCxLQUFLTixLQUFMLENBQVdDLFFBQW5FO0FBQ0g7QUFDSjs7QUFFTU0sRUFBQUEsWUFBWSxHQUFXO0FBQzFCLFdBQU8sS0FBS1QsWUFBTCxDQUFrQkMsT0FBbEIsQ0FBMEJTLFNBQWpDO0FBQ0g7O0FBRU1DLEVBQUFBLE1BQU0sR0FBRztBQUNaO0FBQ0Esd0JBQStGLEtBQUtULEtBQXBHO0FBQUEsVUFBTTtBQUFFVSxNQUFBQSxTQUFGO0FBQWFULE1BQUFBLFFBQWI7QUFBdUJVLE1BQUFBLE9BQXZCO0FBQWdDQyxNQUFBQSxLQUFoQztBQUF1Q0MsTUFBQUEsUUFBdkM7QUFBaURULE1BQUFBLFVBQWpEO0FBQTZEVSxNQUFBQTtBQUE3RCxLQUFOO0FBQUEsVUFBZ0ZDLFVBQWhGO0FBRUEsd0JBQVEsK0RBQ0FBLFVBREE7QUFFSixNQUFBLEdBQUcsRUFBRSxLQUFLakIsWUFGTjtBQUdKLE1BQUEsS0FBSyxFQUFFYyxLQUhIO0FBSUosTUFBQSxTQUFTLEVBQUUsQ0FBQyxzQkFBRCxFQUF5QkYsU0FBekIsRUFBb0NNLElBQXBDLENBQXlDLEdBQXpDLENBSlA7QUFLSixNQUFBLE9BQU8sRUFBRUwsT0FMTCxDQU1KO0FBQ0E7QUFQSTtBQVFKLE1BQUEsUUFBUSxFQUFFRSxRQUFRLElBQUksQ0FBQztBQVJuQixRQVVGQyxRQVZFLENBQVI7QUFZSDs7QUF6Q2tFIiwic291cmNlc0NvbnRlbnQiOlsiLypcbkNvcHlyaWdodCAyMDE4IE5ldyBWZWN0b3IgTHRkXG5Db3B5cmlnaHQgMjAyMCBUaGUgTWF0cml4Lm9yZyBGb3VuZGF0aW9uIEMuSS5DLlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBSZWFjdCwgeyBIVE1MQXR0cmlidXRlcywgV2hlZWxFdmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbnRlcmZhY2UgSVByb3BzIGV4dGVuZHMgT21pdDxIVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4sIFwib25TY3JvbGxcIj4ge1xuICAgIGNsYXNzTmFtZT86IHN0cmluZztcbiAgICBvblNjcm9sbD86IChldmVudDogRXZlbnQpID0+IHZvaWQ7XG4gICAgb25XaGVlbD86IChldmVudDogV2hlZWxFdmVudCkgPT4gdm9pZDtcbiAgICBzdHlsZT86IFJlYWN0LkNTU1Byb3BlcnRpZXM7XG4gICAgdGFiSW5kZXg/OiBudW1iZXI7XG4gICAgd3JhcHBlZFJlZj86IChyZWY6IEhUTUxEaXZFbGVtZW50KSA9PiB2b2lkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBdXRvSGlkZVNjcm9sbGJhciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxJUHJvcHM+IHtcbiAgICBwcml2YXRlIGNvbnRhaW5lclJlZjogUmVhY3QuUmVmT2JqZWN0PEhUTUxEaXZFbGVtZW50PiA9IFJlYWN0LmNyZWF0ZVJlZigpO1xuXG4gICAgcHVibGljIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICBpZiAodGhpcy5jb250YWluZXJSZWYuY3VycmVudCAmJiB0aGlzLnByb3BzLm9uU2Nyb2xsKSB7XG4gICAgICAgICAgICAvLyBVc2luZyB0aGUgcGFzc2l2ZSBvcHRpb24gdG8gbm90IGJsb2NrIHRoZSBtYWluIHRocmVhZFxuICAgICAgICAgICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0V2ZW50VGFyZ2V0L2FkZEV2ZW50TGlzdGVuZXIjaW1wcm92aW5nX3Njcm9sbGluZ19wZXJmb3JtYW5jZV93aXRoX3Bhc3NpdmVfbGlzdGVuZXJzXG4gICAgICAgICAgICB0aGlzLmNvbnRhaW5lclJlZi5jdXJyZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgdGhpcy5wcm9wcy5vblNjcm9sbCwgeyBwYXNzaXZlOiB0cnVlIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMucHJvcHMud3JhcHBlZFJlZikge1xuICAgICAgICAgICAgdGhpcy5wcm9wcy53cmFwcGVkUmVmKHRoaXMuY29udGFpbmVyUmVmLmN1cnJlbnQpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgICBpZiAodGhpcy5jb250YWluZXJSZWYuY3VycmVudCAmJiB0aGlzLnByb3BzLm9uU2Nyb2xsKSB7XG4gICAgICAgICAgICB0aGlzLmNvbnRhaW5lclJlZi5jdXJyZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgdGhpcy5wcm9wcy5vblNjcm9sbCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0U2Nyb2xsVG9wKCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRhaW5lclJlZi5jdXJyZW50LnNjcm9sbFRvcDtcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVuZGVyKCkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXG4gICAgICAgIGNvbnN0IHsgY2xhc3NOYW1lLCBvblNjcm9sbCwgb25XaGVlbCwgc3R5bGUsIHRhYkluZGV4LCB3cmFwcGVkUmVmLCBjaGlsZHJlbiwgLi4ub3RoZXJQcm9wcyB9ID0gdGhpcy5wcm9wcztcblxuICAgICAgICByZXR1cm4gKDxkaXZcbiAgICAgICAgICAgIHsuLi5vdGhlclByb3BzfVxuICAgICAgICAgICAgcmVmPXt0aGlzLmNvbnRhaW5lclJlZn1cbiAgICAgICAgICAgIHN0eWxlPXtzdHlsZX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT17W1wibXhfQXV0b0hpZGVTY3JvbGxiYXJcIiwgY2xhc3NOYW1lXS5qb2luKFwiIFwiKX1cbiAgICAgICAgICAgIG9uV2hlZWw9e29uV2hlZWx9XG4gICAgICAgICAgICAvLyBGaXJlZm94IHNvbWV0aW1lcyBtYWtlcyB0aGlzIGVsZW1lbnQgZm9jdXNhYmxlIGR1ZSB0b1xuICAgICAgICAgICAgLy8gb3ZlcmZsb3c6c2Nyb2xsOywgc28gZm9yY2UgaXQgb3V0IG9mIHRhYiBvcmRlciBieSBkZWZhdWx0LlxuICAgICAgICAgICAgdGFiSW5kZXg9e3RhYkluZGV4ID8/IC0xfVxuICAgICAgICA+XG4gICAgICAgICAgICB7IGNoaWxkcmVuIH1cbiAgICAgICAgPC9kaXY+KTtcbiAgICB9XG59XG4iXX0=