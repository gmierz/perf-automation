"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _IconizedContextMenu = require("../views/context_menus/IconizedContextMenu");

var _languageHandler = require("../../languageHandler");

var _HostSignupStore = require("../../stores/HostSignupStore");

var _SdkConfig = _interopRequireDefault(require("../../SdkConfig"));

var _replaceableComponent = require("../../utils/replaceableComponent");

var _dec, _class;

let HostSignupAction = (_dec = (0, _replaceableComponent.replaceableComponent)("structures.HostSignupAction"), _dec(_class = class HostSignupAction extends _react.default.PureComponent {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "openDialog", async () => {
      var _this$props$onClick, _this$props;

      (_this$props$onClick = (_this$props = this.props).onClick) === null || _this$props$onClick === void 0 ? void 0 : _this$props$onClick.call(_this$props);
      await _HostSignupStore.HostSignupStore.instance.setHostSignupActive(true);
    });
  }

  render() {
    const hostSignupConfig = _SdkConfig.default.get().hostSignup;

    if (!(hostSignupConfig !== null && hostSignupConfig !== void 0 && hostSignupConfig.brand)) {
      return null;
    }

    return /*#__PURE__*/_react.default.createElement(_IconizedContextMenu.IconizedContextMenuOptionList, null, /*#__PURE__*/_react.default.createElement(_IconizedContextMenu.IconizedContextMenuOption, {
      iconClassName: "mx_UserMenu_iconHosting",
      label: (0, _languageHandler._t)("Upgrade to %(hostSignupBrand)s", {
        hostSignupBrand: hostSignupConfig.brand
      }),
      onClick: this.openDialog
    }));
  }

}) || _class);
exports.default = HostSignupAction;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3N0cnVjdHVyZXMvSG9zdFNpZ251cEFjdGlvbi50c3giXSwibmFtZXMiOlsiSG9zdFNpZ251cEFjdGlvbiIsIlJlYWN0IiwiUHVyZUNvbXBvbmVudCIsInByb3BzIiwib25DbGljayIsIkhvc3RTaWdudXBTdG9yZSIsImluc3RhbmNlIiwic2V0SG9zdFNpZ251cEFjdGl2ZSIsInJlbmRlciIsImhvc3RTaWdudXBDb25maWciLCJTZGtDb25maWciLCJnZXQiLCJob3N0U2lnbnVwIiwiYnJhbmQiLCJob3N0U2lnbnVwQnJhbmQiLCJvcGVuRGlhbG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQWdCQTs7QUFDQTs7QUFJQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztJQVNxQkEsZ0IsV0FEcEIsZ0RBQXFCLDZCQUFyQixDLGdCQUFELE1BQ3FCQSxnQkFEckIsU0FDOENDLGVBQU1DLGFBRHBELENBQ2tGO0FBQUE7QUFBQTtBQUFBLHNEQUN6RCxZQUFZO0FBQUE7O0FBQzdCLGlEQUFLQyxLQUFMLEVBQVdDLE9BQVg7QUFDQSxZQUFNQyxpQ0FBZ0JDLFFBQWhCLENBQXlCQyxtQkFBekIsQ0FBNkMsSUFBN0MsQ0FBTjtBQUNILEtBSjZFO0FBQUE7O0FBTXZFQyxFQUFBQSxNQUFNLEdBQW9CO0FBQzdCLFVBQU1DLGdCQUFnQixHQUFHQyxtQkFBVUMsR0FBVixHQUFnQkMsVUFBekM7O0FBQ0EsUUFBSSxFQUFDSCxnQkFBRCxhQUFDQSxnQkFBRCxlQUFDQSxnQkFBZ0IsQ0FBRUksS0FBbkIsQ0FBSixFQUE4QjtBQUMxQixhQUFPLElBQVA7QUFDSDs7QUFFRCx3QkFDSSw2QkFBQyxrREFBRCxxQkFDSSw2QkFBQyw4Q0FBRDtBQUNJLE1BQUEsYUFBYSxFQUFDLHlCQURsQjtBQUVJLE1BQUEsS0FBSyxFQUFFLHlCQUNILGdDQURHLEVBRUg7QUFDSUMsUUFBQUEsZUFBZSxFQUFFTCxnQkFBZ0IsQ0FBQ0k7QUFEdEMsT0FGRyxDQUZYO0FBUUksTUFBQSxPQUFPLEVBQUUsS0FBS0U7QUFSbEIsTUFESixDQURKO0FBY0g7O0FBMUI2RSxDIiwic291cmNlc0NvbnRlbnQiOlsiLypcbkNvcHlyaWdodCAyMDIxIFRoZSBNYXRyaXgub3JnIEZvdW5kYXRpb24gQy5JLkMuXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHtcbiAgICBJY29uaXplZENvbnRleHRNZW51T3B0aW9uLFxuICAgIEljb25pemVkQ29udGV4dE1lbnVPcHRpb25MaXN0LFxufSBmcm9tIFwiLi4vdmlld3MvY29udGV4dF9tZW51cy9JY29uaXplZENvbnRleHRNZW51XCI7XG5pbXBvcnQgeyBfdCB9IGZyb20gXCIuLi8uLi9sYW5ndWFnZUhhbmRsZXJcIjtcbmltcG9ydCB7IEhvc3RTaWdudXBTdG9yZSB9IGZyb20gXCIuLi8uLi9zdG9yZXMvSG9zdFNpZ251cFN0b3JlXCI7XG5pbXBvcnQgU2RrQ29uZmlnIGZyb20gXCIuLi8uLi9TZGtDb25maWdcIjtcbmltcG9ydCB7IHJlcGxhY2VhYmxlQ29tcG9uZW50IH0gZnJvbSBcIi4uLy4uL3V0aWxzL3JlcGxhY2VhYmxlQ29tcG9uZW50XCI7XG5cbmludGVyZmFjZSBJUHJvcHMge1xuICAgIG9uQ2xpY2s/KCk6IHZvaWQ7XG59XG5cbmludGVyZmFjZSBJU3RhdGUge31cblxuQHJlcGxhY2VhYmxlQ29tcG9uZW50KFwic3RydWN0dXJlcy5Ib3N0U2lnbnVwQWN0aW9uXCIpXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIb3N0U2lnbnVwQWN0aW9uIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudDxJUHJvcHMsIElTdGF0ZT4ge1xuICAgIHByaXZhdGUgb3BlbkRpYWxvZyA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgdGhpcy5wcm9wcy5vbkNsaWNrPy4oKTtcbiAgICAgICAgYXdhaXQgSG9zdFNpZ251cFN0b3JlLmluc3RhbmNlLnNldEhvc3RTaWdudXBBY3RpdmUodHJ1ZSk7XG4gICAgfTtcblxuICAgIHB1YmxpYyByZW5kZXIoKTogUmVhY3QuUmVhY3ROb2RlIHtcbiAgICAgICAgY29uc3QgaG9zdFNpZ251cENvbmZpZyA9IFNka0NvbmZpZy5nZXQoKS5ob3N0U2lnbnVwO1xuICAgICAgICBpZiAoIWhvc3RTaWdudXBDb25maWc/LmJyYW5kKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8SWNvbml6ZWRDb250ZXh0TWVudU9wdGlvbkxpc3Q+XG4gICAgICAgICAgICAgICAgPEljb25pemVkQ29udGV4dE1lbnVPcHRpb25cbiAgICAgICAgICAgICAgICAgICAgaWNvbkNsYXNzTmFtZT1cIm14X1VzZXJNZW51X2ljb25Ib3N0aW5nXCJcbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9e190KFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJVcGdyYWRlIHRvICUoaG9zdFNpZ251cEJyYW5kKXNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBob3N0U2lnbnVwQnJhbmQ6IGhvc3RTaWdudXBDb25maWcuYnJhbmQsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLm9wZW5EaWFsb2d9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvSWNvbml6ZWRDb250ZXh0TWVudU9wdGlvbkxpc3Q+XG4gICAgICAgICk7XG4gICAgfVxufVxuIl19